<!-- THIS FILE IS AUTO-GENERATED! DO NOT EDIT! -->

<metadata>

<!-- File: IO.Anyline.Opencv.Photo.CalibrateDebevec.cs -->
<!-- CalibrateDebevec.CalibrateDebevec(long) -->
<!-- CalibrateDebevec.setLambda(float) -->
<!-- CalibrateDebevec.setRandom(boolean) -->
<!-- CalibrateDebevec.setSamples(int) -->
<!-- File: IO.Anyline.Opencv.Utils.Converters.cs -->
<!-- Converters.Mat_to_vector_DMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.DMatch&gt;) -->
<!-- Converters.Mat_to_vector_KeyPoint(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.KeyPoint&gt;) -->
<!-- Converters.Mat_to_vector_Mat(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.Mat_to_vector_Point(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.Mat_to_vector_Point2d(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.Mat_to_vector_Point2f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.Mat_to_vector_Point3(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Point3d(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Point3f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Point3i(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Rect(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Rect&gt;) -->
<!-- Converters.Mat_to_vector_char(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.Mat_to_vector_double(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Double&gt;) -->
<!-- Converters.Mat_to_vector_float(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Float&gt;) -->
<!-- Converters.Mat_to_vector_int(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Integer&gt;) -->
<!-- Converters.Mat_to_vector_uchar(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.Mat_to_vector_vector_DMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;) -->
<!-- Converters.Mat_to_vector_vector_KeyPoint(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;) -->
<!-- Converters.Mat_to_vector_vector_Point(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;) -->
<!-- Converters.Mat_to_vector_vector_Point2f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint2f&gt;) -->
<!-- Converters.Mat_to_vector_vector_Point3f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint3f&gt;) -->
<!-- Converters.Mat_to_vector_vector_char(io.anyline.opencv.core.Mat, java.util.List&lt;java.util.List&lt;java.lang.Byte&gt;&gt;) -->
<!-- Converters.vector_DMatch_to_Mat(java.util.List&lt;io.anyline.opencv.core.DMatch&gt;) -->
<!-- Converters.vector_KeyPoint_to_Mat(java.util.List&lt;io.anyline.opencv.core.KeyPoint&gt;) -->
<!-- Converters.vector_Mat_to_Mat(java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_Point2d_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.vector_Point2f_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.vector_Point3_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;, int) -->
<!-- Converters.vector_Point3d_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.vector_Point3f_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.vector_Point3i_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.vector_Point_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.vector_Point_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;, int) -->
<!-- Converters.vector_Rect_to_Mat(java.util.List&lt;io.anyline.opencv.core.Rect&gt;) -->
<!-- Converters.vector_char_to_Mat(java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.vector_double_to_Mat(java.util.List&lt;java.lang.Double&gt;) -->
<!-- Converters.vector_float_to_Mat(java.util.List&lt;java.lang.Float&gt;) -->
<!-- Converters.vector_int_to_Mat(java.util.List&lt;java.lang.Integer&gt;) -->
<!-- Converters.vector_uchar_to_Mat(java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.vector_vector_DMatch_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_KeyPoint_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_Point2f_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfPoint2f&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_Point3f_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfPoint3f&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_Point_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_char_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfByte&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- File: IO.Anyline.Camera.IHighResolutionImageListener.cs -->
<!-- HighResolutionImageListener.onError(java.lang.Throwable) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageListener']/method[@name='onError' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]/parameter[1]" name="managedName">e</attr>
<!-- HighResolutionImageListener.onImageTaken(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageListener']/method[@name='onImageTaken' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">image</attr>
<!-- File: IO.Anyline.Nfc.Tools.AES.cs -->
<!-- AES.decrypt(byte[], byte[], byte[]) -->
<!-- AES.decrypt(byte[], byte[], byte[], int, int) -->
<!-- AES.encrypt(byte[], byte[], byte[]) -->
<!-- File: IO.Anyline.Opencv.Calib3d.StereoMatcher.cs -->
<!-- StereoMatcher.StereoMatcher(long) -->
<!-- StereoMatcher.setBlockSize(int) -->
<!-- StereoMatcher.setDisp12MaxDiff(int) -->
<!-- StereoMatcher.setMinDisparity(int) -->
<!-- StereoMatcher.setNumDisparities(int) -->
<!-- StereoMatcher.setSpeckleRange(int) -->
<!-- StereoMatcher.setSpeckleWindowSize(int) -->
<!-- StereoMatcher.compute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Camera.ICameraOpenListener.cs -->
<!-- CameraOpenListener.onCameraError(java.lang.Exception) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='CameraOpenListener']/method[@name='onCameraError' and count(parameter)=1 and parameter[1][@type='java.lang.Exception']]/parameter[1]" name="managedName">e</attr>
<!-- CameraOpenListener.onCameraOpened(io.anyline.camera.CameraController, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='CameraOpenListener']/method[@name='onCameraOpened' and count(parameter)=3 and parameter[1][@type='io.anyline.camera.CameraController'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">cameraController</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='CameraOpenListener']/method[@name='onCameraOpened' and count(parameter)=3 and parameter[1][@type='io.anyline.camera.CameraController'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='CameraOpenListener']/method[@name='onCameraOpened' and count(parameter)=3 and parameter[1][@type='io.anyline.camera.CameraController'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">height</attr>
<!-- File: IO.Anyline.Plugin.ID.IdScanViewPlugin.cs -->
<!-- IdScanViewPlugin.IdScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">scanViewPluginConfig</attr>
<!-- IdScanViewPlugin.IdScanViewPlugin(android.content.Context, io.anyline.view.ScanViewPluginConfig, io.anyline.plugin.id.IdConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig']]/parameter[2]" name="managedName">scanViewPluginConfig</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig']]/parameter[3]" name="managedName">idConfig</attr>
<!-- IdScanViewPlugin.IdScanViewPlugin(android.content.Context, io.anyline.view.ScanViewPluginConfig, io.anyline.plugin.id.IdConfig&lt;?, ?&gt;, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">scanViewPluginConfig</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">idConfig</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanViewPlugin']/constructor[@name='IdScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">id</attr>
<!-- File: IO.Anyline.Opencv.Core.CvType.cs -->
<!-- CvType.CV_16SC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_16SC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.CV_16UC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_16UC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.CV_32FC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_32FC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.CV_32SC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_32SC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.CV_64FC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_64FC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.CV_8SC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_8SC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.CV_8UC(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='CV_8UC' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">ch</attr>
<!-- CvType.ELEM_SIZE(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='ELEM_SIZE' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">type</attr>
<!-- CvType.channels(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='channels' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">type</attr>
<!-- CvType.depth(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='depth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">type</attr>
<!-- CvType.isInteger(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='isInteger' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">type</attr>
<!-- CvType.makeType(int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='makeType' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">depth</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='makeType' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">channels</attr>
<!-- CvType.typeToString(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='CvType']/method[@name='typeToString' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">type</attr>
<!-- File: IO.Anyline.Util.AssetUtil.cs -->
<!-- AssetUtil.copyAnylineAssets(android.content.Context, org.json.JSONObject, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[2]" name="managedName">json</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[3]" name="managedName">mapJsonName</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[4]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[5]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFileWithoutPath(android.content.Context, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFileWithoutPath(android.content.Context, java.lang.String, java.io.File, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyDirectory(java.io.File, java.io.File) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyDirectory' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File']]/parameter[1]" name="managedName">sourceDir</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyDirectory' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File']]/parameter[2]" name="managedName">destDir</attr>
<!-- AssetUtil.deleteDirectory(java.io.File) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='deleteDirectory' and count(parameter)=1 and parameter[1][@type='java.io.File']]/parameter[1]" name="managedName">directoryToBeDeleted</attr>
<!-- AssetUtil.fileExists(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='fileExists' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">path</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='fileExists' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- AssetUtil.getAnylineAssetsJson(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getAnylineAssetsJson' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getAnylineAssetsJson' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- AssetUtil.getRootPathForProduct(android.content.Context, io.anyline.products.Product) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getRootPathForProduct' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.products.Product']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getRootPathForProduct' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.products.Product']]/parameter[2]" name="managedName">product</attr>
<!-- AssetUtil.getRootPathForScanPlugin(android.content.Context, java.lang.Class&lt;?&gt;) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getRootPathForScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.Class&lt;?&gt;']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getRootPathForScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.Class&lt;?&gt;']]/parameter[2]" name="managedName">scanPluginClass</attr>
<!-- AssetUtil.readFile(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='readFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">path</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='readFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- File: IO.Anyline.Plugin.Barcode.PDF417.cs -->
<!-- PDF417.setAamvaVersion(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='PDF417']/method[@name='setAamvaVersion' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">aamvaVersion</attr>
<!-- PDF417.setAdditionalInformation(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='PDF417']/method[@name='setAdditionalInformation' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">additionalInformation</attr>
<!-- PDF417.setBody(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='PDF417']/method[@name='setBody' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">body</attr>
<!-- File: IO.Anyline.Models.AnylineYuvImage.cs -->
<!-- AnylineYuvImage.AnylineYuvImage(android.media.Image, int, int, int, int, int, boolean) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[1]" name="managedName">image</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[2]" name="managedName">targetOrientation</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[3]" name="managedName">cropX</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[4]" name="managedName">cropY</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[5]" name="managedName">cropWidth</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[6]" name="managedName">cropHeight</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[7]" name="managedName">isGreyOnly</attr>
<!-- AnylineYuvImage.AnylineYuvImage(int, int, int, byte[], int, boolean) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[1]" name="managedName">format</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[2]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[3]" name="managedName">height</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[4]" name="managedName">data</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[5]" name="managedName">targetOrientation</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[6]" name="managedName">isGreyOnly</attr>
<!-- AnylineYuvImage.AnylineYuvImage(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">format</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">height</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">targetOrientation</attr>
<!-- AnylineYuvImage.crop(int, int, int, int, boolean) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[1]" name="managedName">cropX</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[2]" name="managedName">cropY</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[3]" name="managedName">cropWidth</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[4]" name="managedName">cropHeight</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[5]" name="managedName">isGreyOnly</attr>
<!-- AnylineYuvImage.setTo(byte[]) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='setTo' and count(parameter)=1 and parameter[1][@type='byte[]']]/parameter[1]" name="managedName">data</attr>
<!-- File: IO.Anyline.Plugin.Meter.MeterScanPlugin.cs -->
<!-- MeterScanPlugin.MeterScanPlugin(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanPlugin']/constructor[@name='MeterScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanPlugin']/constructor[@name='MeterScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- MeterScanPlugin.setScanMode(io.anyline.plugin.meter.MeterScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanPlugin']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.meter.MeterScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- MeterScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- MeterScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- MeterScanPlugin.setSerialNumberCharWhitelist(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanPlugin']/method[@name='setSerialNumberCharWhitelist' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">whiteList</attr>
<!-- MeterScanPlugin.setSerialNumberValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanPlugin']/method[@name='setSerialNumberValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">regexString</attr>
<!-- File: IO.Anyline.Plugin.Licenseplate.LicensePlateScanViewPlugin.cs -->
<!-- LicensePlateScanViewPlugin.LicensePlateScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanViewPlugin']/constructor[@name='LicensePlateScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanViewPlugin']/constructor[@name='LicensePlateScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanViewPlugin']/constructor[@name='LicensePlateScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">config</attr>
<!-- LicensePlateScanViewPlugin.LicensePlateScanViewPlugin(android.content.Context, io.anyline.view.ScanViewPluginConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanViewPlugin']/constructor[@name='LicensePlateScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanViewPlugin']/constructor[@name='LicensePlateScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">config</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanViewPlugin']/constructor[@name='LicensePlateScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- File: IO.Anyline.View.ScanViewPluginConfig.cs -->
<!-- ScanViewPluginConfig.ScanViewPluginConfig(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/constructor[@name='ScanViewPluginConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/constructor[@name='ScanViewPluginConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">configFileName</attr>
<!-- ScanViewPluginConfig.ScanViewPluginConfig(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/constructor[@name='ScanViewPluginConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/constructor[@name='ScanViewPluginConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">json</attr>
<!-- ScanViewPluginConfig.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isCancelOnResult</attr>
<!-- ScanViewPluginConfig.setDelayStartScanTime(double) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/method[@name='setDelayStartScanTime' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">delayStartScanTime</attr>
<!-- ScanViewPluginConfig.setReportedCropRect(io.anyline.opencv.core.Rect) -->
<!-- ScanViewPluginConfig.setScale(float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/method[@name='setScale' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">scale</attr>
<!-- ScanViewPluginConfig.setVisualFeedbackConfig(io.anyline.camera.VisualFeedbackConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/method[@name='setVisualFeedbackConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.VisualFeedbackConfig']]/parameter[1]" name="managedName">visualFeedbackConfig</attr>
<!-- ScanViewPluginConfig.init(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/method[@name='init' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewPluginConfig']/method[@name='init' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">json</attr>
<!-- File: IO.Anyline.Plugin.Ocr.AnylineOcrConfig.cs -->
<!-- AnylineOcrConfig.AnylineOcrRegex.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig.AnylineOcrRegex']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- AnylineOcrConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- AnylineOcrConfig.AnylineOcrConfig(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/constructor[@name='AnylineOcrConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/constructor[@name='AnylineOcrConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">configFileName</attr>
<!-- AnylineOcrConfig.AnylineOcrConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/constructor[@name='AnylineOcrConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- AnylineOcrConfig.setCharCountX(int) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCharCountX' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">charCountX</attr>
<!-- AnylineOcrConfig.setCharCountY(int) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCharCountY' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">charCountY</attr>
<!-- AnylineOcrConfig.setCharPaddingXFactor(double) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCharPaddingXFactor' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">charPaddingXFactor</attr>
<!-- AnylineOcrConfig.setCharPaddingYFactor(double) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCharPaddingYFactor' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">charPaddingYFactor</attr>
<!-- AnylineOcrConfig.setCharWhitelist(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCharWhitelist' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">charWhitelist</attr>
<!-- AnylineOcrConfig.setCustomCmdFile(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCustomCmdFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">customCmdFile</attr>
<!-- AnylineOcrConfig.setCustomScript(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setCustomScript' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">customScript</attr>
<!-- AnylineOcrConfig.setMaxCharHeight(int) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setMaxCharHeight' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">maxCharHeight</attr>
<!-- AnylineOcrConfig.setMinCharHeight(int) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setMinCharHeight' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">minCharHeight</attr>
<!-- AnylineOcrConfig.setMinConfidence(int) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- AnylineOcrConfig.setMinSharpness(int) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setMinSharpness' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">minSharpness</attr>
<!-- AnylineOcrConfig.setModel(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setModel' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">model</attr>
<!-- AnylineOcrConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- AnylineOcrConfig.initFromJsonObject(org.json.JSONObject) -->
<!-- AnylineOcrConfig.setScanMode(io.anyline.plugin.ocr.AnylineOcrConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineOcrConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ocr.AnylineOcrConfig.ScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- File: IO.Anyline.Camera.SimpleZoomHandlerBuilder.cs -->
<!-- SimpleZoomHandlerBuilder.forView(android.view.View, int, io.anyline.camera.CameraController) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandlerBuilder']/method[@name='forView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[1]" name="managedName">touchableView</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandlerBuilder']/method[@name='forView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[2]" name="managedName">currentZoomlevel</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandlerBuilder']/method[@name='forView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[3]" name="managedName">cameraController</attr>
<!-- SimpleZoomHandlerBuilder.setMaxZoom(float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandlerBuilder']/method[@name='setMaxZoom' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">maxZoom</attr>
<!-- SimpleZoomHandlerBuilder.setZoomListener(io.anyline.camera.SimpleZoomHandler.IZoomHandlerListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandlerBuilder']/method[@name='setZoomListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.SimpleZoomHandler.IZoomHandlerListener']]/parameter[1]" name="managedName">listener</attr>
<!-- File: IO.Anyline.Opencv.Imgproc.Subdiv2D.cs -->
<!-- Subdiv2D.Subdiv2D(io.anyline.opencv.core.Rect) -->
<!-- Subdiv2D.Subdiv2D(long) -->
<!-- Subdiv2D.edgeDst(int) -->
<!-- Subdiv2D.edgeDst(int, io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.edgeOrg(int) -->
<!-- Subdiv2D.edgeOrg(int, io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.findNearest(io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.findNearest(io.anyline.opencv.core.Point, io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.getEdge(int, int) -->
<!-- Subdiv2D.getEdgeList(io.anyline.opencv.core.MatOfFloat4) -->
<!-- Subdiv2D.getTriangleList(io.anyline.opencv.core.MatOfFloat6) -->
<!-- Subdiv2D.getVertex(int) -->
<!-- Subdiv2D.getVertex(int, int[]) -->
<!-- Subdiv2D.getVoronoiFacetList(io.anyline.opencv.core.MatOfInt, java.util.List&lt;io.anyline.opencv.core.MatOfPoint2f&gt;, io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Subdiv2D.initDelaunay(io.anyline.opencv.core.Rect) -->
<!-- Subdiv2D.insert(io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Subdiv2D.insert(io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.locate(io.anyline.opencv.core.Point, int[], int[]) -->
<!-- Subdiv2D.nextEdge(int) -->
<!-- Subdiv2D.rotateEdge(int, int) -->
<!-- Subdiv2D.symEdge(int) -->
<!-- File: IO.Anyline.AnylineSDK.cs -->
<!-- AnylineSDK.TrainerEnvironment.valueOf(java.lang.String) -->
<!-- AnylineSDK.init(java.lang.String, android.content.Context) -->
<!-- File: IO.Anyline.Opencv.Photo.TonemapDurand.cs -->
<!-- TonemapDurand.TonemapDurand(long) -->
<!-- TonemapDurand.setContrast(float) -->
<!-- TonemapDurand.setSaturation(float) -->
<!-- TonemapDurand.setSigmaColor(float) -->
<!-- TonemapDurand.setSigmaSpace(float) -->
<!-- File: IO.Anyline.Opencv.ML.RTrees.cs -->
<!-- RTrees.RTrees(long) -->
<!-- RTrees.setActiveVarCount(int) -->
<!-- RTrees.setCalculateVarImportance(boolean) -->
<!-- RTrees.setTermCriteria(io.anyline.opencv.core.TermCriteria) -->
<!-- File: IO.Anyline.Plugin.ID.MrzConfig.cs -->
<!-- MrzConfig.setCropAndTransformID(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzConfig']/method[@name='setCropAndTransformID' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">cropAndTransformID</attr>
<!-- MrzConfig.setStrictMode(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzConfig']/method[@name='setStrictMode' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">strictMode</attr>
<!-- File: IO.Anyline.Util.TempFileUtil.cs -->
<!-- TempFileUtil.createTempFileCheckCache(android.content.Context, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='TempFileUtil']/method[@name='createTempFileCheckCache' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='TempFileUtil']/method[@name='createTempFileCheckCache' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">fileNamePrefix</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='TempFileUtil']/method[@name='createTempFileCheckCache' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">fileNameSuffix</attr>
<!-- File: IO.Anyline.Util.ImageToCutoutCropper.cs -->
<!-- ImageToCutoutCropper.cropImage(io.anyline.models.AnylineYuvImage, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageToCutoutCropper']/method[@name='cropImage' and count(parameter)=5 and parameter[1][@type='io.anyline.models.AnylineYuvImage'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]/parameter[1]" name="managedName">image</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageToCutoutCropper']/method[@name='cropImage' and count(parameter)=5 and parameter[1][@type='io.anyline.models.AnylineYuvImage'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]/parameter[2]" name="managedName">imageCropX</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageToCutoutCropper']/method[@name='cropImage' and count(parameter)=5 and parameter[1][@type='io.anyline.models.AnylineYuvImage'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]/parameter[3]" name="managedName">imageCropY</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageToCutoutCropper']/method[@name='cropImage' and count(parameter)=5 and parameter[1][@type='io.anyline.models.AnylineYuvImage'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]/parameter[4]" name="managedName">imageCropWidth</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageToCutoutCropper']/method[@name='cropImage' and count(parameter)=5 and parameter[1][@type='io.anyline.models.AnylineYuvImage'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]/parameter[5]" name="managedName">imageCropHeight</attr>
<!-- File: IO.Anyline.Plugin.Document.DocumentScanState.cs -->
<!-- DocumentScanState.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanState']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.View.IUIChangeListener.cs -->
<!-- UIChangeListener.drawVisualFeedback(java.lang.Object, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/interface[@name='UIChangeListener']/method[@name='drawVisualFeedback' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">reportedObject</attr>
<attr path="/api/package[@name='io.anyline.view']/interface[@name='UIChangeListener']/method[@name='drawVisualFeedback' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- UIChangeListener.onCutoutChanged(io.anyline.view.CutoutRect) -->
<attr path="/api/package[@name='io.anyline.view']/interface[@name='UIChangeListener']/method[@name='onCutoutChanged' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutRect']]/parameter[1]" name="managedName">cutoutRect</attr>
<!-- UIChangeListener.onCutoutVisibility(java.lang.String, boolean) -->
<attr path="/api/package[@name='io.anyline.view']/interface[@name='UIChangeListener']/method[@name='onCutoutVisibility' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/interface[@name='UIChangeListener']/method[@name='onCutoutVisibility' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- File: IO.Anyline.Nfc.TagProvider.cs -->
<!-- TagProvider.setTag(android.nfc.tech.IsoDep) -->
<!-- TagProvider.setTimeout(int) -->
<!-- TagProvider.transceive(byte[]) -->
<!-- File: IO.Anyline.View.AnylineWebView.cs -->
<!-- AnylineWebView.AnylineWebView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/constructor[@name='AnylineWebView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- AnylineWebView.drawDocument(java.util.List&lt;android.graphics.PointF&gt;, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='drawDocument' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">reportedShape</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='drawDocument' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- AnylineWebView.drawFeedback(java.util.List&lt;android.graphics.PointF&gt;, io.anyline.opencv.core.Rect, float, float, java.lang.String, java.lang.String, int, int, io.anyline.camera.VisualFeedbackConfig.FeedbackStyle, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='drawFeedback' and count(parameter)=10 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='io.anyline.camera.VisualFeedbackConfig.FeedbackStyle'] and parameter[10][@type='android.graphics.Rect']]/parameter[1]" name="managedName">shape</attr>
<!-- AnylineWebView.getScaleWebView(android.webkit.WebView) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getScaleWebView' and count(parameter)=1 and parameter[1][@type='android.webkit.WebView']]/parameter[1]" name="managedName">webView</attr>
<!-- AnylineWebView.getViewRelativePointListFromCutoutRelativeShape(java.util.List&lt;android.graphics.PointF&gt;, java.lang.String, io.anyline.opencv.core.Rect, int, int, float, android.graphics.Rect, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[1]" name="managedName">shape</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[3]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[4]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[5]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[6]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[7]" name="managedName">rectOnVisibleView</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[8]" name="managedName">scanViewPluginScale</attr>
<!-- AnylineWebView.initConfig(io.anyline.view.AbstractBaseScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='initConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.view.AbstractBaseScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- AnylineWebView.loadJavascript(java.lang.String) -->
<!-- AnylineWebView.setCameraView(io.anyline.camera.CameraView) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setCameraView' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraView']]/parameter[1]" name="managedName">cameraView</attr>
<!-- AnylineWebView.setRectRelativeToCutout(android.graphics.RectF, float, io.anyline.opencv.core.Rect, float, java.lang.String, io.anyline.opencv.core.Rect, int, int, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[1]" name="managedName">rect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[2]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[3]" name="managedName">reportedRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[4]" name="managedName">resizeScale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[5]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[6]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[7]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[8]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[9]" name="managedName">cutoutRectOnView</attr>
<!-- AnylineWebView.setScanDelayTime(double, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setScanDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">delayTime</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='setScanDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- AnylineWebView.updateContours(java.lang.Object, float, float, java.lang.String, io.anyline.opencv.core.Rect, int, int, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[1]" name="managedName">contours</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[2]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[3]" name="managedName">resizeScale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[4]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[5]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[6]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[7]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[8]" name="managedName">rectOnVisibleView</attr>
<!-- AnylineWebView.updateCutouts(java.lang.String, boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateCutouts' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateCutouts' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- AnylineWebView.updateShape(java.util.List&lt;android.graphics.PointF&gt;, io.anyline.opencv.core.Rect, float, java.lang.String, int, int, android.graphics.Rect, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[1]" name="managedName">reportedShape</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[2]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[3]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[4]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[5]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[6]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[7]" name="managedName">rectOnVisibleView</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[8]" name="managedName">scanViewPluginScale</attr>
<!-- File: IO.Anyline.Util.ArrayUtil.cs -->
<!-- ArrayUtil.contains(float[], float) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='ArrayUtil']/method[@name='contains' and count(parameter)=2 and parameter[1][@type='float[]'] and parameter[2][@type='float']]/parameter[1]" name="managedName">values</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ArrayUtil']/method[@name='contains' and count(parameter)=2 and parameter[1][@type='float[]'] and parameter[2][@type='float']]/parameter[2]" name="managedName">value</attr>
<!-- ArrayUtil.contains(int[], int) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='ArrayUtil']/method[@name='contains' and count(parameter)=2 and parameter[1][@type='int[]'] and parameter[2][@type='int']]/parameter[1]" name="managedName">values</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ArrayUtil']/method[@name='contains' and count(parameter)=2 and parameter[1][@type='int[]'] and parameter[2][@type='int']]/parameter[2]" name="managedName">value</attr>
<!-- ArrayUtil.contains(T[], T) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='ArrayUtil']/method[@name='contains' and count(parameter)=2 and parameter[1][@type='T[]'] and parameter[2][@type='T']]/parameter[1]" name="managedName">values</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ArrayUtil']/method[@name='contains' and count(parameter)=2 and parameter[1][@type='T[]'] and parameter[2][@type='T']]/parameter[2]" name="managedName">value</attr>
<!-- File: IO.Anyline.Plugin.Ocr.OcrScanViewPlugin.cs -->
<!-- OcrScanViewPlugin.OcrScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">config</attr>
<!-- OcrScanViewPlugin.OcrScanViewPlugin(android.content.Context, io.anyline.plugin.ocr.AnylineOcrBaseConfig, io.anyline.view.ScanViewPluginConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">ocrConfig</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">config</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/constructor[@name='OcrScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">id</attr>
<!-- OcrScanViewPlugin.setAnylineOcrConfig(io.anyline.plugin.ocr.AnylineOcrBaseConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/method[@name='setAnylineOcrConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig']]/parameter[1]" name="managedName">config</attr>
<!-- OcrScanViewPlugin.copyTrainedData(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/method[@name='copyTrainedData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">fileName</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanViewPlugin']/method[@name='copyTrainedData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileHash</attr>
<!-- File: IO.Anyline.Opencv.Photo.AlignMTB.cs -->
<!-- AlignMTB.AlignMTB(long) -->
<!-- AlignMTB.setCut(boolean) -->
<!-- AlignMTB.setExcludeRange(int) -->
<!-- AlignMTB.setMaxBits(int) -->
<!-- AlignMTB.calculateShift(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- AlignMTB.computeBitmaps(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- AlignMTB.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- AlignMTB.shiftMat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point) -->
<!-- File: IO.Anyline.View.ScanViewCameraConfig.cs -->
<!-- ScanViewCameraConfig.ScanViewCameraConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/constructor[@name='ScanViewCameraConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- ScanViewCameraConfig.setDefaultLensFacing(io.anyline.camera.CameraFeatures.LensFacing) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setDefaultLensFacing' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.LensFacing']]/parameter[1]" name="managedName">defaultLensFacing</attr>
<!-- ScanViewCameraConfig.setFallbackLensFacings(java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setFallbackLensFacings' and count(parameter)=1 and parameter[1][@type='java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;']]/parameter[1]" name="managedName">fallbackLensFacings</attr>
<!-- ScanViewCameraConfig.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- ScanViewCameraConfig.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- ScanViewCameraConfig.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- ScanViewCameraConfig.setPreferredPictureHeight(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setPreferredPictureHeight' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPictureHeight</attr>
<!-- ScanViewCameraConfig.setPreferredPictureWidth(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setPreferredPictureWidth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPictureWidth</attr>
<!-- ScanViewCameraConfig.setPreferredPreviewHeight(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setPreferredPreviewHeight' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPreviewHeight</attr>
<!-- ScanViewCameraConfig.setPreferredPreviewWidth(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setPreferredPreviewWidth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPreviewWidth</attr>
<!-- ScanViewCameraConfig.setZoomGestureEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setZoomGestureEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">zoomGestureEnabled</attr>
<!-- ScanViewCameraConfig.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewCameraConfig']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomRatio</attr>
<!-- File: IO.Anyline.Plugin.Document.IDocumentScanResultListener.cs -->
<!-- DocumentScanResultListener.onDocumentOutlineDetected(java.util.List&lt;android.graphics.PointF&gt;, boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onDocumentOutlineDetected' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">corners</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onDocumentOutlineDetected' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">documentShapeAndBrightnessValid</attr>
<!-- DocumentScanResultListener.onPictureCornersDetected(io.anyline.models.AnylineImage, java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPictureCornersDetected' and count(parameter)=2 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">fullFrame</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPictureCornersDetected' and count(parameter)=2 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[2]" name="managedName">corners</attr>
<!-- DocumentScanResultListener.onPictureProcessingFailure(io.anyline.plugin.document.DocumentScanViewPlugin.DocumentError) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPictureProcessingFailure' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.document.DocumentScanViewPlugin.DocumentError']]/parameter[1]" name="managedName">error</attr>
<!-- DocumentScanResultListener.onPictureTransformError(io.anyline.plugin.document.DocumentScanViewPlugin.DocumentError) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPictureTransformError' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.document.DocumentScanViewPlugin.DocumentError']]/parameter[1]" name="managedName">error</attr>
<!-- DocumentScanResultListener.onPictureTransformed(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPictureTransformed' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">transformedImage</attr>
<!-- DocumentScanResultListener.onPreviewProcessingFailure(io.anyline.plugin.document.DocumentScanViewPlugin.DocumentError) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPreviewProcessingFailure' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.document.DocumentScanViewPlugin.DocumentError']]/parameter[1]" name="managedName">error</attr>
<!-- DocumentScanResultListener.onPreviewProcessingSuccess(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onPreviewProcessingSuccess' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">anylineImage</attr>
<!-- DocumentScanResultListener.onTakePictureError(java.lang.Throwable) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentScanResultListener']/method[@name='onTakePictureError' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]/parameter[1]" name="managedName">error</attr>
<!-- File: IO.Anyline.Opencv.ML.EM.cs -->
<!-- EM.EM(long) -->
<!-- EM.setClustersNumber(int) -->
<!-- EM.setCovarianceMatrixType(int) -->
<!-- EM.setTermCriteria(io.anyline.opencv.core.TermCriteria) -->
<!-- EM.getCovs(java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- EM.predict2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- EM.trainE(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- EM.trainE(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- EM.trainEM(io.anyline.opencv.core.Mat) -->
<!-- EM.trainEM(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- EM.trainM(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- EM.trainM(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Plugin.Barcode.BarcodeScanViewPlugin.cs -->
<!-- BarcodeScanViewPlugin.BarcodeScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/constructor[@name='BarcodeScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/constructor[@name='BarcodeScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/constructor[@name='BarcodeScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">config</attr>
<!-- BarcodeScanViewPlugin.BarcodeScanViewPlugin(android.content.Context, io.anyline.view.ScanViewPluginConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/constructor[@name='BarcodeScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/constructor[@name='BarcodeScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">config</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/constructor[@name='BarcodeScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- BarcodeScanViewPlugin.addScannedBarcodesListener(io.anyline.plugin.barcode.ScannedBarcodesListener) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/method[@name='addScannedBarcodesListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.ScannedBarcodesListener']]/parameter[1]" name="managedName">listener</attr>
<!-- BarcodeScanViewPlugin.setBarcodeFormats(io.anyline.plugin.barcode.BarcodeFormat...) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/method[@name='setBarcodeFormats' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeFormat...']]/parameter[1]" name="managedName">formats</attr>
<!-- BarcodeScanViewPlugin.setMultiBarcode(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanViewPlugin']/method[@name='setMultiBarcode' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">multiBarcode</attr>
<!-- File: IO.Anyline.Nfc.Parser.TagParser.cs -->
<!-- TagParser.TagParser(byte[]) -->
<!-- TagParser.geTag(java.lang.String) -->
<!-- TagParser.parseElement(byte[]) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfFloat4.cs -->
<!-- MatOfFloat4.MatOfFloat4(float...) -->
<!-- MatOfFloat4.MatOfFloat4(io.anyline.opencv.core.Mat) -->
<!-- MatOfFloat4.MatOfFloat4(long) -->
<!-- MatOfFloat4.alloc(int) -->
<!-- MatOfFloat4.fromArray(float...) -->
<!-- MatOfFloat4.fromList(java.util.List&lt;java.lang.Float&gt;) -->
<!-- MatOfFloat4.fromNativeAddr(long) -->
<!-- File: IO.Anyline.View.CutoutRect.cs -->
<!-- CutoutRect.CutoutRect(android.content.Context, io.anyline.view.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/constructor[@name='CutoutRect' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.CutoutConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/constructor[@name='CutoutRect' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.CutoutConfig']]/parameter[2]" name="managedName">config</attr>
<!-- CutoutRect.calcCutOutAndImageCropBounds(int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[1]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[2]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[3]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[4]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[5]" name="managedName">scale</attr>
<!-- File: IO.Anyline.Camera.IImageListener.cs -->
<!-- ImageListener.onImageAvailable(io.anyline.camera.ImageReceiver) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='ImageListener']/method[@name='onImageAvailable' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.ImageReceiver']]/parameter[1]" name="managedName">imageReceiver</attr>
<!-- File: IO.Anyline.Plugin.ID.AlphabetMapper.cs -->
<!-- AlphabetMapper.map(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='AlphabetMapper']/method[@name='map' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">objectToMap</attr>
<!-- File: IO.Anyline.Plugin.ID.LayoutDefinition.cs -->
<!-- LayoutDefinition.LayoutDefinition(java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='LayoutDefinition']/constructor[@name='LayoutDefinition' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">type</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='LayoutDefinition']/constructor[@name='LayoutDefinition' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">country</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='LayoutDefinition']/constructor[@name='LayoutDefinition' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">layout</attr>
<!-- LayoutDefinition.setCountry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='LayoutDefinition']/method[@name='setCountry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">country</attr>
<!-- LayoutDefinition.setLayout(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='LayoutDefinition']/method[@name='setLayout' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">layout</attr>
<!-- LayoutDefinition.setType(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='LayoutDefinition']/method[@name='setType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">type</attr>
<!-- File: IO.Anyline.Plugin.Ocr.AnylineCattleTagConfig.cs -->
<!-- File: IO.Anyline.Util.StringUtil.cs -->
<!-- StringUtil.convertToASCII(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='StringUtil']/method[@name='convertToASCII' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">str</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfRect.cs -->
<!-- MatOfRect.MatOfRect(io.anyline.opencv.core.Mat) -->
<!-- MatOfRect.MatOfRect(io.anyline.opencv.core.Rect...) -->
<!-- MatOfRect.MatOfRect(long) -->
<!-- MatOfRect.alloc(int) -->
<!-- MatOfRect.fromArray(io.anyline.opencv.core.Rect...) -->
<!-- MatOfRect.fromList(java.util.List&lt;io.anyline.opencv.core.Rect&gt;) -->
<!-- MatOfRect.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Opencv.Android.FpsMeter.cs -->
<!-- FpsMeter.draw(android.graphics.Canvas, float, float) -->
<!-- FpsMeter.setResolution(int, int) -->
<!-- File: IO.Anyline.Nfc.NFC.DataGroup1.cs -->
<!-- DataGroup1.DataGroup1(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<!-- DataGroup1.setDateOfBirth(java.lang.String) -->
<!-- DataGroup1.setDateOfExpiry(java.lang.String) -->
<!-- DataGroup1.setDocumentNumber(java.lang.String) -->
<!-- DataGroup1.setDocumentType(java.lang.String) -->
<!-- DataGroup1.setFirstName(java.lang.String) -->
<!-- DataGroup1.setGender(java.lang.String) -->
<!-- DataGroup1.setIssuingStateCode(java.lang.String) -->
<!-- DataGroup1.setLastName(java.lang.String) -->
<!-- DataGroup1.setNationality(java.lang.String) -->
<!-- File: IO.Anyline.Util.JSUtil.cs -->
<!-- JSUtil.setupConfig(android.content.Context, java.lang.String, io.anyline.view.CutoutConfig, io.anyline.camera.VisualFeedbackConfig, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.view.CutoutConfig'] and parameter[4][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.view.CutoutConfig'] and parameter[4][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.view.CutoutConfig'] and parameter[4][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[3]" name="managedName">cutoutConfig</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.view.CutoutConfig'] and parameter[4][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[4]" name="managedName">visualFeedbackConfig</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.view.CutoutConfig'] and parameter[4][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[5]" name="managedName">rect</attr>
<!-- JSUtil.setupDelayTime(double, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">delayTime</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- JSUtil.setupMask(io.anyline.view.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupMask' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutConfig']]/parameter[1]" name="managedName">cutoutConfig</attr>
<!-- JSUtil.setupParallelConfig(android.content.Context, java.util.ArrayList&lt;java.lang.String&gt;, java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;, java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;, java.util.ArrayList&lt;android.graphics.Rect&gt;) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[2]" name="managedName">ids</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[3]" name="managedName">cutoutConfigs</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[4]" name="managedName">visualFeedbackConfigs</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[5]" name="managedName">rects</attr>
<!-- JSUtil.setupSerialConfig(android.content.Context, java.util.ArrayList&lt;java.lang.String&gt;, java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;, java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;, java.util.ArrayList&lt;android.graphics.Rect&gt;) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[2]" name="managedName">ids</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[3]" name="managedName">cutoutConfigs</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[4]" name="managedName">visualFeedbackConfigs</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline.view.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline.camera.VisualFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[5]" name="managedName">rects</attr>
<!-- JSUtil.updateCutout(java.lang.String, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateCutout' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateCutout' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- JSUtil.updateDocumentColorsFeedback(io.anyline.camera.VisualFeedbackConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateDocumentColorsFeedback' and count(parameter)=2 and parameter[1][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">visualFeedbackConfig</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateDocumentColorsFeedback' and count(parameter)=2 and parameter[1][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- JSUtil.updateFeedback(java.util.ArrayList&lt;android.graphics.RectF&gt;, android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateFeedback' and count(parameter)=3 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.RectF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">rectFs</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateFeedback' and count(parameter)=3 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.RectF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateFeedback' and count(parameter)=3 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.RectF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- JSUtil.updateFeedbackShape(java.util.List&lt;android.graphics.PointF&gt;, android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateFeedbackShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">points</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateFeedbackShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSUtil']/method[@name='updateFeedbackShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- File: IO.Anyline.View.DebugUtil.cs -->
<!-- DebugUtil.isVariableAllowedForDebugReporting(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Photo.TonemapReinhard.cs -->
<!-- TonemapReinhard.TonemapReinhard(long) -->
<!-- TonemapReinhard.setColorAdaptation(float) -->
<!-- TonemapReinhard.setIntensity(float) -->
<!-- TonemapReinhard.setLightAdaptation(float) -->
<!-- File: IO.Anyline.View.ICutoutConfigChangedListener.cs -->
<!-- CutoutConfigChangedListener.onCutoutConfigChanged(io.anyline.view.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline.view']/interface[@name='CutoutConfigChangedListener']/method[@name='onCutoutConfigChanged' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutConfig']]/parameter[1]" name="managedName">cutoutConfig</attr>
<!-- File: IO.Anyline.Plugin.ID.JapaneseLandingPermissionConfig.cs -->
<!-- JapaneseLandingPermissionConfig.JapaneseLandingPermissionConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='JapaneseLandingPermissionConfig']/constructor[@name='JapaneseLandingPermissionConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">japaneseLandingPermissionConfig</attr>
<!-- File: IO.Anyline.Camera.CameraController2.cs -->
<!-- CameraController2.State.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2.State']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraController2.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomLevelRatio</attr>
<!-- CameraController2.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setCameraOrientation' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController.CameraOrientation']]/parameter[1]" name="managedName">cameraOrientation</attr>
<!-- CameraController2.setCustomZoomLevel(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setCustomZoomLevel' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomLevel</attr>
<!-- CameraController2.setFlashOn(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setFlashOn' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- CameraController2.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraController2.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[2]" name="managedName">cutOutRect</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[3]" name="managedName">surfaceWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[4]" name="managedName">surfaceHeight</attr>
<!-- CameraController2.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraController2.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraController2.setupZoomHandler(android.view.View) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='setupZoomHandler' and count(parameter)=1 and parameter[1][@type='android.view.View']]/parameter[1]" name="managedName">view</attr>
<!-- CameraController2.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController2']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">viewHeight</attr>
<!-- File: IO.Anyline.View.CutoutConfig.cs -->
<!-- CutoutConfig.AnimationStyle.fromInt(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig.AnimationStyle']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">style</attr>
<!-- CutoutConfig.AnimationStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig.AnimationStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CutoutConfig.CutoutAlignment.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig.CutoutAlignment']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">alignment</attr>
<!-- CutoutConfig.CutoutAlignment.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig.CutoutAlignment']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CutoutConfig.CutoutStyle.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig.CutoutStyle']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">cutoutStyle</attr>
<!-- CutoutConfig.CutoutStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig.CutoutStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CutoutConfig.CutoutConfig(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/constructor[@name='CutoutConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/constructor[@name='CutoutConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- CutoutConfig.setAlignment(io.anyline.view.CutoutConfig.CutoutAlignment) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setAlignment' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutConfig.CutoutAlignment']]/parameter[1]" name="managedName">alignment</attr>
<!-- CutoutConfig.setCornerRadiusInDp(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCornerRadiusInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">rectRadiusInDp</attr>
<!-- CutoutConfig.setCropOffsetX(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCropOffsetX' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cropOffsetX</attr>
<!-- CutoutConfig.setCropOffsetY(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCropOffsetY' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cropOffsetY</attr>
<!-- CutoutConfig.setCropPaddingX(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCropPaddingX' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cropPaddingX</attr>
<!-- CutoutConfig.setCropPaddingY(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCropPaddingY' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cropPaddingY</attr>
<!-- CutoutConfig.setCutoutOuterColorString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCutoutOuterColorString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">outerColorString</attr>
<!-- CutoutConfig.setCutoutStrokeColorString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setCutoutStrokeColorString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">strokeColorString</attr>
<!-- CutoutConfig.setDrawable(android.graphics.drawable.Drawable) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setDrawable' and count(parameter)=1 and parameter[1][@type='android.graphics.drawable.Drawable']]/parameter[1]" name="managedName">drawable</attr>
<!-- CutoutConfig.setFeedbackStrokeColor(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setFeedbackStrokeColor' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">feedbackStrokeColor</attr>
<!-- CutoutConfig.setFeedbackStrokeColorString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setFeedbackStrokeColorString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">feedbackStrokeColorString</attr>
<!-- CutoutConfig.setInactiveStrokeColorForDelay(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setInactiveStrokeColorForDelay' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">inactiveStrokeColorForDelay</attr>
<!-- CutoutConfig.setMaxHeightPercent(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setMaxHeightPercent' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">maxHeightPercent</attr>
<!-- CutoutConfig.setMaxWidthPercent(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setMaxWidthPercent' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">maxWidthPercent</attr>
<!-- CutoutConfig.setOffsetX(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setOffsetX' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">offsetX</attr>
<!-- CutoutConfig.setOffsetY(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setOffsetY' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">offsetY</attr>
<!-- CutoutConfig.setOuterColor(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setOuterColor' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">outerColor</attr>
<!-- CutoutConfig.setRatio(float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setRatio' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">ratio</attr>
<!-- CutoutConfig.setStrokeColor(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setStrokeColor' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">strokeColor</attr>
<!-- CutoutConfig.setStrokeWidthInDp(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setStrokeWidthInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">strokeWidthInDp</attr>
<!-- CutoutConfig.setStyle(io.anyline.view.CutoutConfig.CutoutStyle) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setStyle' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutConfig.CutoutStyle']]/parameter[1]" name="managedName">style</attr>
<!-- CutoutConfig.setWidth(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setWidth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">width</attr>
<!-- CutoutConfig.getCornerRadiusInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='getCornerRadiusInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CutoutConfig.getCutoutStrokeWidthInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='getCutoutStrokeWidthInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CutoutConfig.setAnimationStyle(io.anyline.view.CutoutConfig.AnimationStyle) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='CutoutConfig']/method[@name='setAnimationStyle' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutConfig.AnimationStyle']]/parameter[1]" name="managedName">animationStyle</attr>
<!-- File: IO.Anyline.View.ScanView.cs -->
<!-- ScanView.ScanView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- ScanView.ScanView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- ScanView.ScanView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- ScanView.setScanViewPlugin(io.anyline.view.AbstractBaseScanViewPlugin&lt;?&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='setScanViewPlugin' and count(parameter)=1 and parameter[1][@type='io.anyline.view.AbstractBaseScanViewPlugin&lt;?&gt;']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- ScanView.drawShape(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='drawShape' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">outline</attr>
<!-- ScanView.drawVisualFeedback(java.lang.Object, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='drawVisualFeedback' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">reportedObject</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='drawVisualFeedback' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- ScanView.init(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='init' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">configFileName</attr>
<!-- ScanView.init(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='init' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">configJsonObject</attr>
<!-- ScanView.initAsync(io.anyline.trainer.ProjectContext, io.anyline.trainer.TrainerUtils.ViewConfigResultHandler) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='initAsync' and count(parameter)=2 and parameter[1][@type='io.anyline.trainer.ProjectContext'] and parameter[2][@type='io.anyline.trainer.TrainerUtils.ViewConfigResultHandler']]/parameter[1]" name="managedName">projectContext</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='initAsync' and count(parameter)=2 and parameter[1][@type='io.anyline.trainer.ProjectContext'] and parameter[2][@type='io.anyline.trainer.TrainerUtils.ViewConfigResultHandler']]/parameter[2]" name="managedName">resultHandler</attr>
<!-- ScanView.initComposite(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='initComposite' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- ScanView.notifyDrawDocumentFeedback(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='notifyDrawDocumentFeedback' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">points</attr>
<!-- ScanView.notifyTakeHighPictureResolution(io.anyline.CombinedImageProvider) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='notifyTakeHighPictureResolution' and count(parameter)=1 and parameter[1][@type='io.anyline.CombinedImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ScanView.onCutoutChanged(io.anyline.view.CutoutRect) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='onCutoutChanged' and count(parameter)=1 and parameter[1][@type='io.anyline.view.CutoutRect']]/parameter[1]" name="managedName">cutoutRect</attr>
<!-- ScanView.onCutoutVisibility(java.lang.String, boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='onCutoutVisibility' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='onCutoutVisibility' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- ScanView.setCountsForAutoFlash(int, int, int, int) -->
<!-- ScanView.setCropRect(io.anyline.opencv.core.Rect) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Rect']]/parameter[1]" name="managedName">cropRect</attr>
<!-- ScanView.setLevelsForAutoFlash(int, int, int, int) -->
<!-- ScanView.setScanConfig(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='setScanConfig' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">pathFile</attr>
<!-- ScanView.setScanConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='setScanConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- ScanView.setScanViewConfig(io.anyline.view.BaseScanViewConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanView']/method[@name='setScanViewConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.view.BaseScanViewConfig']]/parameter[1]" name="managedName">scanViewConfig</attr>
<!-- ScanView.setupCameraController(android.content.Context) -->
<!-- File: IO.Anyline.Opencv.Android.OpenCVLoader.cs -->
<!-- OpenCVLoader.initDebug(boolean) -->
<!-- File: IO.Anyline.View.LightLevelHelper.cs -->
<!-- LightLevelHelper.AmbientLightLevel.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper.AmbientLightLevel']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- LightLevelHelper.BrightnessLevel.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper.BrightnessLevel']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- LightLevelHelper.LightLevelListener.onLightLevelChanged(io.anyline.view.LightLevelHelper.BrightnessLevel, io.anyline.view.LightLevelHelper.AmbientLightLevel) -->
<attr path="/api/package[@name='io.anyline.view']/interface[@name='LightLevelHelper.LightLevelListener']/method[@name='onLightLevelChanged' and count(parameter)=2 and parameter[1][@type='io.anyline.view.LightLevelHelper.BrightnessLevel'] and parameter[2][@type='io.anyline.view.LightLevelHelper.AmbientLightLevel']]/parameter[1]" name="managedName">brightnessLevel</attr>
<attr path="/api/package[@name='io.anyline.view']/interface[@name='LightLevelHelper.LightLevelListener']/method[@name='onLightLevelChanged' and count(parameter)=2 and parameter[1][@type='io.anyline.view.LightLevelHelper.BrightnessLevel'] and parameter[2][@type='io.anyline.view.LightLevelHelper.AmbientLightLevel']]/parameter[2]" name="managedName">ambientLightLevel</attr>
<!-- LightLevelHelper.LightLevelHelper(io.anyline.view.LightLevelHelper.LightLevelListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/constructor[@name='LightLevelHelper' and count(parameter)=1 and parameter[1][@type='io.anyline.view.LightLevelHelper.LightLevelListener']]/parameter[1]" name="managedName">listener</attr>
<!-- LightLevelHelper.setAmbientLightThreshold(int, int, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setAmbientLightThreshold' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">low</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setAmbientLightThreshold' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">high</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setAmbientLightThreshold' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">duration</attr>
<!-- LightLevelHelper.setBrightnessThreshold(int, int, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setBrightnessThreshold' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">low</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setBrightnessThreshold' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">high</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setBrightnessThreshold' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">duration</attr>
<!-- LightLevelHelper.setCurrentBrightness(double) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='LightLevelHelper']/method[@name='setCurrentBrightness' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">brightness</attr>
<!-- File: IO.Anyline.Opencv.Features2d.FeatureDetector.cs -->
<!-- FeatureDetector.FeatureDetector(long) -->
<!-- FeatureDetector.create(int) -->
<!-- FeatureDetector.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint) -->
<!-- FeatureDetector.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat) -->
<!-- FeatureDetector.detect(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;) -->
<!-- FeatureDetector.detect(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- FeatureDetector.read(java.lang.String) -->
<!-- FeatureDetector.write(java.lang.String) -->
<!-- File: IO.Anyline.Camera.VisualFeedbackConfig.cs -->
<!-- VisualFeedbackConfig.AnimationStyle.fromInt(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig.AnimationStyle']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">style</attr>
<!-- VisualFeedbackConfig.AnimationStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig.AnimationStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- VisualFeedbackConfig.FeedbackStyle.fromInt(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig.FeedbackStyle']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">style</attr>
<!-- VisualFeedbackConfig.FeedbackStyle.fromString(io.anyline.camera.VisualFeedbackConfig.FeedbackStyle) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig.FeedbackStyle']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.VisualFeedbackConfig.FeedbackStyle']]/parameter[1]" name="managedName">style</attr>
<!-- VisualFeedbackConfig.FeedbackStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig.FeedbackStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- VisualFeedbackConfig.VisualFeedbackConfig(org.json.JSONObject, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/constructor[@name='VisualFeedbackConfig' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='int']]/parameter[1]" name="managedName">jsonObject</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/constructor[@name='VisualFeedbackConfig' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='int']]/parameter[2]" name="managedName">cutoutCornerRadius</attr>
<!-- VisualFeedbackConfig.setAnimationDuration(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setAnimationDuration' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">animationDuration</attr>
<!-- VisualFeedbackConfig.setBeepOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setBeepOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isBeepOnResult</attr>
<!-- VisualFeedbackConfig.setCornerRadiusInDp(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setCornerRadiusInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cornerRadius</attr>
<!-- VisualFeedbackConfig.setFillColor(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setFillColor' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">fillColor</attr>
<!-- VisualFeedbackConfig.setFillColorString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setFillColorString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fillColorString</attr>
<!-- VisualFeedbackConfig.setRedrawTimeout(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setRedrawTimeout' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">redrawTimeout</attr>
<!-- VisualFeedbackConfig.setStrokeColor(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setStrokeColor' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">color</attr>
<!-- VisualFeedbackConfig.setStrokeColorString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setStrokeColorString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">strokeColorString</attr>
<!-- VisualFeedbackConfig.setStrokeWidthInDp(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setStrokeWidthInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">strokeWidthInDp</attr>
<!-- VisualFeedbackConfig.setVibrateOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setVibrateOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isVibrateOnResult</attr>
<!-- VisualFeedbackConfig.getCornerRadiusInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='getCornerRadiusInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- VisualFeedbackConfig.getStrokeWidthInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='getStrokeWidthInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- VisualFeedbackConfig.setAnimationStyle(io.anyline.camera.VisualFeedbackConfig.AnimationStyle) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setAnimationStyle' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.VisualFeedbackConfig.AnimationStyle']]/parameter[1]" name="managedName">animationStyle</attr>
<!-- VisualFeedbackConfig.setFeedbackStyle(io.anyline.camera.VisualFeedbackConfig.FeedbackStyle) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='VisualFeedbackConfig']/method[@name='setFeedbackStyle' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.VisualFeedbackConfig.FeedbackStyle']]/parameter[1]" name="managedName">feedbackStyle</attr>
<!-- File: IO.Anyline.Plugin.Meter.MeterScanResult.cs -->
<!-- MeterScanResult.MeterScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, java.lang.String, io.anyline.plugin.meter.MeterScanMode, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[7]" name="managedName">scanMode</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanResult']/constructor[@name='MeterScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String']]/parameter[8]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.Opencv.Features2d.Features2d.cs -->
<!-- Features2d.drawKeypoints(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat) -->
<!-- Features2d.drawKeypoints(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, int) -->
<!-- Features2d.drawMatches(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.MatOfDMatch, io.anyline.opencv.core.Mat) -->
<!-- Features2d.drawMatches(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.MatOfDMatch, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.MatOfByte, int) -->
<!-- Features2d.drawMatches2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, io.anyline.opencv.core.Mat) -->
<!-- Features2d.drawMatches2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Scalar, java.util.List&lt;io.anyline.opencv.core.MatOfByte&gt;, int) -->
<!-- File: IO.Anyline.Plugin.ID.IDataObject.cs -->
<!-- File: IO.Anyline.Opencv.Core.MatOfInt4.cs -->
<!-- MatOfInt4.MatOfInt4(int...) -->
<!-- MatOfInt4.MatOfInt4(io.anyline.opencv.core.Mat) -->
<!-- MatOfInt4.MatOfInt4(long) -->
<!-- MatOfInt4.alloc(int) -->
<!-- MatOfInt4.fromArray(int...) -->
<!-- MatOfInt4.fromList(java.util.List&lt;java.lang.Integer&gt;) -->
<!-- MatOfInt4.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Camera.IZoomEventHandler.cs -->
<!-- ZoomEventHandler.onZoomEventOccured(double) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='ZoomEventHandler']/method[@name='onZoomEventOccured' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">currentZoomLevel</attr>
<!-- File: IO.Anyline.Plugin.Document.DocumentScanPlugin.cs -->
<!-- DocumentScanPlugin.DocumentScanPlugin(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/constructor[@name='DocumentScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/constructor[@name='DocumentScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- DocumentScanPlugin.setPostProcessingEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setPostProcessingEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">enabled</attr>
<!-- DocumentScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- DocumentScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- DocumentScanPlugin.setDocumentNotifierListener(io.anyline.plugin.document.DocumentNotifierListener) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setDocumentNotifierListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.document.DocumentNotifierListener']]/parameter[1]" name="managedName">listener</attr>
<!-- DocumentScanPlugin.setDocumentRatios(java.lang.Double...) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setDocumentRatios' and count(parameter)=1 and parameter[1][@type='java.lang.Double...']]/parameter[1]" name="managedName">ratios</attr>
<!-- DocumentScanPlugin.setMaxDocumentOutputResolution(java.lang.Double, java.lang.Double) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setMaxDocumentOutputResolution' and count(parameter)=2 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setMaxDocumentOutputResolution' and count(parameter)=2 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double']]/parameter[2]" name="managedName">height</attr>
<!-- DocumentScanPlugin.setMaxDocumentRatioDeviation(java.lang.Double) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setMaxDocumentRatioDeviation' and count(parameter)=1 and parameter[1][@type='java.lang.Double']]/parameter[1]" name="managedName">deviation</attr>
<!-- DocumentScanPlugin.setMinBrightness(float) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setMinBrightness' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">minBrightness</attr>
<!-- DocumentScanPlugin.setSkipImages(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='setSkipImages' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">skip</attr>
<!-- DocumentScanPlugin.transformPicture(io.anyline.models.AnylineImage, java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='transformPicture' and count(parameter)=2 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanPlugin']/method[@name='transformPicture' and count(parameter)=2 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[2]" name="managedName">corners</attr>
<!-- File: IO.Anyline.Nfc.Tools.Tools.cs -->
<!-- Tools.adjustParityBits(byte[]) -->
<!-- Tools.byteToBytes(byte) -->
<!-- Tools.bytesToString(byte[]) -->
<!-- Tools.calculate2bytesInt(int) -->
<!-- Tools.calculateAsn1Length(byte[]) -->
<!-- Tools.calculateMrzCheckDigit(java.lang.String) -->
<!-- Tools.concatByteArrays(byte[], byte[]) -->
<!-- Tools.doXor(byte[], byte[]) -->
<!-- Tools.getAsn1HeaderLength(byte[]) -->
<!-- Tools.getIntFrom16bits(byte[]) -->
<!-- Tools.getLengthFromAsn1(byte[]) -->
<!-- Tools.getLengthFromFileHeader(byte[]) -->
<!-- Tools.incrementBytesArray(byte[]) -->
<!-- Tools.incrementBytesArray(byte[], int) -->
<!-- Tools.inputStreamToByteArray(java.io.InputStream) -->
<!-- Tools.invertBytes(byte[]) -->
<!-- Tools.unpadData(byte[]) -->
<!-- File: IO.Anyline.Camera.ImageReceiver.cs -->
<!-- ImageReceiver.getYuvImage(android.graphics.Rect, boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ImageReceiver']/method[@name='getYuvImage' and count(parameter)=2 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ImageReceiver']/method[@name='getYuvImage' and count(parameter)=2 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">greyOnly</attr>
<!-- ImageReceiver.getYuvImage(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ImageReceiver']/method[@name='getYuvImage' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">greyOnly</attr>
<!-- File: IO.Anyline.Nfc.NFC.Apdu.cs -->
<!-- Apdu.buildApduCommand(byte, byte, byte, byte, byte[]) -->
<!-- Apdu.buildApduCommand(byte, byte, byte, byte, byte[], byte) -->
<!-- Apdu.setApduWithLe(boolean) -->
<!-- File: IO.Anyline.Opencv.Photo.CalibrateRobertson.cs -->
<!-- CalibrateRobertson.CalibrateRobertson(long) -->
<!-- CalibrateRobertson.setMaxIter(int) -->
<!-- CalibrateRobertson.setThreshold(float) -->
<!-- File: IO.Anyline.Plugin.ScanRunSkippedReason.cs -->
<!-- ScanRunSkippedReason.ScanRunSkippedReason(java.lang.String, int, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanRunSkippedReason']/constructor[@name='ScanRunSkippedReason' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanRunSkippedReason']/constructor[@name='ScanRunSkippedReason' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">code</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanRunSkippedReason']/constructor[@name='ScanRunSkippedReason' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">text</attr>
<!-- File: IO.Anyline.Plugin.Barcode.BarcodeScanPlugin.cs -->
<!-- BarcodeScanPlugin.ScanMode.valueOf(java.lang.String) -->
<!-- BarcodeScanPlugin.BarcodeScanPlugin(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanPlugin']/constructor[@name='BarcodeScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanPlugin']/constructor[@name='BarcodeScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- BarcodeScanPlugin.addScannedBarcodesListener(io.anyline.plugin.barcode.ScannedBarcodesListener) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanPlugin']/method[@name='addScannedBarcodesListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.ScannedBarcodesListener']]/parameter[1]" name="managedName">listener</attr>
<!-- BarcodeScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- BarcodeScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- BarcodeScanPlugin.setBarcodeFormats(io.anyline.plugin.barcode.BarcodeFormat...) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanPlugin']/method[@name='setBarcodeFormats' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeFormat...']]/parameter[1]" name="managedName">formats</attr>
<!-- BarcodeScanPlugin.setMultiBarcode(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanPlugin']/method[@name='setMultiBarcode' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">multiBarcode</attr>
<!-- File: IO.Anyline.ICombinedImageProvider.cs -->
<!-- File: IO.Anyline.Opencv.ML.DTrees.cs -->
<!-- DTrees.DTrees(long) -->
<!-- DTrees.setCVFolds(int) -->
<!-- DTrees.setMaxCategories(int) -->
<!-- DTrees.setMaxDepth(int) -->
<!-- DTrees.setMinSampleCount(int) -->
<!-- DTrees.setPriors(io.anyline.opencv.core.Mat) -->
<!-- DTrees.setRegressionAccuracy(float) -->
<!-- DTrees.setTruncatePrunedTree(boolean) -->
<!-- DTrees.setUse1SERule(boolean) -->
<!-- DTrees.setUseSurrogates(boolean) -->
<!-- File: IO.Anyline.Opencv.ML.NormalBayesClassifier.cs -->
<!-- NormalBayesClassifier.NormalBayesClassifier(long) -->
<!-- NormalBayesClassifier.predictProb(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- NormalBayesClassifier.predictProb(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- File: IO.Anyline.Camera.CameraView.cs -->
<!-- CameraView.CameraView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CameraView.CameraView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- CameraView.CameraView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- CameraView.CameraView(android.content.Context, boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">api2Enabled</attr>
<!-- CameraView.setPreferredCameraConfig(io.anyline.camera.CameraConfig) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredCameraConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraConfig']]/parameter[1]" name="managedName">preferredConfig</attr>
<!-- CameraView.onLayout(boolean, int, int, int, int) -->
<!-- CameraView.setApi2Enabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setApi2Enabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">enabled</attr>
<!-- CameraView.setCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setCameraOpenListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraOpenListener']]/parameter[1]" name="managedName">listener</attr>
<!-- CameraView.setFlashOn(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setFlashOn' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- CameraView.setFocusConfig(io.anyline.camera.FocusConfig) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setFocusConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.FocusConfig']]/parameter[1]" name="managedName">focusConfig</attr>
<!-- CameraView.setHighResolutionImageListener(io.anyline.camera.HighResolutionImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setHighResolutionImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.HighResolutionImageListener']]/parameter[1]" name="managedName">highResolutionImageListener</attr>
<!-- CameraView.setImageListener(io.anyline.camera.ImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.ImageListener']]/parameter[1]" name="managedName">imageListener</attr>
<!-- CameraView.setPreferredPictureSize(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPictureSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPictureSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">height</attr>
<!-- CameraView.setPreferredPreviewFps(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewFps' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">minFps</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewFps' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">maxFps</attr>
<!-- CameraView.setPreferredPreviewSize(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">height</attr>
<!-- CameraView.setPreviewCropGravity(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreviewCropGravity' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cropGravity</attr>
<!-- CameraView.setSceneMode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setSceneMode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">sceneMode</attr>
<!-- CameraView.setUseMaxFpsRange(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setUseMaxFpsRange' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- CameraView.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">scanViewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">scanViewHeight</attr>
<!-- File: IO.Anyline.View.ParallelScanViewComposite.cs -->
<!-- ParallelScanViewComposite.ParallelScanViewComposite(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ParallelScanViewComposite']/constructor[@name='ParallelScanViewComposite' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- File: IO.Anyline.Opencv.Photo.CalibrateCRF.cs -->
<!-- CalibrateCRF.CalibrateCRF(long) -->
<!-- CalibrateCRF.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Camera.CameraFeatures2.cs -->
<!-- CameraFeatures2.AutoExposureMode.fromCamera2(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures2.AutoExposureMode']/method[@name='fromCamera2' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">mode</attr>
<!-- CameraFeatures2.AutoExposureMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures2.AutoExposureMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraFeatures2.CameraFeatures2(java.lang.String, android.hardware.camera2.CameraCharacteristics) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures2']/constructor[@name='CameraFeatures2' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.hardware.camera2.CameraCharacteristics']]/parameter[1]" name="managedName">cameraId</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures2']/constructor[@name='CameraFeatures2' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.hardware.camera2.CameraCharacteristics']]/parameter[2]" name="managedName">characteristics</attr>
<!-- CameraFeatures2.getForAllCameras(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures2']/method[@name='getForAllCameras' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- File: IO.Anyline.Trainer.IAssetDelegate.cs -->
<!-- IAssetDelegate.onAssetDownloadProgress(java.lang.String, float) -->
<!-- IAssetDelegate.onAssetUpdateAvailable(boolean) -->
<!-- IAssetDelegate.onAssetUpdateError(java.lang.String) -->
<!-- File: IO.Anyline.View.JsonParser.cs -->
<!-- JsonParser.init(org.json.JSONObject, android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='JsonParser']/method[@name='init' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='android.content.Context']]/parameter[1]" name="managedName">jsonObject</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='JsonParser']/method[@name='init' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='android.content.Context']]/parameter[2]" name="managedName">context</attr>
<!-- JsonParser.parseViewPlugin(org.json.JSONObject, android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='JsonParser']/method[@name='parseViewPlugin' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='android.content.Context']]/parameter[1]" name="managedName">jsonObject</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='JsonParser']/method[@name='parseViewPlugin' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='android.content.Context']]/parameter[2]" name="managedName">context</attr>
<!-- File: IO.Anyline.Plugin.Tire.TINConfig.cs -->
<!-- TINConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TINConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- TINConfig.TINConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TINConfig']/constructor[@name='TINConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">tinConfigJson</attr>
<!-- TINConfig.setScanMode(io.anyline.plugin.tire.TINConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TINConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.tire.TINConfig.ScanMode']]/parameter[1]" name="managedName">strictMode</attr>
<!-- File: IO.Anyline.Opencv.Core.Rect.cs -->
<!-- Rect.Rect(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- Rect.Rect(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">height</attr>
<!-- Rect.Rect(io.anyline.opencv.core.Point, io.anyline.opencv.core.Point) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Point'] and parameter[2][@type='io.anyline.opencv.core.Point']]/parameter[1]" name="managedName">p1</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Point'] and parameter[2][@type='io.anyline.opencv.core.Point']]/parameter[2]" name="managedName">p2</attr>
<!-- Rect.Rect(io.anyline.opencv.core.Point, io.anyline.opencv.core.Size) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Point'] and parameter[2][@type='io.anyline.opencv.core.Size']]/parameter[1]" name="managedName">p</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/constructor[@name='Rect' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Point'] and parameter[2][@type='io.anyline.opencv.core.Size']]/parameter[2]" name="managedName">s</attr>
<!-- Rect.contains(io.anyline.opencv.core.Point) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/method[@name='contains' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Point']]/parameter[1]" name="managedName">p</attr>
<!-- Rect.set(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Rect']/method[@name='set' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- File: IO.Anyline.Plugin.ID.IdConfig.cs -->
<!-- IdConfig.setAlphabet(io.anyline.plugin.id.Alphabet) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdConfig']/method[@name='setAlphabet' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.Alphabet']]/parameter[1]" name="managedName">alphabet</attr>
<!-- IdConfig.setIdFieldScanOptions(TFieldScanOptions) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdConfig']/method[@name='setIdFieldScanOptions' and count(parameter)=1 and parameter[1][@type='TFieldScanOptions']]/parameter[1]" name="managedName">idFieldScanOptions</attr>
<!-- IdConfig.setIdMinFieldConfidences(TFieldConfidences) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdConfig']/method[@name='setIdMinFieldConfidences' and count(parameter)=1 and parameter[1][@type='TFieldConfidences']]/parameter[1]" name="managedName">idMinFieldConfidences</attr>
<!-- IdConfig.setMinConfidence(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- IdConfig.enableFaceDetection(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdConfig']/method[@name='enableFaceDetection' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">faceDetectionEnabled</attr>
<!-- File: IO.Anyline.Opencv.Core.Size.cs -->
<!-- Size.Size(double, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Size']/constructor[@name='Size' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Size']/constructor[@name='Size' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[2]" name="managedName">height</attr>
<!-- Size.Size(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Size']/constructor[@name='Size' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- Size.Size(io.anyline.opencv.core.Point) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Size']/constructor[@name='Size' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Point']]/parameter[1]" name="managedName">p</attr>
<!-- Size.set(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Size']/method[@name='set' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- File: IO.Anyline.Nfc.Reader.BacInfo.cs -->
<!-- BacInfo.setDateOfBirth(java.lang.String) -->
<!-- BacInfo.setDateOfExpiry(java.lang.String) -->
<!-- BacInfo.setPassportNbr(java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Ocr.AnylineOcrBaseConfig.cs -->
<!-- File: IO.Anyline.Plugin.Meter.MultiMeterScanResult.cs -->
<!-- MultiMeterScanResult.MultiMeterScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, java.lang.String, io.anyline.plugin.meter.MeterScanMode, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[7]" name="managedName">scanMode</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[8]" name="managedName">counter</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MultiMeterScanResult']/constructor[@name='MultiMeterScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.plugin.meter.MeterScanMode'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[9]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.Plugin.ID.TemplateFieldConfidences.cs -->
<!-- File: IO.Anyline.Opencv.Photo.Photo.cs -->
<!-- Photo.colorChange(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.colorChange(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float, float) -->
<!-- Photo.createAlignMTB(int, int, boolean) -->
<!-- Photo.createCalibrateDebevec(int, float, boolean) -->
<!-- Photo.createCalibrateRobertson(int, float) -->
<!-- Photo.createMergeMertens(float, float, float) -->
<!-- Photo.createTonemap(float) -->
<!-- Photo.createTonemapDrago(float, float, float) -->
<!-- Photo.createTonemapDurand(float, float, float, float, float) -->
<!-- Photo.createTonemapMantiuk(float, float, float) -->
<!-- Photo.createTonemapReinhard(float, float, float, float) -->
<!-- Photo.decolor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.denoise_TVL1(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- Photo.denoise_TVL1(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, double, int) -->
<!-- Photo.detailEnhance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.detailEnhance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float) -->
<!-- Photo.edgePreservingFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.edgePreservingFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, float, float) -->
<!-- Photo.fastNlMeansDenoising(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.fastNlMeansDenoising(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, int, int) -->
<!-- Photo.fastNlMeansDenoising(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfFloat) -->
<!-- Photo.fastNlMeansDenoising(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfFloat, int, int, int) -->
<!-- Photo.fastNlMeansDenoisingColored(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.fastNlMeansDenoisingColored(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float, int, int) -->
<!-- Photo.fastNlMeansDenoisingColoredMulti(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, int, int) -->
<!-- Photo.fastNlMeansDenoisingColoredMulti(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, int, int, float, float, int, int) -->
<!-- Photo.fastNlMeansDenoisingMulti(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, int, int) -->
<!-- Photo.fastNlMeansDenoisingMulti(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, int, int, float, int, int) -->
<!-- Photo.fastNlMeansDenoisingMulti(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.MatOfFloat) -->
<!-- Photo.fastNlMeansDenoisingMulti(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.MatOfFloat, int, int, int) -->
<!-- Photo.illuminationChange(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.illuminationChange(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float) -->
<!-- Photo.inpaint(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int) -->
<!-- Photo.pencilSketch(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.pencilSketch(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float, float) -->
<!-- Photo.seamlessClone(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Mat, int) -->
<!-- Photo.stylization(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.stylization(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float) -->
<!-- Photo.textureFlattening(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Photo.textureFlattening(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, float, float, int) -->
<!-- File: IO.Anyline.Opencv.Imgproc.Moments.cs -->
<!-- Moments.Moments(double, double, double, double, double, double, double, double, double, double) -->
<!-- Moments.Moments(double[]) -->
<!-- Moments.set(double[]) -->
<!-- Moments.set_m00(double) -->
<!-- Moments.set_m01(double) -->
<!-- Moments.set_m02(double) -->
<!-- Moments.set_m03(double) -->
<!-- Moments.set_m10(double) -->
<!-- Moments.set_m11(double) -->
<!-- Moments.set_m12(double) -->
<!-- Moments.set_m20(double) -->
<!-- Moments.set_m21(double) -->
<!-- Moments.set_m30(double) -->
<!-- Moments.set_mu02(double) -->
<!-- Moments.set_mu03(double) -->
<!-- Moments.set_mu11(double) -->
<!-- Moments.set_mu12(double) -->
<!-- Moments.set_mu20(double) -->
<!-- Moments.set_mu21(double) -->
<!-- Moments.set_mu30(double) -->
<!-- Moments.set_nu02(double) -->
<!-- Moments.set_nu03(double) -->
<!-- Moments.set_nu11(double) -->
<!-- Moments.set_nu12(double) -->
<!-- Moments.set_nu20(double) -->
<!-- Moments.set_nu21(double) -->
<!-- Moments.set_nu30(double) -->
<!-- File: IO.Anyline.View.IAnylineViewConfig.cs -->
<!-- IAnylineViewConfig.init(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/interface[@name='IAnylineViewConfig']/method[@name='init' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/interface[@name='IAnylineViewConfig']/method[@name='init' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">json</attr>
<!-- File: IO.Anyline.Opencv.Android.UtilsProviderImpl.cs -->
<!-- UtilsProviderImpl.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat, boolean) -->
<!-- UtilsProviderImpl.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap) -->
<!-- File: IO.Anyline.Opencv.Core.Range.cs -->
<!-- Range.Range(double[]) -->
<!-- Range.Range(int, int) -->
<!-- Range.intersection(io.anyline.opencv.core.Range) -->
<!-- Range.set(double[]) -->
<!-- Range.shift(int) -->
<!-- File: IO.Anyline.Modules.IAnylineModule.cs -->
<!-- AnylineModule.initAnyline(java.lang.String, T) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='initAnyline' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='T']]/parameter[1]" name="managedName">licenseKey</attr>
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='initAnyline' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='T']]/parameter[2]" name="managedName">moduleSpecificListener</attr>
<!-- AnylineModule.setBeepOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='setBeepOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isBeepOnResult</attr>
<!-- AnylineModule.setBlinkOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='setBlinkOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isBlinkOnResult</attr>
<!-- AnylineModule.setCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='setCameraOpenListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraOpenListener']]/parameter[1]" name="managedName">cameraOpenListener</attr>
<!-- AnylineModule.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isCancelOnResult</attr>
<!-- AnylineModule.setDebug(boolean) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='setDebug' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isDebug</attr>
<!-- AnylineModule.setVibrateOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModule']/method[@name='setVibrateOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isVibrateOnResult</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfDouble.cs -->
<!-- MatOfDouble.MatOfDouble(double...) -->
<!-- MatOfDouble.MatOfDouble(io.anyline.opencv.core.Mat) -->
<!-- MatOfDouble.MatOfDouble(long) -->
<!-- MatOfDouble.alloc(int) -->
<!-- MatOfDouble.fromArray(double...) -->
<!-- MatOfDouble.fromList(java.util.List&lt;java.lang.Double&gt;) -->
<!-- MatOfDouble.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Products.AnylineUpdater.cs -->
<!-- AnylineUpdater.getLocalAssetVersion(io.anyline.trainer.AssetContext) -->
<!-- AnylineUpdater.update(android.content.Context, io.anyline.trainer.AssetContext, io.anyline.products.IAnylineUpdateDelegate) -->
<!-- File: IO.Anyline.Util.NumUtil.cs -->
<!-- NumUtil.asDouble(java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='NumUtil']/method[@name='asDouble' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]/parameter[1]" name="managedName">param</attr>
<!-- NumUtil.asFloat(java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='NumUtil']/method[@name='asFloat' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]/parameter[1]" name="managedName">param</attr>
<!-- NumUtil.asInteger(java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='NumUtil']/method[@name='asInteger' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]/parameter[1]" name="managedName">param</attr>
<!-- File: IO.Anyline.Opencv.Core.Core.cs -->
<!-- Core.setNumThreads(int) -->
<!-- Core.LUT(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.Mahalanobis(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PCABackProject(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PCACompute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PCACompute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Core.PCACompute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.PCAProject(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PSNR(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.SVBackSubst(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.SVDecomp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.SVDecomp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.absdiff(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.absdiff(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.addWeighted(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, double, io.anyline.opencv.core.Mat) -->
<!-- Core.addWeighted(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, double, io.anyline.opencv.core.Mat, int) -->
<!-- Core.batchDistance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Core.batchDistance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.batchDistance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Mat, int, boolean) -->
<!-- Core.bitwise_and(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_and(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_not(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_not(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_or(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_or(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_xor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_xor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.borderInterpolate(int, int, int) -->
<!-- Core.calcCovarMatrix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.calcCovarMatrix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.cartToPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.cartToPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.checkRange(io.anyline.opencv.core.Mat) -->
<!-- Core.checkRange(io.anyline.opencv.core.Mat, boolean, double, double) -->
<!-- Core.compare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.compare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, int) -->
<!-- Core.completeSymm(io.anyline.opencv.core.Mat) -->
<!-- Core.completeSymm(io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.convertScaleAbs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.convertScaleAbs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double) -->
<!-- Core.copyMakeBorder(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, int) -->
<!-- Core.copyMakeBorder(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Core.countNonZero(io.anyline.opencv.core.Mat) -->
<!-- Core.cubeRoot(float) -->
<!-- Core.dct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.dct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.determinant(io.anyline.opencv.core.Mat) -->
<!-- Core.dft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.dft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.divide(double, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.divide(double, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.eigen(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.eigen(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.exp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.extractChannel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.fastAtan2(float, float) -->
<!-- Core.findNonZero(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.flip(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.gemm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat) -->
<!-- Core.gemm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, int) -->
<!-- Core.getOptimalDFTSize(int) -->
<!-- Core.hconcat(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- Core.idct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.idct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.idft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.idft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.inRange(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.insertChannel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.invert(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.invert(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.kmeans(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.TermCriteria, int, int) -->
<!-- Core.kmeans(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.TermCriteria, int, int, io.anyline.opencv.core.Mat) -->
<!-- Core.log(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.magnitude(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.max(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.max(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.mean(io.anyline.opencv.core.Mat) -->
<!-- Core.mean(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.meanStdDev(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDouble, io.anyline.opencv.core.MatOfDouble) -->
<!-- Core.meanStdDev(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDouble, io.anyline.opencv.core.MatOfDouble, io.anyline.opencv.core.Mat) -->
<!-- Core.merge(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- Core.min(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.min(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.minMaxLoc(io.anyline.opencv.core.Mat) -->
<!-- Core.minMaxLoc(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.mixChannels(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt) -->
<!-- Core.mulSpectrums(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.mulSpectrums(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, boolean) -->
<!-- Core.mulTransposed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.mulTransposed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean, io.anyline.opencv.core.Mat, double) -->
<!-- Core.mulTransposed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.norm(io.anyline.opencv.core.Mat) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, int) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, int) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, int, io.anyline.opencv.core.Mat) -->
<!-- Core.patchNaNs(io.anyline.opencv.core.Mat) -->
<!-- Core.patchNaNs(io.anyline.opencv.core.Mat, double) -->
<!-- Core.perspectiveTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.phase(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.phase(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.polarToCart(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.polarToCart(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.pow(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat) -->
<!-- Core.randShuffle(io.anyline.opencv.core.Mat) -->
<!-- Core.randShuffle(io.anyline.opencv.core.Mat, double) -->
<!-- Core.randn(io.anyline.opencv.core.Mat, double, double) -->
<!-- Core.randu(io.anyline.opencv.core.Mat, double, double) -->
<!-- Core.reduce(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.reduce(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Core.repeat(io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Mat) -->
<!-- Core.scaleAdd(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.setErrorVerbosity(boolean) -->
<!-- Core.setIdentity(io.anyline.opencv.core.Mat) -->
<!-- Core.setIdentity(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar) -->
<!-- Core.solve(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.solve(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.solveCubic(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.solvePoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.solvePoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.sort(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.sortIdx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.split(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Core.sqrt(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.sumElems(io.anyline.opencv.core.Mat) -->
<!-- Core.trace(io.anyline.opencv.core.Mat) -->
<!-- Core.transform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.transpose(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.vconcat(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Plugin.Barcode.Barcode.cs -->
<!-- Barcode.setBarcodeFormat(io.anyline.plugin.barcode.BarcodeFormat) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='Barcode']/method[@name='setBarcodeFormat' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeFormat']]/parameter[1]" name="managedName">barcodeFormat</attr>
<!-- Barcode.setBase64(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='Barcode']/method[@name='setBase64' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">base64</attr>
<!-- Barcode.setParsedPDF417(io.anyline.plugin.barcode.PDF417) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='Barcode']/method[@name='setParsedPDF417' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.PDF417']]/parameter[1]" name="managedName">parsedPDF417</attr>
<!-- Barcode.setValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='Barcode']/method[@name='setValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- Barcode.setCoordinates(java.util.List&lt;io.anyline.opencv.core.Point&gt;, io.anyline.opencv.core.Point) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='Barcode']/method[@name='setCoordinates' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;'] and parameter[2][@type='io.anyline.opencv.core.Point']]/parameter[1]" name="managedName">coordinates</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='Barcode']/method[@name='setCoordinates' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;'] and parameter[2][@type='io.anyline.opencv.core.Point']]/parameter[2]" name="managedName">imageSize</attr>
<!-- File: IO.Anyline.View.ScanViewUtil.cs -->
<!-- ScanViewUtil.getFrameRectFromViewRect(android.graphics.Rect, int, int, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='getFrameRectFromViewRect' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float']]/parameter[1]" name="managedName">viewRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='getFrameRectFromViewRect' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float']]/parameter[2]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='getFrameRectFromViewRect' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float']]/parameter[3]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='getFrameRectFromViewRect' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float']]/parameter[4]" name="managedName">scale</attr>
<!-- ScanViewUtil.getViewRectFromFrameRect(android.graphics.Rect, int, int, float) -->
<!-- ScanViewUtil.objectToOutline(java.lang.Object) -->
<!-- ScanViewUtil.openCvPointListToPointFList(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- ScanViewUtil.transformOutlineToPointListRelativeToFullFrame(io.anyline.models.AnylineImage, java.util.List&lt;android.graphics.PointF&gt;, float, float, io.anyline.models.AnylineImage, float, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[1]" name="managedName">fullFrame</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[2]" name="managedName">outlineCorners</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[3]" name="managedName">offsetX</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[4]" name="managedName">offsetY</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[6]" name="managedName">resizeWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToFullFrame' and count(parameter)=7 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='float'] and parameter[7][@type='int']]/parameter[7]" name="managedName">contourBorder</attr>
<!-- ScanViewUtil.transformOutlineToPointListRelativeToRect(java.util.List&lt;io.anyline.opencv.core.Point&gt;, float, int, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToRect' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='android.graphics.Rect']]/parameter[1]" name="managedName">outlineCorners</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToRect' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='android.graphics.Rect']]/parameter[2]" name="managedName">resizeWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToRect' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='android.graphics.Rect']]/parameter[3]" name="managedName">contourBorder</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanViewUtil']/method[@name='transformOutlineToPointListRelativeToRect' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='android.graphics.Rect']]/parameter[4]" name="managedName">rect</attr>
<!-- File: IO.Anyline.View.AnylineViewConfig.cs -->
<!-- AnylineViewConfig.AnylineViewConfig(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineViewConfig']/constructor[@name='AnylineViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineViewConfig']/constructor[@name='AnylineViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">configFilName</attr>
<!-- File: IO.Anyline.DI.IFileOutputStreamProvider.cs -->
<!-- FileOutputStreamProvider.provideFileOutputStream(java.io.File) -->
<!-- File: IO.Anyline.Plugin.ID.TemplateFieldScanOptions.cs -->
<!-- File: IO.Anyline.Trainer.AssetContext.cs -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String) -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, io.anyline.Version) -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, io.anyline.Version, java.lang.String) -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, java.lang.String) -->
<!-- AssetContext.AssetContext(android.content.Context, org.json.JSONObject) -->
<!-- AssetContext.getParameter(java.lang.String) -->
<!-- AssetContext.setParameter(java.lang.String, java.lang.Object) -->
<!-- File: IO.Anyline.Opencv.ML.KNearest.cs -->
<!-- KNearest.KNearest(long) -->
<!-- KNearest.setAlgorithmType(int) -->
<!-- KNearest.setDefaultK(int) -->
<!-- KNearest.setEmax(int) -->
<!-- KNearest.findNearest(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- KNearest.findNearest(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- KNearest.setIsClassifier(boolean) -->
<!-- File: IO.Anyline.DI.FileOutputStreamProviderImpl.cs -->
<!-- FileOutputStreamProviderImpl.provideFileOutputStream(java.io.File) -->
<!-- File: IO.Anyline.Opencv.Android.BaseLoaderCallback.cs -->
<!-- BaseLoaderCallback.BaseLoaderCallback(android.content.Context) -->
<!-- BaseLoaderCallback.onManagerConnected(int) -->
<!-- BaseLoaderCallback.onPackageInstall(int, io.anyline.opencv.android.InstallCallbackInterface) -->
<!-- File: IO.Anyline.Plugin.ID.UniversalIdLayoutType.cs -->
<!-- UniversalIdLayoutType.UniversalIdLayoutType(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdLayoutType']/constructor[@name='UniversalIdLayoutType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">type</attr>
<!-- UniversalIdLayoutType.setType(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdLayoutType']/method[@name='setType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">type</attr>
<!-- File: IO.Anyline.Nfc.Parser.EFSODParser.cs -->
<!-- EFSODParser.EFSODParser(byte[]) -->
<!-- File: IO.Anyline.Util.ConstantUtil.cs -->
<!-- File: IO.Anyline.Opencv.Imgproc.ImgprocProviderImpl.cs -->
<!-- ImgprocProviderImpl.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint2f.cs -->
<!-- MatOfPoint2f.MatOfPoint2f(io.anyline.opencv.core.Mat) -->
<!-- MatOfPoint2f.MatOfPoint2f(io.anyline.opencv.core.Point...) -->
<!-- MatOfPoint2f.MatOfPoint2f(long) -->
<!-- MatOfPoint2f.alloc(int) -->
<!-- MatOfPoint2f.fromArray(io.anyline.opencv.core.Point...) -->
<!-- MatOfPoint2f.fromList(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- MatOfPoint2f.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Nfc.Reader.DESedeReader.cs -->
<!-- DESedeReader.calculateEncryptionKey(byte[]) -->
<!-- DESedeReader.calculateMac(byte[], byte[]) -->
<!-- DESedeReader.calculateMac(byte[], byte[], boolean) -->
<!-- DESedeReader.calculateSequenceCounter(byte[]) -->
<!-- DESedeReader.decrypt(byte[], byte[]) -->
<!-- DESedeReader.encrypt(byte[], byte[]) -->
<!-- DESedeReader.padData(byte[]) -->
<!-- File: IO.Anyline.Opencv.Photo.TonemapMantiuk.cs -->
<!-- TonemapMantiuk.TonemapMantiuk(long) -->
<!-- TonemapMantiuk.setSaturation(float) -->
<!-- TonemapMantiuk.setScale(float) -->
<!-- File: IO.Anyline.Opencv.Objdetect.HOGDescriptor.cs -->
<!-- HOGDescriptor.HOGDescriptor(io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, int) -->
<!-- HOGDescriptor.HOGDescriptor(io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, int, int, double, int, double, boolean, int, boolean) -->
<!-- HOGDescriptor.HOGDescriptor(java.lang.String) -->
<!-- HOGDescriptor.HOGDescriptor(long) -->
<!-- HOGDescriptor.compute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfFloat) -->
<!-- HOGDescriptor.compute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfFloat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.MatOfPoint) -->
<!-- HOGDescriptor.computeGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- HOGDescriptor.computeGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size) -->
<!-- HOGDescriptor.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfDouble) -->
<!-- HOGDescriptor.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfDouble, double, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.MatOfPoint) -->
<!-- HOGDescriptor.detectMultiScale(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfDouble) -->
<!-- HOGDescriptor.detectMultiScale(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfDouble, double, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, double, double, boolean) -->
<!-- HOGDescriptor.load(java.lang.String) -->
<!-- HOGDescriptor.load(java.lang.String, java.lang.String) -->
<!-- HOGDescriptor.save(java.lang.String) -->
<!-- HOGDescriptor.save(java.lang.String, java.lang.String) -->
<!-- HOGDescriptor.setSVMDetector(io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Plugin.Tire.TireScanViewPlugin.cs -->
<!-- TireScanViewPlugin.TireScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">config</attr>
<!-- TireScanViewPlugin.TireScanViewPlugin(android.content.Context, io.anyline.plugin.tire.TireBaseConfig, io.anyline.view.ScanViewPluginConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.tire.TireBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.tire.TireBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">tireConfig</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.tire.TireBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">config</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanViewPlugin']/constructor[@name='TireScanViewPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.tire.TireBaseConfig'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">id</attr>
<!-- File: IO.Anyline.Opencv.Android.UtilsProviderFactory.cs -->
<!-- File: IO.Anyline.Camera.CameraFeatures.cs -->
<!-- CameraFeatures.FocusMode.fromCamera1(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.FocusMode']/method[@name='fromCamera1' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">mode</attr>
<!-- CameraFeatures.FocusMode.fromCamera2(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.FocusMode']/method[@name='fromCamera2' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">mode</attr>
<!-- CameraFeatures.FocusMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.FocusMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraFeatures.FpsRange.CameraFeatures.FpsRange(int, int) -->
<!-- CameraFeatures.FpsRange.getRangesFromCamera1(java.util.List&lt;int[]&gt;) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.FpsRange']/method[@name='getRangesFromCamera1' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;int[]&gt;']]/parameter[1]" name="managedName">cam1Ranges</attr>
<!-- CameraFeatures.FpsRange.getRangesFromCamera2(android.util.Range&lt;java.lang.Integer&gt;[]) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.FpsRange']/method[@name='getRangesFromCamera2' and count(parameter)=1 and parameter[1][@type='android.util.Range&lt;java.lang.Integer&gt;[]']]/parameter[1]" name="managedName">cam2Ranges</attr>
<!-- CameraFeatures.LensFacing.fromBitFlag(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.LensFacing']/method[@name='fromBitFlag' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cameraFacingBit</attr>
<!-- CameraFeatures.LensFacing.fromBitFlags(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.LensFacing']/method[@name='fromBitFlags' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">fallbackCameraBits</attr>
<!-- CameraFeatures.LensFacing.fromCamera1(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.LensFacing']/method[@name='fromCamera1' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">camera1Facing</attr>
<!-- CameraFeatures.LensFacing.fromCamera2(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.LensFacing']/method[@name='fromCamera2' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">camera2Facing</attr>
<!-- CameraFeatures.LensFacing.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.LensFacing']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraFeatures.OutputFormat.fromImageFormat(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.OutputFormat']/method[@name='fromImageFormat' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">format</attr>
<!-- CameraFeatures.OutputFormat.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.OutputFormat']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraFeatures.SceneMode.fromCamera1(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.SceneMode']/method[@name='fromCamera1' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">mode</attr>
<!-- CameraFeatures.SceneMode.fromCamera2(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.SceneMode']/method[@name='fromCamera2' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">mode</attr>
<!-- CameraFeatures.SceneMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures.SceneMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraFeatures.allCamerasHaveApi2Support(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures']/method[@name='allCamerasHaveApi2Support' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CameraFeatures.hasCameraApi2Support(android.content.Context, io.anyline.camera.CameraFeatures.LensFacing) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures']/method[@name='hasCameraApi2Support' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.camera.CameraFeatures.LensFacing']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures']/method[@name='hasCameraApi2Support' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.camera.CameraFeatures.LensFacing']]/parameter[2]" name="managedName">lensFacing</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint3f.cs -->
<!-- MatOfPoint3f.MatOfPoint3f(io.anyline.opencv.core.Mat) -->
<!-- MatOfPoint3f.MatOfPoint3f(io.anyline.opencv.core.Point3...) -->
<!-- MatOfPoint3f.MatOfPoint3f(long) -->
<!-- MatOfPoint3f.alloc(int) -->
<!-- MatOfPoint3f.fromArray(io.anyline.opencv.core.Point3...) -->
<!-- MatOfPoint3f.fromList(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- MatOfPoint3f.fromNativeAddr(long) -->
<!-- File: IO.Anyline.View.AnylineFeedbackView.cs -->
<!-- AnylineFeedbackView.AnylineFeedbackView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineFeedbackView']/constructor[@name='AnylineFeedbackView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineFeedbackView']/constructor[@name='AnylineFeedbackView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- AnylineFeedbackView.translateX(float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineFeedbackView']/method[@name='translateX' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">x</attr>
<!-- AnylineFeedbackView.translateY(float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineFeedbackView']/method[@name='translateY' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">y</attr>
<!-- File: IO.Anyline.Util.DimensUtil.cs -->
<!-- DimensUtil.dpToPx(android.content.Context, float) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='dpToPx' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='dpToPx' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='float']]/parameter[2]" name="managedName">dp</attr>
<!-- DimensUtil.getDpFromPix(android.content.Context, int) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getDpFromPix' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getDpFromPix' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[2]" name="managedName">pix</attr>
<!-- DimensUtil.getPixFromDp(android.content.Context, int) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getPixFromDp' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getPixFromDp' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[2]" name="managedName">dp</attr>
<!-- DimensUtil.getScreenOrientation(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getScreenOrientation' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- DimensUtil.isOrientationPortrait(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='isOrientationPortrait' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- File: IO.Anyline.Opencv.Video.DenseOpticalFlow.cs -->
<!-- DenseOpticalFlow.DenseOpticalFlow(long) -->
<!-- DenseOpticalFlow.calc(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Models.AnylineScanResult.cs -->
<!-- AnylineScanResult.AnylineScanResult(java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, T, java.lang.String) -->
<!-- AnylineScanResult.AnylineScanResult(java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, T, java.lang.String) -->
<!-- AnylineScanResult.setOutline(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='setOutline' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">outline</attr>
<!-- AnylineScanResult.reportCorrectedResult(android.content.Context, java.lang.String, java.lang.String, io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[2]" name="managedName">correctedResult</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[3]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[4]" name="managedName">correctedResultHandler</attr>
<!-- AnylineScanResult.reportCorrectedResult(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[2]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[3]" name="managedName">correctedResult</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[5]" name="managedName">correctedResultHandler</attr>
<!-- AnylineScanResult.reportCorrectedResult(android.content.Context, java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;, java.lang.String, io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[2]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[3]" name="managedName">correctedResult</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[5]" name="managedName">correctedResultHandler</attr>
<!-- AnylineScanResult.reportCorrectedResult(android.content.Context, java.util.Map&lt;java.lang.String, java.lang.String&gt;, java.lang.String, io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[2]" name="managedName">correctedResult</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[3]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineScanResult']/method[@name='reportCorrectedResult' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler']]/parameter[4]" name="managedName">correctedResultHandler</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfDMatch.cs -->
<!-- MatOfDMatch.MatOfDMatch(io.anyline.opencv.core.DMatch...) -->
<!-- MatOfDMatch.MatOfDMatch(io.anyline.opencv.core.Mat) -->
<!-- MatOfDMatch.MatOfDMatch(long) -->
<!-- MatOfDMatch.alloc(int) -->
<!-- MatOfDMatch.fromArray(io.anyline.opencv.core.DMatch...) -->
<!-- MatOfDMatch.fromList(java.util.List&lt;io.anyline.opencv.core.DMatch&gt;) -->
<!-- MatOfDMatch.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Opencv.Core.DMatch.cs -->
<!-- DMatch.DMatch(int, int, float) -->
<!-- DMatch.DMatch(int, int, int, float) -->
<!-- DMatch.lessThan(io.anyline.opencv.core.DMatch) -->
<!-- File: IO.Anyline.Camera.NativeBarcodeDetectionThread.cs -->
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint.cs -->
<!-- MatOfPoint.MatOfPoint(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='MatOfPoint']/constructor[@name='MatOfPoint' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- MatOfPoint.MatOfPoint(io.anyline.opencv.core.Point...) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='MatOfPoint']/constructor[@name='MatOfPoint' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Point...']]/parameter[1]" name="managedName">m</attr>
<!-- MatOfPoint.MatOfPoint(long) -->
<!-- MatOfPoint.alloc(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='MatOfPoint']/method[@name='alloc' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">elemNumber</attr>
<!-- MatOfPoint.fromArray(io.anyline.opencv.core.Point...) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='MatOfPoint']/method[@name='fromArray' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Point...']]/parameter[1]" name="managedName">a</attr>
<!-- MatOfPoint.fromList(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='MatOfPoint']/method[@name='fromList' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline.opencv.core.Point&gt;']]/parameter[1]" name="managedName">lp</attr>
<!-- MatOfPoint.fromNativeAddr(long) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='MatOfPoint']/method[@name='fromNativeAddr' and count(parameter)=1 and parameter[1][@type='long']]/parameter[1]" name="managedName">addr</attr>
<!-- File: IO.Anyline.Camera.SimpleZoomHandler.cs -->
<!-- SimpleZoomHandler.IZoomHandlerListener.onZoomChanged(int) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='SimpleZoomHandler.IZoomHandlerListener']/method[@name='onZoomChanged' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">newZoom</attr>
<!-- SimpleZoomHandler.notifyZoomChanged(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandler']/method[@name='notifyZoomChanged' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">zoom</attr>
<!-- SimpleZoomHandler.setZoomHandlerListener(io.anyline.camera.SimpleZoomHandler.IZoomHandlerListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='SimpleZoomHandler']/method[@name='setZoomHandlerListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.SimpleZoomHandler.IZoomHandlerListener']]/parameter[1]" name="managedName">zoomHandlerListener</attr>
<!-- File: IO.Anyline.Opencv.ML.LogisticRegression.cs -->
<!-- LogisticRegression.LogisticRegression(long) -->
<!-- LogisticRegression.setIterations(int) -->
<!-- LogisticRegression.setLearningRate(double) -->
<!-- LogisticRegression.setMiniBatchSize(int) -->
<!-- LogisticRegression.setRegularization(int) -->
<!-- LogisticRegression.setTermCriteria(io.anyline.opencv.core.TermCriteria) -->
<!-- LogisticRegression.setTrainMethod(int) -->
<!-- File: IO.Anyline.Plugin.ID.IdScanPlugin.cs -->
<!-- IdScanPlugin.ScanMode.valueOf(java.lang.String) -->
<!-- IdScanPlugin.IdScanPlugin(android.content.Context, java.lang.String, io.anyline.plugin.id.IdConfig&lt;?, ?&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanPlugin']/constructor[@name='IdScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanPlugin']/constructor[@name='IdScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanPlugin']/constructor[@name='IdScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;']]/parameter[3]" name="managedName">idConfig</attr>
<!-- IdScanPlugin.setIdConfig(io.anyline.plugin.id.IdConfig&lt;?, ?&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanPlugin']/method[@name='setIdConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IdConfig&lt;?, ?&gt;']]/parameter[1]" name="managedName">idConfig</attr>
<!-- IdScanPlugin.onFailure(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanPlugin']/method[@name='onFailure' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">e</attr>
<!-- IdScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- IdScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- IdScanPlugin.onSuccess(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IdScanPlugin']/method[@name='onSuccess' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">faceImage</attr>
<!-- File: IO.Anyline.Nfc.NFC.NFCResult.cs -->
<!-- NFCResult.NFCResult(io.anyline.nfc.NFC.DataGroup1, io.anyline.nfc.NFC.DataGroup2, io.anyline.nfc.NFC.SOD) -->
<!-- NFCResult.setDataGroup1(io.anyline.nfc.NFC.DataGroup1) -->
<!-- NFCResult.setDataGroup2(io.anyline.nfc.NFC.DataGroup2) -->
<!-- NFCResult.setSod(io.anyline.nfc.NFC.SOD) -->
<!-- File: IO.Anyline.Models.IBitmapCreator.cs -->
<!-- BitmapCreator.createBitmap(int, int, android.graphics.Bitmap.Config) -->
<attr path="/api/package[@name='io.anyline.models']/interface[@name='BitmapCreator']/method[@name='createBitmap' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Bitmap.Config']]/parameter[1]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.models']/interface[@name='BitmapCreator']/method[@name='createBitmap' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Bitmap.Config']]/parameter[2]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.models']/interface[@name='BitmapCreator']/method[@name='createBitmap' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Bitmap.Config']]/parameter[3]" name="managedName">config</attr>
<!-- File: IO.Anyline.Opencv.Imgcodecs.Imgcodecs.cs -->
<!-- Imgcodecs.imdecode(io.anyline.opencv.core.Mat, int) -->
<!-- Imgcodecs.imencode(java.lang.String, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfByte) -->
<!-- Imgcodecs.imencode(java.lang.String, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfByte, io.anyline.opencv.core.MatOfInt) -->
<!-- Imgcodecs.imread(java.lang.String) -->
<!-- Imgcodecs.imread(java.lang.String, int) -->
<!-- Imgcodecs.imreadmulti(java.lang.String, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Imgcodecs.imreadmulti(java.lang.String, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, int) -->
<!-- Imgcodecs.imwrite(java.lang.String, io.anyline.opencv.core.Mat) -->
<!-- Imgcodecs.imwrite(java.lang.String, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfInt) -->
<!-- File: IO.Anyline.Nfc.Parser.DG1Parser.cs -->
<!-- DG1Parser.DG1Parser(byte[]) -->
<!-- DG1Parser.setDateOfBirth(java.lang.String) -->
<!-- DG1Parser.setDateOfBirthCheckDigit(java.lang.String) -->
<!-- DG1Parser.setDateOfExpiry(java.lang.String) -->
<!-- DG1Parser.setDateOfExpiryCheckDigit(java.lang.String) -->
<!-- DG1Parser.setDocumentCode(java.lang.String) -->
<!-- DG1Parser.setDocumentNumber(java.lang.String) -->
<!-- DG1Parser.setDocumentNumberCheckDigit(java.lang.String) -->
<!-- DG1Parser.setGender(java.lang.String) -->
<!-- DG1Parser.setGivenNames(java.lang.String) -->
<!-- DG1Parser.setIssuingStateCode(java.lang.String) -->
<!-- DG1Parser.setMRZ(java.lang.String) -->
<!-- DG1Parser.setNationalityCode(java.lang.String) -->
<!-- DG1Parser.setSurname(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Core.Mat.cs -->
<!-- Mat.Mat(int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">type</attr>
<!-- Mat.Mat(int, int, int, io.anyline.opencv.core.Scalar) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='io.anyline.opencv.core.Scalar']]/parameter[1]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='io.anyline.opencv.core.Scalar']]/parameter[2]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='io.anyline.opencv.core.Scalar']]/parameter[3]" name="managedName">type</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='io.anyline.opencv.core.Scalar']]/parameter[4]" name="managedName">s</attr>
<!-- Mat.Mat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Range) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Range']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Range']]/parameter[2]" name="managedName">rowRange</attr>
<!-- Mat.Mat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Range, io.anyline.opencv.core.Range) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Range'] and parameter[3][@type='io.anyline.opencv.core.Range']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Range'] and parameter[3][@type='io.anyline.opencv.core.Range']]/parameter[2]" name="managedName">rowRange</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Range'] and parameter[3][@type='io.anyline.opencv.core.Range']]/parameter[3]" name="managedName">colRange</attr>
<!-- Mat.Mat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect) -->
<!-- Mat.Mat(io.anyline.opencv.core.Size, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[1]" name="managedName">size</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[2]" name="managedName">type</attr>
<!-- Mat.Mat(io.anyline.opencv.core.Size, int, io.anyline.opencv.core.Scalar) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.opencv.core.Scalar']]/parameter[1]" name="managedName">size</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.opencv.core.Scalar']]/parameter[2]" name="managedName">type</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.opencv.core.Scalar']]/parameter[3]" name="managedName">s</attr>
<!-- Mat.Mat(long) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/constructor[@name='Mat' and count(parameter)=1 and parameter[1][@type='long']]/parameter[1]" name="managedName">addr</attr>
<!-- Mat.adjustROI(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='adjustROI' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">dtop</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='adjustROI' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">dbottom</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='adjustROI' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">dleft</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='adjustROI' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">dright</attr>
<!-- Mat.assignTo(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='assignTo' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- Mat.assignTo(io.anyline.opencv.core.Mat, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='assignTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='assignTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int']]/parameter[2]" name="managedName">type</attr>
<!-- Mat.checkVector(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='checkVector' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">elemChannels</attr>
<!-- Mat.checkVector(int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='checkVector' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">elemChannels</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='checkVector' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">depth</attr>
<!-- Mat.checkVector(int, int, boolean) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='checkVector' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]/parameter[1]" name="managedName">elemChannels</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='checkVector' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]/parameter[2]" name="managedName">depth</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='checkVector' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]/parameter[3]" name="managedName">requireContinuous</attr>
<!-- Mat.col(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='col' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">x</attr>
<!-- Mat.colRange(int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='colRange' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">startcol</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='colRange' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">endcol</attr>
<!-- Mat.colRange(io.anyline.opencv.core.Range) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='colRange' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Range']]/parameter[1]" name="managedName">r</attr>
<!-- Mat.convertTo(io.anyline.opencv.core.Mat, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int']]/parameter[2]" name="managedName">rtype</attr>
<!-- Mat.convertTo(io.anyline.opencv.core.Mat, int, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double']]/parameter[2]" name="managedName">rtype</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=3 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double']]/parameter[3]" name="managedName">alpha</attr>
<!-- Mat.convertTo(io.anyline.opencv.core.Mat, int, double, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=4 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=4 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[2]" name="managedName">rtype</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=4 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[3]" name="managedName">alpha</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='convertTo' and count(parameter)=4 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='int'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[4]" name="managedName">beta</attr>
<!-- Mat.copyTo(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='copyTo' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- Mat.copyTo(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='copyTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='copyTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Mat']]/parameter[2]" name="managedName">mask</attr>
<!-- Mat.create(int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='create' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='create' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='create' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">type</attr>
<!-- Mat.create(io.anyline.opencv.core.Size, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='create' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[1]" name="managedName">size</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='create' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[2]" name="managedName">type</attr>
<!-- Mat.cross(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='cross' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- Mat.diag(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='diag' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">d</attr>
<!-- Mat.diag(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='diag' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">d</attr>
<!-- Mat.dot(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='dot' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- Mat.eye(int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='eye' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='eye' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='eye' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">type</attr>
<!-- Mat.eye(io.anyline.opencv.core.Size, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='eye' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[1]" name="managedName">size</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='eye' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[2]" name="managedName">type</attr>
<!-- Mat.get(int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">col</attr>
<!-- Mat.get(int, int, byte[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.get(int, int, double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='double[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='double[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='double[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.get(int, int, float[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.get(int, int, int[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.get(int, int, short[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='short[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='short[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='get' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='short[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.inv(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='inv' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">method</attr>
<!-- Mat.locateROI(io.anyline.opencv.core.Size, io.anyline.opencv.core.Point) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='locateROI' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='io.anyline.opencv.core.Point']]/parameter[1]" name="managedName">wholeSize</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='locateROI' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='io.anyline.opencv.core.Point']]/parameter[2]" name="managedName">ofs</attr>
<!-- Mat.mul(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='mul' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- Mat.mul(io.anyline.opencv.core.Mat, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='mul' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='double']]/parameter[1]" name="managedName">m</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='mul' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='double']]/parameter[2]" name="managedName">scale</attr>
<!-- Mat.ones(int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='ones' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='ones' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='ones' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">type</attr>
<!-- Mat.ones(io.anyline.opencv.core.Size, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='ones' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[1]" name="managedName">size</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='ones' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[2]" name="managedName">type</attr>
<!-- Mat.push_back(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='push_back' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">m</attr>
<!-- Mat.put(int, int, byte[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.put(int, int, double...) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='double...']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='double...']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='double...']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.put(int, int, float[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.put(int, int, int[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.put(int, int, short[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='short[]']]/parameter[1]" name="managedName">row</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='short[]']]/parameter[2]" name="managedName">col</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='put' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='short[]']]/parameter[3]" name="managedName">data</attr>
<!-- Mat.reshape(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='reshape' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cn</attr>
<!-- Mat.reshape(int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='reshape' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">cn</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='reshape' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">rows</attr>
<!-- Mat.row(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='row' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">y</attr>
<!-- Mat.rowRange(int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='rowRange' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">startrow</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='rowRange' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">endrow</attr>
<!-- Mat.rowRange(io.anyline.opencv.core.Range) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='rowRange' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Range']]/parameter[1]" name="managedName">r</attr>
<!-- Mat.setTo(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='setTo' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">value</attr>
<!-- Mat.setTo(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='setTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">value</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='setTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Mat'] and parameter[2][@type='io.anyline.opencv.core.Mat']]/parameter[2]" name="managedName">mask</attr>
<!-- Mat.setTo(io.anyline.opencv.core.Scalar) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='setTo' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Scalar']]/parameter[1]" name="managedName">s</attr>
<!-- Mat.setTo(io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='setTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Scalar'] and parameter[2][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">value</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='setTo' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Scalar'] and parameter[2][@type='io.anyline.opencv.core.Mat']]/parameter[2]" name="managedName">mask</attr>
<!-- Mat.step1(int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='step1' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">i</attr>
<!-- Mat.submat(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">rowStart</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">rowEnd</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">colStart</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">colEnd</attr>
<!-- Mat.submat(io.anyline.opencv.core.Range, io.anyline.opencv.core.Range) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Range'] and parameter[2][@type='io.anyline.opencv.core.Range']]/parameter[1]" name="managedName">rowRange</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Range'] and parameter[2][@type='io.anyline.opencv.core.Range']]/parameter[2]" name="managedName">colRange</attr>
<!-- Mat.submat(io.anyline.opencv.core.Rect) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='submat' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Rect']]/parameter[1]" name="managedName">roi</attr>
<!-- Mat.zeros(int, int, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='zeros' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='zeros' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='zeros' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">type</attr>
<!-- Mat.zeros(io.anyline.opencv.core.Size, int) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='zeros' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[1]" name="managedName">size</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Mat']/method[@name='zeros' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Size'] and parameter[2][@type='int']]/parameter[2]" name="managedName">type</attr>
<!-- File: IO.Anyline.Opencv.Video.BackgroundSubtractorKNN.cs -->
<!-- BackgroundSubtractorKNN.BackgroundSubtractorKNN(long) -->
<!-- BackgroundSubtractorKNN.setDetectShadows(boolean) -->
<!-- BackgroundSubtractorKNN.setDist2Threshold(double) -->
<!-- BackgroundSubtractorKNN.setHistory(int) -->
<!-- BackgroundSubtractorKNN.setNSamples(int) -->
<!-- BackgroundSubtractorKNN.setShadowThreshold(double) -->
<!-- BackgroundSubtractorKNN.setShadowValue(int) -->
<!-- BackgroundSubtractorKNN.setkNNSamples(int) -->
<!-- File: IO.Anyline.Util.SoundUtil.cs -->
<!-- SoundUtil.SoundUtil(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='SoundUtil']/constructor[@name='SoundUtil' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- SoundUtil.loadSoundFromAssets(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='SoundUtil']/method[@name='loadSoundFromAssets' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">assetFileName</attr>
<!-- SoundUtil.playSound(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='SoundUtil']/method[@name='playSound' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">assetFileName</attr>
<!-- File: IO.Anyline.Nfc.NFC.SOD.cs -->
<!-- SOD.SOD(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<!-- SOD.setIssuerCertificationAuthority(java.lang.String) -->
<!-- SOD.setIssuerCountry(java.lang.String) -->
<!-- SOD.setIssuerOrganization(java.lang.String) -->
<!-- SOD.setIssuerOrganizationalUnit(java.lang.String) -->
<!-- SOD.setLdsHashAlgorithm(java.lang.String) -->
<!-- SOD.setSignatureAlgorithm(java.lang.String) -->
<!-- SOD.setValidFromString(java.lang.String) -->
<!-- SOD.setValidUntilString(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Video.BackgroundSubtractor.cs -->
<!-- BackgroundSubtractor.BackgroundSubtractor(long) -->
<!-- BackgroundSubtractor.apply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- BackgroundSubtractor.apply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- BackgroundSubtractor.getBackgroundImage(io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Nfc.Constants.MrtdConstants.cs -->
<!-- File: IO.Anyline.Plugin.Barcode.BarcodeScanResult.cs -->
<!-- BarcodeScanResult.BarcodeScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeScanResult']/constructor[@name='BarcodeScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.util.List&lt;io.anyline.plugin.barcode.Barcode&gt;'] and parameter[7][@type='java.lang.String']]/parameter[7]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.Opencv.Core.MatProviderImpl.cs -->
<!-- MatProviderImpl.provideMat(io.anyline.opencv.core.Size, int) -->
<!-- File: IO.Anyline.Opencv.Photo.MergeExposures.cs -->
<!-- MergeExposures.MergeExposures(long) -->
<!-- MergeExposures.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Opencv.Core.IMatProvider.cs -->
<!-- MatProvider.provideMat(io.anyline.opencv.core.Size, int) -->
<!-- File: IO.Anyline.Plugin.Ocr.OcrScanPlugin.cs -->
<!-- OcrScanPlugin.OcrScanPlugin(android.content.Context, java.lang.String, io.anyline.plugin.ocr.AnylineOcrBaseConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanPlugin']/constructor[@name='OcrScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanPlugin']/constructor[@name='OcrScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanPlugin']/constructor[@name='OcrScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig']]/parameter[3]" name="managedName">config</attr>
<!-- OcrScanPlugin.setAnylineOcrConfig(io.anyline.plugin.ocr.AnylineOcrBaseConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanPlugin']/method[@name='setAnylineOcrConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ocr.AnylineOcrBaseConfig']]/parameter[1]" name="managedName">anylineOcrConfig</attr>
<!-- OcrScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- OcrScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- File: IO.Anyline.Plugin.Barcode.BarcodeFormat.cs -->
<!-- BarcodeFormat.fromBarcodeScanViewBarcodeFormat(io.anyline.plugin.barcode.BarcodeFormat) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeFormat']/method[@name='fromBarcodeScanViewBarcodeFormat' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeFormat']]/parameter[1]" name="managedName">barcodeFormat</attr>
<!-- BarcodeFormat.toBarcodeFormatInt(io.anyline.plugin.barcode.BarcodeFormat) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeFormat']/method[@name='toBarcodeFormatInt' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeFormat']]/parameter[1]" name="managedName">barcodeFormat</attr>
<!-- BarcodeFormat.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeFormat']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.View.FlashViewConfig.cs -->
<!-- FlashViewConfig.FlashAlignment.fromInt(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig.FlashAlignment']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">pos</attr>
<!-- FlashViewConfig.FlashAlignment.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig.FlashAlignment']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">flashPos</attr>
<!-- FlashViewConfig.FlashAlignment.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig.FlashAlignment']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- FlashViewConfig.FlashMode.fromInt(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig.FlashMode']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">mode</attr>
<!-- FlashViewConfig.FlashMode.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig.FlashMode']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">mode</attr>
<!-- FlashViewConfig.FlashMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig.FlashMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- FlashViewConfig.FlashViewConfig(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/constructor[@name='FlashViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/constructor[@name='FlashViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">flashJson</attr>
<!-- FlashViewConfig.setAlignment(io.anyline.view.FlashViewConfig.FlashAlignment) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setAlignment' and count(parameter)=1 and parameter[1][@type='io.anyline.view.FlashViewConfig.FlashAlignment']]/parameter[1]" name="managedName">alignment</attr>
<!-- FlashViewConfig.setImageAutoId(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setImageAutoId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">imageAutoId</attr>
<!-- FlashViewConfig.setImageOffId(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setImageOffId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">imageOffId</attr>
<!-- FlashViewConfig.setImageOnId(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setImageOnId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">imageOnId</attr>
<!-- FlashViewConfig.setMode(io.anyline.view.FlashViewConfig.FlashMode) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setMode' and count(parameter)=1 and parameter[1][@type='io.anyline.view.FlashViewConfig.FlashMode']]/parameter[1]" name="managedName">mode</attr>
<!-- FlashViewConfig.setOffsetXInDp(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setOffsetXInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">offsetXInDp</attr>
<!-- FlashViewConfig.setOffsetYInDp(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setOffsetYInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">offsetYInDp</attr>
<!-- FlashViewConfig.setPaddingInDp(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashViewConfig']/method[@name='setPaddingInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">paddingInDp</attr>
<!-- File: IO.Anyline.Plugin.ID.UniversalIdFieldConfidences.cs -->
<!-- UniversalIdFieldConfidences.addField(java.lang.String, java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldConfidences']/method[@name='addField' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Integer']]/parameter[1]" name="managedName">fieldName</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldConfidences']/method[@name='addField' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Integer']]/parameter[2]" name="managedName">value</attr>
<!-- UniversalIdFieldConfidences.getConfidence(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldConfidences']/method[@name='getConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- UniversalIdFieldConfidences.hasField(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldConfidences']/method[@name='hasField' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- UniversalIdFieldConfidences.removeField(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldConfidences']/method[@name='removeField' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- File: IO.Anyline.Opencv.Core.Point.cs -->
<!-- Point.Point(double, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Point']/constructor[@name='Point' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[1]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Point']/constructor[@name='Point' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[2]" name="managedName">y</attr>
<!-- Point.Point(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Point']/constructor[@name='Point' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- Point.dot(io.anyline.opencv.core.Point) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Point']/method[@name='dot' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Point']]/parameter[1]" name="managedName">p</attr>
<!-- Point.inside(io.anyline.opencv.core.Rect) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Point']/method[@name='inside' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Rect']]/parameter[1]" name="managedName">r</attr>
<!-- Point.set(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Point']/method[@name='set' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- File: IO.Anyline.Opencv.Calib3d.StereoBM.cs -->
<!-- StereoBM.StereoBM(long) -->
<!-- StereoBM.setPreFilterCap(int) -->
<!-- StereoBM.setPreFilterSize(int) -->
<!-- StereoBM.setPreFilterType(int) -->
<!-- StereoBM.setROI1(io.anyline.opencv.core.Rect) -->
<!-- StereoBM.setROI2(io.anyline.opencv.core.Rect) -->
<!-- StereoBM.setSmallerBlockSize(int) -->
<!-- StereoBM.setTextureThreshold(int) -->
<!-- StereoBM.setUniquenessRatio(int) -->
<!-- StereoBM.create(int, int) -->
<!-- File: IO.Anyline.Version.cs -->
<!-- Version.Version(java.lang.Integer) -->
<!-- Version.Version(java.lang.Integer, java.lang.Integer) -->
<!-- Version.Version(java.lang.Integer, java.lang.Integer, java.lang.Integer) -->
<!-- Version.setMajor(java.lang.String) -->
<!-- Version.setMinor(java.lang.String) -->
<!-- Version.setPatch(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Android.ILoaderCallbackInterface.cs -->
<!-- LoaderCallbackInterface.onManagerConnected(int) -->
<!-- LoaderCallbackInterface.onPackageInstall(int, io.anyline.opencv.android.InstallCallbackInterface) -->
<!-- File: IO.Anyline.Opencv.Photo.MergeRobertson.cs -->
<!-- MergeRobertson.MergeRobertson(long) -->
<!-- MergeRobertson.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Nfc.Parser.Iso19794Parser.cs -->
<!-- Iso19794Parser.Iso19794Parser(byte[]) -->
<!-- File: IO.Anyline.Plugin.IScanPlugin.cs -->
<!-- ScanPlugin.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ScanPlugin.addScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='addScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- ScanPlugin.addScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='addScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- ScanPlugin.addScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='addScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- ScanPlugin.removeScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='removeScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- ScanPlugin.removeScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='removeScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- ScanPlugin.removeScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanPlugin']/method[@name='removeScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- File: IO.Anyline.Opencv.Imgproc.IImgprocProvider.cs -->
<!-- ImgprocProvider.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- File: IO.Anyline.SimpleImageProvider.cs -->
<!-- SimpleImageProvider.setNewImage(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline']/class[@name='SimpleImageProvider']/method[@name='setNewImage' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">image</attr>
<!-- SimpleImageProvider.setNewImage(android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline']/class[@name='SimpleImageProvider']/method[@name='setNewImage' and count(parameter)=1 and parameter[1][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">bmp</attr>
<!-- SimpleImageProvider.setNewImage(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline']/class[@name='SimpleImageProvider']/method[@name='setNewImage' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">mat</attr>
<!-- File: IO.Anyline.Opencv.Imgproc.Imgproc.cs -->
<!-- Imgproc.Canny(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double) -->
<!-- Imgproc.Canny(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, boolean) -->
<!-- Imgproc.GaussianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double) -->
<!-- Imgproc.GaussianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double, double) -->
<!-- Imgproc.GaussianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double, double, int) -->
<!-- Imgproc.HoughCircles(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double) -->
<!-- Imgproc.HoughCircles(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double, double, double, int, int) -->
<!-- Imgproc.HoughLines(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Imgproc.HoughLines(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, double, double, double, double) -->
<!-- Imgproc.HoughLinesP(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Imgproc.HoughLinesP(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, double, double) -->
<!-- Imgproc.HuMoments(io.anyline.opencv.imgproc.Moments, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.Laplacian(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.Laplacian(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double, double) -->
<!-- Imgproc.Laplacian(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double, double, int) -->
<!-- Imgproc.Scharr(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.Scharr(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, double, double) -->
<!-- Imgproc.Scharr(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, double, double, int) -->
<!-- Imgproc.Sobel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.Sobel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, double, double) -->
<!-- Imgproc.Sobel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, double, double, int) -->
<!-- Imgproc.accumulate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateProduct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateProduct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateSquare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateSquare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateWeighted(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Imgproc.accumulateWeighted(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.adaptiveThreshold(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int, int, int, double) -->
<!-- Imgproc.applyColorMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.approxPolyDP(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, double, boolean) -->
<!-- Imgproc.arcLength(io.anyline.opencv.core.MatOfPoint2f, boolean) -->
<!-- Imgproc.arrowedLine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.arrowedLine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int, double) -->
<!-- Imgproc.bilateralFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double) -->
<!-- Imgproc.bilateralFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double, int) -->
<!-- Imgproc.blur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.blur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point) -->
<!-- Imgproc.blur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.boundingRect(io.anyline.opencv.core.MatOfPoint) -->
<!-- Imgproc.boxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size) -->
<!-- Imgproc.boxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean) -->
<!-- Imgproc.boxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean, int) -->
<!-- Imgproc.boxPoints(io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.calcBackProject(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfFloat, double) -->
<!-- Imgproc.calcHist(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfFloat) -->
<!-- Imgproc.calcHist(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfFloat, boolean) -->
<!-- Imgproc.circle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.circle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.circle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.clipLine(io.anyline.opencv.core.Rect, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point) -->
<!-- Imgproc.compareHist(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.connectedComponents(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.connectedComponents(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.connectedComponentsWithStats(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.connectedComponentsWithStats(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.contourArea(io.anyline.opencv.core.Mat) -->
<!-- Imgproc.contourArea(io.anyline.opencv.core.Mat, boolean) -->
<!-- Imgproc.convertMaps(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.convertMaps(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, boolean) -->
<!-- Imgproc.convexHull(io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfInt) -->
<!-- Imgproc.convexHull(io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfInt, boolean) -->
<!-- Imgproc.convexityDefects(io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfInt4) -->
<!-- Imgproc.cornerEigenValsAndVecs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.cornerEigenValsAndVecs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.cornerHarris(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double) -->
<!-- Imgproc.cornerHarris(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double, int) -->
<!-- Imgproc.cornerMinEigenVal(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.cornerMinEigenVal(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.cornerMinEigenVal(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.cornerSubPix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.TermCriteria) -->
<!-- Imgproc.createCLAHE(double, io.anyline.opencv.core.Size) -->
<!-- Imgproc.createHanningWindow(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.createLineSegmentDetector(int, double, double, double, double, double, double, int) -->
<!-- Imgproc.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.demosaicing(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.demosaicing(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.dilate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.dilate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.dilate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.distanceTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.distanceTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.distanceTransformWithLabels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.distanceTransformWithLabels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.drawContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.drawContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, int, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.drawContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, int, io.anyline.opencv.core.Scalar, int, int, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Point) -->
<!-- Imgproc.drawMarker(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.drawMarker(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double, double, double, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double, double, double, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double, double, double, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Scalar, int, int) -->
<!-- Imgproc.ellipse2Poly(io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, int, int, int, int, io.anyline.opencv.core.MatOfPoint) -->
<!-- Imgproc.equalizeHist(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.erode(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.erode(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.erode(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.fillConvexPoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.fillConvexPoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.Scalar, int, int) -->
<!-- Imgproc.fillPoly(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.fillPoly(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Scalar, int, int, io.anyline.opencv.core.Point) -->
<!-- Imgproc.filter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.filter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double) -->
<!-- Imgproc.filter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.findContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.findContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Point) -->
<!-- Imgproc.fitEllipse(io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Imgproc.fitLine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double, double) -->
<!-- Imgproc.floodFill(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.floodFill(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Rect, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.getAffineTransform(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Imgproc.getDefaultNewCameraMatrix(io.anyline.opencv.core.Mat) -->
<!-- Imgproc.getDefaultNewCameraMatrix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, boolean) -->
<!-- Imgproc.getDerivKernels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.getDerivKernels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, boolean, int) -->
<!-- Imgproc.getGaborKernel(io.anyline.opencv.core.Size, double, double, double, double) -->
<!-- Imgproc.getGaborKernel(io.anyline.opencv.core.Size, double, double, double, double, double, int) -->
<!-- Imgproc.getGaussianKernel(int, double) -->
<!-- Imgproc.getGaussianKernel(int, double, int) -->
<!-- Imgproc.getPerspectiveTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.getRectSubPix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.getRectSubPix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.getRotationMatrix2D(io.anyline.opencv.core.Point, double, double) -->
<!-- Imgproc.getStructuringElement(int, io.anyline.opencv.core.Size) -->
<!-- Imgproc.getStructuringElement(int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point) -->
<!-- Imgproc.getTextSize(java.lang.String, int, double, int, int[]) -->
<!-- Imgproc.goodFeaturesToTrack(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, int, double, double) -->
<!-- Imgproc.goodFeaturesToTrack(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, int, double, double, io.anyline.opencv.core.Mat, int, boolean, double) -->
<!-- Imgproc.grabCut(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.grabCut(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.initUndistortRectifyMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.initWideAngleProjMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.initWideAngleProjMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double) -->
<!-- Imgproc.integral(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.integral(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.integral2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.integral2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.integral3(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.integral3(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.intersectConvexConvex(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.intersectConvexConvex(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Imgproc.invertAffineTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.isContourConvex(io.anyline.opencv.core.MatOfPoint) -->
<!-- Imgproc.line(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.line(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.line(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.linearPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.logPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.matchShapes(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double) -->
<!-- Imgproc.matchTemplate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.matchTemplate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.medianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.minAreaRect(io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Imgproc.minEnclosingCircle(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Point, float[]) -->
<!-- Imgproc.minEnclosingTriangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.moments(io.anyline.opencv.core.Mat) -->
<!-- Imgproc.moments(io.anyline.opencv.core.Mat, boolean) -->
<!-- Imgproc.morphologyEx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.morphologyEx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.morphologyEx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.phaseCorrelate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.phaseCorrelate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double[]) -->
<!-- Imgproc.pointPolygonTest(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Point, boolean) -->
<!-- Imgproc.polylines(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, boolean, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.polylines(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, boolean, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.polylines(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, boolean, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.preCornerDetect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.preCornerDetect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.putText(io.anyline.opencv.core.Mat, java.lang.String, io.anyline.opencv.core.Point, int, double, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.putText(io.anyline.opencv.core.Mat, java.lang.String, io.anyline.opencv.core.Point, int, double, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.putText(io.anyline.opencv.core.Mat, java.lang.String, io.anyline.opencv.core.Point, int, double, io.anyline.opencv.core.Scalar, int, int, boolean) -->
<!-- Imgproc.pyrDown(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.pyrDown(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.pyrDown(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.pyrMeanShiftFiltering(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double) -->
<!-- Imgproc.pyrMeanShiftFiltering(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, io.anyline.opencv.core.TermCriteria) -->
<!-- Imgproc.pyrUp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.pyrUp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.pyrUp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.rectangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.rectangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.rectangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.remap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.remap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.resize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.resize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double, double, int) -->
<!-- Imgproc.rotatedRectangleIntersection(io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.sepFilter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.sepFilter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double) -->
<!-- Imgproc.sepFilter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.spatialGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.spatialGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.spatialGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.sqrBoxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size) -->
<!-- Imgproc.sqrBoxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean) -->
<!-- Imgproc.sqrBoxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean, int) -->
<!-- Imgproc.threshold(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Imgproc.undistort(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.undistort(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.undistortPoints(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.undistortPoints(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.warpAffine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.warpAffine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.warpAffine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.warpPerspective(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.warpPerspective(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.warpPerspective(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.watershed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Opencv.Features2d.DescriptorExtractor.cs -->
<!-- DescriptorExtractor.DescriptorExtractor(long) -->
<!-- DescriptorExtractor.compute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfKeyPoint, io.anyline.opencv.core.Mat) -->
<!-- DescriptorExtractor.compute(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- DescriptorExtractor.create(int) -->
<!-- DescriptorExtractor.read(java.lang.String) -->
<!-- DescriptorExtractor.write(java.lang.String) -->
<!-- File: IO.Anyline.View.AbstractWebView.cs -->
<!-- AbstractWebView.AbstractWebView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/constructor[@name='AbstractWebView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- AbstractWebView.AbstractWebView(android.content.Context, io.anyline.camera.VisualFeedbackConfig, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/constructor[@name='AbstractWebView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[3][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/constructor[@name='AbstractWebView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[3][@type='float']]/parameter[2]" name="managedName">visualFeedbackConfig</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/constructor[@name='AbstractWebView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.camera.VisualFeedbackConfig'] and parameter[3][@type='float']]/parameter[3]" name="managedName">resizeScale</attr>
<!-- AbstractWebView.drawDocument(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='drawDocument' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">reportedShape</attr>
<!-- AbstractWebView.getScaleWebView(android.webkit.WebView) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='getScaleWebView' and count(parameter)=1 and parameter[1][@type='android.webkit.WebView']]/parameter[1]" name="managedName">webView</attr>
<!-- AbstractWebView.getViewRelativePointListFromCutoutRelativeShape(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">shape</attr>
<!-- AbstractWebView.setCutoutInfo(android.graphics.Rect, float, int, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setCutoutInfo' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">cutoutRectOnView</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setCutoutInfo' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">frameToViewScale</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setCutoutInfo' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">cutoutCropOffsetOnViewX</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setCutoutInfo' and count(parameter)=4 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='float'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">cutoutCropOffsetOnViewY</attr>
<!-- AbstractWebView.setCutoutRect(android.graphics.Rect, io.anyline.view.CutoutConfig) -->
<!-- AbstractWebView.setRectRelativeToCutout(android.graphics.RectF, io.anyline.opencv.core.Rect, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=3 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[1]" name="managedName">rect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=3 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[2]" name="managedName">reportedRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=3 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[3]" name="managedName">resizeScale</attr>
<!-- AbstractWebView.setShapeRelativeToCutout(java.util.List&lt;android.graphics.PointF&gt;, io.anyline.opencv.core.Rect, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setShapeRelativeToCutout' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[1]" name="managedName">reportedShape</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setShapeRelativeToCutout' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[2]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='setShapeRelativeToCutout' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[3]" name="managedName">resizeScale</attr>
<!-- AbstractWebView.setUIVisualFeedbackConfig(io.anyline.camera.VisualFeedbackConfig) -->
<!-- AbstractWebView.updateShape(java.util.List&lt;android.graphics.PointF&gt;, io.anyline.opencv.core.Rect, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='updateShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[1]" name="managedName">reportedShape</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='updateShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[2]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractWebView']/method[@name='updateShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline.opencv.core.Rect'] and parameter[3][@type='float']]/parameter[3]" name="managedName">scale</attr>
<!-- File: IO.Anyline.Plugin.Document.DocumentScanViewPlugin.cs -->
<!-- DocumentScanViewPlugin.DocumentError.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin.DocumentError']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- DocumentScanViewPlugin.DocumentRatio.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin.DocumentRatio']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- DocumentScanViewPlugin.DocumentScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/constructor[@name='DocumentScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/constructor[@name='DocumentScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/constructor[@name='DocumentScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">config</attr>
<!-- DocumentScanViewPlugin.DocumentScanViewPlugin(android.content.Context, io.anyline.view.ScanViewPluginConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/constructor[@name='DocumentScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/constructor[@name='DocumentScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">config</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/constructor[@name='DocumentScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- DocumentScanViewPlugin.setPostProcessingEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setPostProcessingEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">enabled</attr>
<!-- DocumentScanViewPlugin.setDocumentNotifierListener(io.anyline.plugin.document.DocumentNotifierListener) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setDocumentNotifierListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.document.DocumentNotifierListener']]/parameter[1]" name="managedName">listener</attr>
<!-- DocumentScanViewPlugin.setDocumentRatios(java.lang.Double...) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setDocumentRatios' and count(parameter)=1 and parameter[1][@type='java.lang.Double...']]/parameter[1]" name="managedName">ratios</attr>
<!-- DocumentScanViewPlugin.setMaxDocumentOutputResolution(java.lang.Double, java.lang.Double) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setMaxDocumentOutputResolution' and count(parameter)=2 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setMaxDocumentOutputResolution' and count(parameter)=2 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double']]/parameter[2]" name="managedName">height</attr>
<!-- DocumentScanViewPlugin.setMaxDocumentRatioDeviation(java.lang.Double) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setMaxDocumentRatioDeviation' and count(parameter)=1 and parameter[1][@type='java.lang.Double']]/parameter[1]" name="managedName">deviation</attr>
<!-- DocumentScanViewPlugin.setMinBrightness(float) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='setMinBrightness' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">minBrightness</attr>
<!-- DocumentScanViewPlugin.transformPicture(io.anyline.models.AnylineImage, java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='transformPicture' and count(parameter)=2 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.document']/class[@name='DocumentScanViewPlugin']/method[@name='transformPicture' and count(parameter)=2 and parameter[1][@type='io.anyline.models.AnylineImage'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[2]" name="managedName">corners</attr>
<!-- File: IO.Anyline.Opencv.ML.TrainData.cs -->
<!-- TrainData.TrainData(long) -->
<!-- TrainData.getCatCount(int) -->
<!-- TrainData.getSample(io.anyline.opencv.core.Mat, int, float) -->
<!-- TrainData.getSubVector(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- TrainData.getTrainSamples(int, boolean, boolean) -->
<!-- TrainData.getValues(int, io.anyline.opencv.core.Mat, float) -->
<!-- TrainData.setTrainTestSplit(int) -->
<!-- TrainData.setTrainTestSplit(int, boolean) -->
<!-- TrainData.setTrainTestSplitRatio(double) -->
<!-- TrainData.setTrainTestSplitRatio(double, boolean) -->
<!-- File: IO.Anyline.Opencv.Video.KalmanFilter.cs -->
<!-- KalmanFilter.KalmanFilter(int, int) -->
<!-- KalmanFilter.KalmanFilter(int, int, int, int) -->
<!-- KalmanFilter.KalmanFilter(long) -->
<!-- KalmanFilter.correct(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.predict(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_controlMatrix(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_errorCovPost(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_errorCovPre(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_gain(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_measurementMatrix(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_measurementNoiseCov(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_processNoiseCov(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_statePost(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_statePre(io.anyline.opencv.core.Mat) -->
<!-- KalmanFilter.set_transitionMatrix(io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Camera.CameraUtil.cs -->
<!-- CameraUtil.AspectRatio.fromRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil.AspectRatio']/method[@name='fromRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">ratio</attr>
<!-- CameraUtil.AspectRatio.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil.AspectRatio']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">aspectRatioString</attr>
<!-- CameraUtil.AspectRatio.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil.AspectRatio']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraUtil.getBestFittingPictureSize(java.util.List&lt;io.anyline.camera.CameraSize&gt;, int, int, java.util.List&lt;io.anyline.camera.CameraUtil.AspectRatio&gt;) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBestFittingPictureSize' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='java.util.List&lt;io.anyline.camera.CameraUtil.AspectRatio&gt;']]/parameter[1]" name="managedName">pictureSizes</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBestFittingPictureSize' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='java.util.List&lt;io.anyline.camera.CameraUtil.AspectRatio&gt;']]/parameter[2]" name="managedName">preferredPictureWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBestFittingPictureSize' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='java.util.List&lt;io.anyline.camera.CameraUtil.AspectRatio&gt;']]/parameter[3]" name="managedName">preferredPictureHeight</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBestFittingPictureSize' and count(parameter)=4 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='java.util.List&lt;io.anyline.camera.CameraUtil.AspectRatio&gt;']]/parameter[4]" name="managedName">preferredAspectRatios</attr>
<!-- CameraUtil.getBiggestFittingPreviewFps(io.anyline.camera.CameraFeatures.FpsRange[], int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBiggestFittingPreviewFps' and count(parameter)=3 and parameter[1][@type='io.anyline.camera.CameraFeatures.FpsRange[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">supportedFps</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBiggestFittingPreviewFps' and count(parameter)=3 and parameter[1][@type='io.anyline.camera.CameraFeatures.FpsRange[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">minFps</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBiggestFittingPreviewFps' and count(parameter)=3 and parameter[1][@type='io.anyline.camera.CameraFeatures.FpsRange[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">maxFps</attr>
<!-- CameraUtil.getBiggestFittingPreviewSize(java.util.List&lt;io.anyline.camera.CameraSize&gt;, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBiggestFittingPreviewSize' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">availableCameraPreviewSizes</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBiggestFittingPreviewSize' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">maxRequestedCameraPreviewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getBiggestFittingPreviewSize' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;io.anyline.camera.CameraSize&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">maxRequestedCameraPreviewHeight</attr>
<!-- CameraUtil.getCameraDisplayRotation(android.content.Context, android.hardware.camera2.CameraCharacteristics) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getCameraDisplayRotation' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.hardware.camera2.CameraCharacteristics']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getCameraDisplayRotation' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.hardware.camera2.CameraCharacteristics']]/parameter[2]" name="managedName">cameraCharacteristics</attr>
<!-- CameraUtil.getCameraDisplayRotation(android.content.Context, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getCameraDisplayRotation' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getCameraDisplayRotation' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[2]" name="managedName">cameraId</attr>
<!-- CameraUtil.getCameraRotation(android.content.Context, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getCameraRotation' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getCameraRotation' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[2]" name="managedName">cameraId</attr>
<!-- CameraUtil.getDisplayRotationDegrees(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='getDisplayRotationDegrees' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CameraUtil.hasCamera(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='hasCamera' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CameraUtil.setCameraDisplayOrientation(android.content.Context, int, android.hardware.Camera) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='setCameraDisplayOrientation' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='android.hardware.Camera']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='setCameraDisplayOrientation' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='android.hardware.Camera']]/parameter[2]" name="managedName">cameraId</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraUtil']/method[@name='setCameraDisplayOrientation' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='android.hardware.Camera']]/parameter[3]" name="managedName">camera</attr>
<!-- File: IO.Anyline.View.ScanViewRefactor.cs -->
<!-- File: IO.Anyline.Opencv.Photo.MergeMertens.cs -->
<!-- MergeMertens.MergeMertens(long) -->
<!-- MergeMertens.setContrastWeight(float) -->
<!-- MergeMertens.setExposureWeight(float) -->
<!-- MergeMertens.setSaturationWeight(float) -->
<!-- MergeMertens.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Opencv.Photo.MergeDebevec.cs -->
<!-- MergeDebevec.MergeDebevec(long) -->
<!-- MergeDebevec.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Plugin.Ocr.AnylineVINConfig.cs -->
<!-- AnylineVINConfig.AnylineVINConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineVINConfig']/constructor[@name='AnylineVINConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">vinConfigJson</attr>
<!-- AnylineVINConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineVINConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- AnylineVINConfig.setCharacterWhitelist(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineVINConfig']/method[@name='setCharacterWhitelist' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">characterWhiteList</attr>
<!-- File: IO.Anyline.Plugin.ID.UniversalIdFieldScanOptions.cs -->
<!-- UniversalIdFieldScanOptions.addField(java.lang.String, io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldScanOptions']/method[@name='addField' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">fieldName</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldScanOptions']/method[@name='addField' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[2]" name="managedName">value</attr>
<!-- UniversalIdFieldScanOptions.getFieldScanOption(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldScanOptions']/method[@name='getFieldScanOption' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- UniversalIdFieldScanOptions.hasField(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldScanOptions']/method[@name='hasField' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- UniversalIdFieldScanOptions.removeField(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdFieldScanOptions']/method[@name='removeField' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- File: IO.Anyline.Opencv.Objdetect.Objdetect.cs -->
<!-- Objdetect.groupRectangles(io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfInt, int) -->
<!-- Objdetect.groupRectangles(io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfInt, int, double) -->
<!-- File: IO.Anyline.Plugin.Document.IDocumentNotifierListener.cs -->
<!-- DocumentNotifierListener.notifyDrawDocumentFeedback(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentNotifierListener']/method[@name='notifyDrawDocumentFeedback' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">points</attr>
<!-- DocumentNotifierListener.notifyTakeHighPictureResolution(io.anyline.CombinedImageProvider) -->
<attr path="/api/package[@name='io.anyline.plugin.document']/interface[@name='DocumentNotifierListener']/method[@name='notifyTakeHighPictureResolution' and count(parameter)=1 and parameter[1][@type='io.anyline.CombinedImageProvider']]/parameter[1]" name="managedName">combinedImageProvider</attr>
<!-- File: IO.Anyline.Models.AnylineImage.cs -->
<!-- AnylineImage.AnylineImage(android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=1 and parameter[1][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">bitmap</attr>
<!-- AnylineImage.AnylineImage(io.anyline.models.AnylineYuvImage) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineYuvImage']]/parameter[1]" name="managedName">alYuvImage</attr>
<!-- AnylineImage.AnylineImage(io.anyline.opencv.core.Mat) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Mat']]/parameter[1]" name="managedName">cvMat</attr>
<!-- AnylineImage.save(java.io.File, int) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineImage']/method[@name='save' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='int']]/parameter[1]" name="managedName">file</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineImage']/method[@name='save' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='int']]/parameter[2]" name="managedName">quality</attr>
<!-- File: IO.Anyline.Util.VersionUtil.cs -->
<!-- File: IO.Anyline.Camera.CameraConfig.cs -->
<!-- CameraConfig.setAutoExposureRegionEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setAutoExposureRegionEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">autoExposureRegionEnabled</attr>
<!-- CameraConfig.setAutoFocusInterval(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setAutoFocusInterval' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">autoFocusInterval</attr>
<!-- CameraConfig.setFallbackLensFacings(java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFallbackLensFacings' and count(parameter)=1 and parameter[1][@type='java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;']]/parameter[1]" name="managedName">fallbackLensFacings</attr>
<!-- CameraConfig.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraConfig.setFocusMode(io.anyline.camera.CameraFeatures.FocusMode) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFocusMode' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.FocusMode']]/parameter[1]" name="managedName">focusMode</attr>
<!-- CameraConfig.setFocusOnTouchEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFocusOnTouchEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">focusOnTouchEnabled</attr>
<!-- CameraConfig.setFocusRegionEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFocusRegionEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">focusRegionEnabled</attr>
<!-- CameraConfig.setLensFacing(io.anyline.camera.CameraFeatures.LensFacing) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setLensFacing' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.LensFacing']]/parameter[1]" name="managedName">lensFacing</attr>
<!-- CameraConfig.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraConfig.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraConfig.setOpticalStabilizationEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setOpticalStabilizationEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">opticalStabilizationEnabled</attr>
<!-- CameraConfig.setPictureSize(io.anyline.camera.CameraSize) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setPictureSize' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraSize']]/parameter[1]" name="managedName">pictureSize</attr>
<!-- CameraConfig.setPreviewSize(io.anyline.camera.CameraSize) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setPreviewSize' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraSize']]/parameter[1]" name="managedName">previewSize</attr>
<!-- CameraConfig.setSceneMode(io.anyline.camera.CameraFeatures.SceneMode) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setSceneMode' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.SceneMode']]/parameter[1]" name="managedName">sceneMode</attr>
<!-- CameraConfig.setUpdateRegionsOnAutoFocusEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setUpdateRegionsOnAutoFocusEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">updateRegionsOnAutoFocusEnabled</attr>
<!-- CameraConfig.setVideoStabilizationEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setVideoStabilizationEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">videoStabilizationEnabled</attr>
<!-- CameraConfig.setZoomGestureEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setZoomGestureEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">zoomGestureEnabled</attr>
<!-- CameraConfig.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomRatio</attr>
<!-- CameraConfig.setFallbackLensFacings(io.anyline.camera.CameraFeatures.LensFacing...) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFallbackLensFacings' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.LensFacing...']]/parameter[1]" name="managedName">fallbackLensFacings</attr>
<!-- CameraConfig.setHighResolutionPictureSize(io.anyline.camera.CameraSize) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setHighResolutionPictureSize' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraSize']]/parameter[1]" name="managedName">highResImageSize</attr>
<!-- File: IO.Anyline.Nfc.Reader.IProgressListenerInterface.cs -->
<!-- ProgressListenerInterface.updateProgress(int) -->
<!-- File: IO.Anyline.Opencv.Core.RotatedRect.cs -->
<!-- RotatedRect.RotatedRect(double[]) -->
<!-- RotatedRect.RotatedRect(io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double) -->
<!-- RotatedRect.points(io.anyline.opencv.core.Point[]) -->
<!-- RotatedRect.set(double[]) -->
<!-- File: IO.Anyline.Plugin.Tire.TireScanPlugin.cs -->
<!-- TireScanPlugin.TireScanPlugin(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanPlugin']/constructor[@name='TireScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanPlugin']/constructor[@name='TireScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- TireScanPlugin.TireScanPlugin(android.content.Context, java.lang.String, io.anyline.plugin.tire.TireBaseConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanPlugin']/constructor[@name='TireScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.tire.TireBaseConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanPlugin']/constructor[@name='TireScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.tire.TireBaseConfig']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanPlugin']/constructor[@name='TireScanPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.plugin.tire.TireBaseConfig']]/parameter[3]" name="managedName">config</attr>
<!-- TireScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- TireScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- File: IO.Anyline.Opencv.ML.Boost.cs -->
<!-- Boost.Boost(long) -->
<!-- Boost.setBoostType(int) -->
<!-- Boost.setWeakCount(int) -->
<!-- Boost.setWeightTrimRate(double) -->
<!-- File: Com.Gemalto.Jp2.BuildConfig.cs -->
<!-- File: IO.Anyline.Camera.ActiveArrayZoomHandlerBuilder.cs -->
<!-- ActiveArrayZoomHandlerBuilder.forView(android.view.View, int, io.anyline.camera.CameraController) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandlerBuilder']/method[@name='forView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[1]" name="managedName">touchableView</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandlerBuilder']/method[@name='forView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[2]" name="managedName">currentZoomLevel</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandlerBuilder']/method[@name='forView' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[3]" name="managedName">cameraController</attr>
<!-- ActiveArrayZoomHandlerBuilder.setActiveArraySize(android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandlerBuilder']/method[@name='setActiveArraySize' and count(parameter)=1 and parameter[1][@type='android.graphics.Rect']]/parameter[1]" name="managedName">activeArraySize</attr>
<!-- ActiveArrayZoomHandlerBuilder.setMaxZoom(float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandlerBuilder']/method[@name='setMaxZoom' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">maxZoom</attr>
<!-- ActiveArrayZoomHandlerBuilder.setZoomListener(io.anyline.camera.ActiveArrayZoomHandler.IZoomHandlerListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandlerBuilder']/method[@name='setZoomListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.ActiveArrayZoomHandler.IZoomHandlerListener']]/parameter[1]" name="managedName">listener</attr>
<!-- File: IO.Anyline.Plugin.Tire.TireScanResult.cs -->
<!-- TireScanResult.TireScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireScanResult']/constructor[@name='TireScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String']]/parameter[7]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.Nfc.Converter.ASN1Converter.cs -->
<!-- ASN1Converter.translateAsn1Oid(java.lang.String) -->
<!-- File: IO.Anyline.Products.ProductContext.cs -->
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product) -->
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product, io.anyline.Version) -->
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product, io.anyline.Version, java.lang.String) -->
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product, java.lang.String) -->
<!-- ProductContext.ProductContext(android.content.Context, org.json.JSONObject) -->
<!-- File: IO.Anyline.Opencv.Android.IUtilsProvider.cs -->
<!-- UtilsProvider.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat, boolean) -->
<!-- UtilsProvider.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap) -->
<!-- File: IO.Anyline.Plugin.ID.MrzFieldScanOptions.cs -->
<!-- MrzFieldScanOptions.setAddress(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">address</attr>
<!-- MrzFieldScanOptions.setDateOfBirth(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- MrzFieldScanOptions.setDateOfExpiry(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- MrzFieldScanOptions.setDateOfIssue(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- MrzFieldScanOptions.setVizAddress(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- MrzFieldScanOptions.setVizDateOfBirth(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- MrzFieldScanOptions.setVizDateOfExpiry(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- MrzFieldScanOptions.setVizDateOfIssue(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- MrzFieldScanOptions.setVizGivenNames(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- MrzFieldScanOptions.setVizSurname(io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldScanOptions']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.IDFieldScanOptions.FieldScanOption']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline.Plugin.ScanResult.cs -->
<!-- ScanResult.ScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, T, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[6]" name="managedName">faceImage</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[7]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='io.anyline.models.AnylineImage'] and parameter[7][@type='T'] and parameter[8][@type='java.lang.String']]/parameter[8]" name="managedName">blobKey</attr>
<!-- ScanResult.ScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, T, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanResult']/constructor[@name='ScanResult' and count(parameter)=7 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='T'] and parameter[7][@type='java.lang.String']]/parameter[7]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.View.AbstractBaseScanViewPlugin.cs -->
<!-- AbstractBaseScanViewPlugin.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">cancelOnResult</attr>
<!-- AbstractBaseScanViewPlugin.addScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.addScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.addScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.addUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.calcCutOutAndImageCropBounds(android.content.Context, int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[2]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[3]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[4]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[5]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[6]" name="managedName">scale</attr>
<!-- AbstractBaseScanViewPlugin.notifyScanFeedbackChange(java.lang.Object, java.lang.String) -->
<!-- AbstractBaseScanViewPlugin.notifyUIChangeListener(java.lang.Object, java.lang.String...) -->
<!-- AbstractBaseScanViewPlugin.removeScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.removeScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.removeScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.removeUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.reportDebugVariable(java.lang.String, java.lang.Object) -->
<!-- AbstractBaseScanViewPlugin.setCropRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">cropRect</attr>
<!-- AbstractBaseScanViewPlugin.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- AbstractBaseScanViewPlugin.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">cancelOnResult</attr>
<!-- AbstractBaseScanViewPlugin.addScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.addScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.addScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.addUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='addUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.calcCutOutAndImageCropBounds(android.content.Context, int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[2]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[3]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[4]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[5]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[6]" name="managedName">scale</attr>
<!-- AbstractBaseScanViewPlugin.removeScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.removeScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.removeScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.removeUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='removeUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractBaseScanViewPlugin.setCropRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">cropRect</attr>
<!-- AbstractBaseScanViewPlugin.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractBaseScanViewPlugin']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- File: IO.Anyline.Camera.FocusConfig.cs -->
<!-- FocusConfig.Builder.setAutoFocusInterval(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setAutoFocusInterval' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">millis</attr>
<!-- FocusConfig.Builder.setDefaultMode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setDefaultMode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">defaultMode</attr>
<!-- FocusConfig.Builder.setEnableAutoExposureAreas(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setEnableAutoExposureAreas' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FocusConfig.Builder.setEnableFocusAreas(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setEnableFocusAreas' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FocusConfig.Builder.setEnableFocusOnTouch(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setEnableFocusOnTouch' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FocusConfig.Builder.setEnablePhaseAutoFocus(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setEnablePhaseAutoFocus' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FocusConfig.Builder.setUpdateAreasOnAutoFocus(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FocusConfig.Builder']/method[@name='setUpdateAreasOnAutoFocus' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">updateAreasOnAutoFocus</attr>
<!-- File: IO.Anyline.Camera.CameraFeatures1.cs -->
<!-- CameraFeatures1.CameraFeatures1(int, android.hardware.Camera) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures1']/constructor[@name='CameraFeatures1' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.hardware.Camera']]/parameter[1]" name="managedName">cameraId</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraFeatures1']/constructor[@name='CameraFeatures1' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='android.hardware.Camera']]/parameter[2]" name="managedName">camera</attr>
<!-- File: IO.Anyline.Camera.CameraController.cs -->
<!-- CameraController.CameraOrientation.fromDegrees(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController.CameraOrientation']/method[@name='fromDegrees' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">degrees</attr>
<!-- CameraController.CameraOrientation.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController.CameraOrientation']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CameraController.setPreferredCameraConfig(io.anyline.camera.CameraConfig) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setPreferredCameraConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraConfig']]/parameter[1]" name="managedName">preferredCameraConfig</attr>
<!-- CameraController.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomLevelRatio</attr>
<!-- CameraController.removeCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='removeCameraOpenListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraOpenListener']]/parameter[1]" name="managedName">listener</attr>
<!-- CameraController.reportCameraError(java.lang.Exception) -->
<!-- CameraController.setCameraConfig(io.anyline.camera.CameraConfig) -->
<!-- CameraController.setCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setCameraOpenListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraOpenListener']]/parameter[1]" name="managedName">listener</attr>
<!-- CameraController.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setCameraOrientation' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController.CameraOrientation']]/parameter[1]" name="managedName">cameraOrientation</attr>
<!-- CameraController.setFlashOn(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFlashOn' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- CameraController.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraController.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[2]" name="managedName">cutOutRect</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[3]" name="managedName">surfaceWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[4]" name="managedName">surfaceHeight</attr>
<!-- CameraController.setHighResolutionImageListener(io.anyline.camera.HighResolutionImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setHighResolutionImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.HighResolutionImageListener']]/parameter[1]" name="managedName">highResolutionImageListener</attr>
<!-- CameraController.setImageListener(io.anyline.camera.ImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.ImageListener']]/parameter[1]" name="managedName">imageListener</attr>
<!-- CameraController.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraController.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraController.setZoomGestureEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setZoomGestureEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isZoomEnabled</attr>
<!-- CameraController.setupZoomHandler(android.view.View) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setupZoomHandler' and count(parameter)=1 and parameter[1][@type='android.view.View']]/parameter[1]" name="managedName">view</attr>
<!-- CameraController.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">viewHeight</attr>
<!-- CameraController.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomLevelRatio</attr>
<!-- CameraController.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setCameraOrientation' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController.CameraOrientation']]/parameter[1]" name="managedName">cameraOrientation</attr>
<!-- CameraController.setFlashOn(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFlashOn' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- CameraController.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraController.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[2]" name="managedName">cutOutRect</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[3]" name="managedName">surfaceWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[4]" name="managedName">surfaceHeight</attr>
<!-- CameraController.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraController.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraController.setupZoomHandler(android.view.View) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='setupZoomHandler' and count(parameter)=1 and parameter[1][@type='android.view.View']]/parameter[1]" name="managedName">view</attr>
<!-- CameraController.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">viewHeight</attr>
<!-- File: IO.Anyline.View.BrightnessHelper.cs -->
<!-- BrightnessHelper.BrightnessFeedback.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='BrightnessHelper.BrightnessFeedback']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- BrightnessHelper.setEpsonExposureCompensationLevels(java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<!-- BrightnessHelper.setLevelsForAutoFlash(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">lowBrightness</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">highBrightness</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">lowAmbientLight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">highAmbientLight</attr>
<!-- File: IO.Anyline.Plugin.ID.ID.cs -->
<!-- ID.ID(io.anyline.plugin.id.Identification) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='ID']/constructor[@name='ID' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.Identification']]/parameter[1]" name="managedName">identification</attr>
<!-- ID.setFaceImage(android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='ID']/method[@name='setFaceImage' and count(parameter)=1 and parameter[1][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">faceImage</attr>
<!-- ID.setFieldConfidences(TFieldConfidences) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='ID']/method[@name='setFieldConfidences' and count(parameter)=1 and parameter[1][@type='TFieldConfidences']]/parameter[1]" name="managedName">fieldConfidences</attr>
<!-- ID.parseDateObject(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Android.IInstallCallbackInterface.cs -->
<!-- File: IO.Anyline.Plugin.Meter.MeterScanMode.cs -->
<!-- MeterScanMode.fromEnergyScanMode(io.anyline.plugin.meter.MeterScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanMode']/method[@name='fromEnergyScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.meter.MeterScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- MeterScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.Plugin.Tire.TireSizeConfig.cs -->
<!-- TireSizeConfig.TireSizeConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireSizeConfig']/constructor[@name='TireSizeConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">tireSizeJson</attr>
<!-- File: IO.Anyline.AnylineController.cs -->
<!-- AnylineController.setDebug(boolean) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setDebug' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isDebug</attr>
<!-- AnylineController.reportIncludeValues(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='reportIncludeValues' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">jsonString</attr>
<!-- AnylineController.setArgumentExceptionListener(io.anyline.WorkerRunnableExceptionListener) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setArgumentExceptionListener' and count(parameter)=1 and parameter[1][@type='io.anyline.WorkerRunnableExceptionListener']]/parameter[1]" name="managedName">workerRunnableExceptionListener</attr>
<!-- AnylineController.setAssetJsonPaths(java.lang.String...) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setAssetJsonPaths' and count(parameter)=1 and parameter[1][@type='java.lang.String...']]/parameter[1]" name="managedName">assetJsonPaths</attr>
<!-- AnylineController.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isCancelOnResult</attr>
<!-- AnylineController.setCmdFile(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setCmdFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">cmdFileName</attr>
<!-- AnylineController.setCmdFile(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setCmdFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">cmdFileName</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setCmdFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<!-- AnylineController.setCropRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">cutoutRect</attr>
<!-- AnylineController.setDelayScanTime(double, double) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setDelayScanTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[1]" name="managedName">delayScanTime</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setDelayScanTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[2]" name="managedName">startTime</attr>
<!-- AnylineController.setHeaderVariable(java.lang.String, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setHeaderVariable' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[1]" name="managedName">key</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setHeaderVariable' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[2]" name="managedName">value</attr>
<!-- AnylineController.setId(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- AnylineController.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- AnylineController.setIsFullFrameScanning(boolean) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setIsFullFrameScanning' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">b</attr>
<!-- AnylineController.setProductName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setProductName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">productName</attr>
<!-- AnylineController.setScript(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setScript' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">script</attr>
<!-- AnylineController.setScript(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setScript' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">script</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setScript' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">bundlePath</attr>
<!-- AnylineController.setScript(java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setScript' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">scriptName</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setScript' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">script</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setScript' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">bundlePath</attr>
<!-- AnylineController.setStartVariable(java.lang.String, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setStartVariable' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[1]" name="managedName">key</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setStartVariable' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[2]" name="managedName">value</attr>
<!-- AnylineController.setTrainerReportedValues(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setTrainerReportedValues' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">trainerReportedValues</attr>
<!-- AnylineController.setWorkerThreadUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler) -->
<attr path="/api/package[@name='io.anyline']/class[@name='AnylineController']/method[@name='setWorkerThreadUncaughtExceptionHandler' and count(parameter)=1 and parameter[1][@type='java.lang.Thread.UncaughtExceptionHandler']]/parameter[1]" name="managedName">handler</attr>
<!-- File: IO.Anyline.Plugin.ID.IDFieldConfidences.cs -->
<!-- IDFieldConfidences.initDictionaryStartVariableFromJsonObject(android.content.Context, org.json.JSONObject, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldConfidences']/method[@name='initDictionaryStartVariableFromJsonObject' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.Object']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldConfidences']/method[@name='initDictionaryStartVariableFromJsonObject' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.Object']]/parameter[2]" name="managedName">json</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldConfidences']/method[@name='initDictionaryStartVariableFromJsonObject' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.Object']]/parameter[3]" name="managedName">object</attr>
<!-- IDFieldConfidences.setIDFieldConfidences(io.anyline.models.AnylineRawResult, java.lang.Class) -->
<!-- IDFieldConfidences.setIdMinFieldConfidenceStartVariable(io.anyline.plugin.id.IDFieldConfidences) -->
<!-- File: IO.Anyline.IWorkerRunnableExceptionListener.cs -->
<!-- WorkerRunnableExceptionListener.onException(java.lang.Exception) -->
<!-- File: IO.Anyline.Camera.CameraSize.cs -->
<!-- CameraSize.CameraSize(android.hardware.Camera.Size) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraSize']/constructor[@name='CameraSize' and count(parameter)=1 and parameter[1][@type='android.hardware.Camera.Size']]/parameter[1]" name="managedName">size</attr>
<!-- CameraSize.CameraSize(android.util.Size) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraSize']/constructor[@name='CameraSize' and count(parameter)=1 and parameter[1][@type='android.util.Size']]/parameter[1]" name="managedName">size</attr>
<!-- CameraSize.CameraSize(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraSize']/constructor[@name='CameraSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraSize']/constructor[@name='CameraSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">height</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfInt.cs -->
<!-- MatOfInt.MatOfInt(int...) -->
<!-- MatOfInt.MatOfInt(io.anyline.opencv.core.Mat) -->
<!-- MatOfInt.MatOfInt(long) -->
<!-- MatOfInt.alloc(int) -->
<!-- MatOfInt.fromArray(int...) -->
<!-- MatOfInt.fromList(java.util.List&lt;java.lang.Integer&gt;) -->
<!-- MatOfInt.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Opencv.Core.Algorithm.cs -->
<!-- Algorithm.Algorithm(long) -->
<!-- Algorithm.save(java.lang.String) -->
<!-- File: IO.Anyline.AnylineWorkerThreadPool.cs -->
<!-- AnylineWorkerThreadPool.addRunnable(java.lang.String, io.anyline.AnylineWorkerRunnable) -->
<!-- AnylineWorkerThreadPool.execute(java.lang.Runnable) -->
<!-- AnylineWorkerThreadPool.execute(java.util.concurrent.Callable&lt;?&gt;) -->
<!-- AnylineWorkerThreadPool.stopById(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfFloat.cs -->
<!-- MatOfFloat.MatOfFloat(float...) -->
<!-- MatOfFloat.MatOfFloat(io.anyline.opencv.core.Mat) -->
<!-- MatOfFloat.MatOfFloat(long) -->
<!-- MatOfFloat.alloc(int) -->
<!-- MatOfFloat.fromArray(float...) -->
<!-- MatOfFloat.fromList(java.util.List&lt;java.lang.Float&gt;) -->
<!-- MatOfFloat.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Modules.IAnylineModuleResultListener.cs -->
<!-- AnylineModuleResultListener.onResult(T) -->
<attr path="/api/package[@name='io.anyline.modules']/interface[@name='AnylineModuleResultListener']/method[@name='onResult' and count(parameter)=1 and parameter[1][@type='T']]/parameter[1]" name="managedName">scanResult</attr>
<!-- File: IO.Anyline.Plugin.IScanInfoListener.cs -->
<!-- ScanInfoListener.onInfo(io.anyline.plugin.ScanInfo) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanInfoListener']/method[@name='onInfo' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfo']]/parameter[1]" name="managedName">info</attr>
<!-- File: IO.Anyline.Plugin.ID.Identification.cs -->
<!-- Identification.getValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='Identification']/method[@name='getValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- Identification.hasField(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='Identification']/method[@name='hasField' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">fieldName</attr>
<!-- File: IO.Anyline.Plugin.AbstractScanPlugin.cs -->
<!-- AbstractScanPlugin.AbstractScanPlugin(android.content.Context, java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/constructor[@name='AbstractScanPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/constructor[@name='AbstractScanPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/constructor[@name='AbstractScanPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">anylineAssetsJsonPath</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/constructor[@name='AbstractScanPlugin' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">cmdFileName</attr>
<!-- AbstractScanPlugin.setId(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- AbstractScanPlugin.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- AbstractScanPlugin.addScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='addScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanPlugin.addScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='addScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanPlugin.addScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='addScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanPlugin.invokeOnInfo(java.lang.String, java.lang.Object) -->
<!-- AbstractScanPlugin.invokeOnResult(ResultType) -->
<!-- AbstractScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- AbstractScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- AbstractScanPlugin.onReportsVariable(java.lang.String, java.lang.Object) -->
<!-- AbstractScanPlugin.removeScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='removeScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanPlugin.removeScanResultListener(io.anyline.plugin.ScanResultListener&lt;ResultType&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='removeScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener&lt;ResultType&gt;']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanPlugin.removeScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='removeScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanPlugin.setArgumentExceptionListener(io.anyline.WorkerRunnableExceptionListener) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setArgumentExceptionListener' and count(parameter)=1 and parameter[1][@type='io.anyline.WorkerRunnableExceptionListener']]/parameter[1]" name="managedName">workerRunnableExceptionListener</attr>
<!-- AbstractScanPlugin.setAssetPath(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setAssetPath' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">assetPath</attr>
<!-- AbstractScanPlugin.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isCancelOnResult</attr>
<!-- AbstractScanPlugin.setCmdFileName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setCmdFileName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">cmdFileName</attr>
<!-- AbstractScanPlugin.setCropRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">cutoutRect</attr>
<!-- AbstractScanPlugin.setDebug(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setDebug' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isDebug</attr>
<!-- AbstractScanPlugin.setDelayScanTime(double) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='AbstractScanPlugin']/method[@name='setDelayScanTime' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">delayScanTime</attr>
<!-- AbstractScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- AbstractScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- File: IO.Anyline.Nfc.Tools.Crypto.cs -->
<!-- Crypto.calculate3DESEncryptionKey(byte[]) -->
<!-- Crypto.calculate3DESMac(byte[], byte[], boolean) -->
<!-- Crypto.calculateAESEncryptionKey(byte[]) -->
<!-- Crypto.calculateAESMac(byte[], byte[], boolean) -->
<!-- Crypto.calculateMacKey(byte[]) -->
<!-- Crypto.calculateSeed(java.lang.String, java.lang.String, java.lang.String) -->
<!-- Crypto.decrypt3DES(byte[], byte[]) -->
<!-- Crypto.decryptAES(byte[], byte[]) -->
<!-- Crypto.decryptUsingDES(byte[], byte[]) -->
<!-- Crypto.encrypt3DES(byte[], byte[]) -->
<!-- Crypto.encryptAES(byte[], byte[]) -->
<!-- Crypto.encryptUsingDES(byte[], byte[]) -->
<!-- Crypto.generateRandomBytes(int) -->
<!-- Crypto.padData(byte[], int) -->
<!-- Crypto.sha1(byte[]) -->
<!-- File: IO.Anyline.Opencv.Objdetect.CascadeClassifier.cs -->
<!-- CascadeClassifier.CascadeClassifier(java.lang.String) -->
<!-- CascadeClassifier.CascadeClassifier(long) -->
<!-- CascadeClassifier.convert(java.lang.String, java.lang.String) -->
<!-- CascadeClassifier.detectMultiScale(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect) -->
<!-- CascadeClassifier.detectMultiScale(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, double, int, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size) -->
<!-- CascadeClassifier.detectMultiScale2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfInt) -->
<!-- CascadeClassifier.detectMultiScale2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfInt, double, int, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size) -->
<!-- CascadeClassifier.detectMultiScale3(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfDouble) -->
<!-- CascadeClassifier.detectMultiScale3(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfRect, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfDouble, double, int, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, boolean) -->
<!-- CascadeClassifier.load(java.lang.String) -->
<!-- File: IO.Anyline.Plugin.ID.MrzFieldConfidences.cs -->
<!-- MrzFieldConfidences.setCheckDigitDateOfBirth(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- MrzFieldConfidences.setCheckDigitDateOfExpiry(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- MrzFieldConfidences.setCheckDigitDocumentNumber(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- MrzFieldConfidences.setCheckDigitFinal(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- MrzFieldConfidences.setCheckDigitPersonalNumber(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- MrzFieldConfidences.setDateOfBirth(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- MrzFieldConfidences.setDateOfExpiry(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- MrzFieldConfidences.setDocumentNumber(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- MrzFieldConfidences.setDocumentType(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">documentType</attr>
<!-- MrzFieldConfidences.setGivenNames(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">givenNames</attr>
<!-- MrzFieldConfidences.setIssuingCountryCode(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- MrzFieldConfidences.setNationalityCountryCode(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- MrzFieldConfidences.setOptionalData(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">optionalData</attr>
<!-- MrzFieldConfidences.setPersonalNumber(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- MrzFieldConfidences.setSex(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">sex</attr>
<!-- MrzFieldConfidences.setSurname(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">surname</attr>
<!-- MrzFieldConfidences.setVizAddress(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- MrzFieldConfidences.setVizDateOfBirth(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- MrzFieldConfidences.setVizDateOfExpiry(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- MrzFieldConfidences.setVizDateOfIssue(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- MrzFieldConfidences.setVizGivenNames(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- MrzFieldConfidences.setVizSurname(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzFieldConfidences']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline.Camera.ActiveArrayZoomHandler.cs -->
<!-- ActiveArrayZoomHandler.IZoomHandlerListener.onZoomChanged(android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='ActiveArrayZoomHandler.IZoomHandlerListener']/method[@name='onZoomChanged' and count(parameter)=1 and parameter[1][@type='android.graphics.Rect']]/parameter[1]" name="managedName">zoom</attr>
<!-- ActiveArrayZoomHandler.notifyZoomChanged(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandler']/method[@name='notifyZoomChanged' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">zoom</attr>
<!-- ActiveArrayZoomHandler.setActiveArraySize(android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandler']/method[@name='setActiveArraySize' and count(parameter)=1 and parameter[1][@type='android.graphics.Rect']]/parameter[1]" name="managedName">activeArraySize</attr>
<!-- ActiveArrayZoomHandler.setZoomHandlerListener(io.anyline.camera.ActiveArrayZoomHandler.IZoomHandlerListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='ActiveArrayZoomHandler']/method[@name='setZoomHandlerListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.ActiveArrayZoomHandler.IZoomHandlerListener']]/parameter[1]" name="managedName">zoomHandlerListener</attr>
<!-- File: IO.Anyline.View.FlashView.cs -->
<!-- FlashView.FlashView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- FlashView.FlashView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- FlashView.FlashView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- FlashView.FlashView(android.content.Context, io.anyline.view.FlashViewConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.FlashViewConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.FlashViewConfig']]/parameter[2]" name="managedName">config</attr>
<!-- FlashView.setConfig(io.anyline.view.FlashViewConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/method[@name='setConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.view.FlashViewConfig']]/parameter[1]" name="managedName">config</attr>
<!-- FlashView.setAutoModeEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/method[@name='setAutoModeEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FlashView.setCameraController(io.anyline.camera.CameraController) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/method[@name='setCameraController' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController']]/parameter[1]" name="managedName">cameraController</attr>
<!-- FlashView.setFlashOnIfAuto(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/method[@name='setFlashOnIfAuto' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">setFlashOn</attr>
<!-- FlashView.setMode(io.anyline.camera.FlashControl.Mode) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='FlashView']/method[@name='setMode' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.FlashControl.Mode']]/parameter[1]" name="managedName">mode</attr>
<!-- File: IO.Anyline.Nfc.NfcDetector.cs -->
<!-- NfcDetector.NfcDetectionHandler.onDg1Success(io.anyline.nfc.NFC.DataGroup1) -->
<!-- NfcDetector.NfcDetectionHandler.onDg2Success(android.graphics.Bitmap) -->
<!-- NfcDetector.NfcDetectionHandler.onNfcFailure(java.lang.String) -->
<!-- NfcDetector.NfcDetectionHandler.onNfcSuccess(io.anyline.nfc.NFC.NFCResult) -->
<!-- NfcDetector.NfcDetectionHandler.onSODSuccess(io.anyline.nfc.NFC.SOD) -->
<!-- NfcDetector.NfcDetector(android.content.Context, io.anyline.nfc.NfcDetector.NfcDetectionHandler) -->
<!-- NfcDetector.startNfcDetection(java.lang.String, java.lang.String, java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Photo.Tonemap.cs -->
<!-- Tonemap.Tonemap(long) -->
<!-- Tonemap.setGamma(float) -->
<!-- Tonemap.process(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Opencv.Video.DualTVL1OpticalFlow.cs -->
<!-- DualTVL1OpticalFlow.DualTVL1OpticalFlow(long) -->
<!-- File: IO.Anyline.Opencv.Photo.TonemapDrago.cs -->
<!-- TonemapDrago.TonemapDrago(long) -->
<!-- TonemapDrago.setBias(float) -->
<!-- TonemapDrago.setSaturation(float) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfByte.cs -->
<!-- MatOfByte.MatOfByte(byte...) -->
<!-- MatOfByte.MatOfByte(io.anyline.opencv.core.Mat) -->
<!-- MatOfByte.MatOfByte(long) -->
<!-- MatOfByte.alloc(int) -->
<!-- MatOfByte.fromArray(byte...) -->
<!-- MatOfByte.fromList(java.util.List&lt;java.lang.Byte&gt;) -->
<!-- MatOfByte.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Plugin.Ocr.OcrScanResult.cs -->
<!-- OcrScanResult.OcrScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, java.lang.String, io.anyline.models.AnylineImage, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[7]" name="managedName">thresholdedImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='OcrScanResult']/constructor[@name='OcrScanResult' and count(parameter)=8 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='io.anyline.models.AnylineImage'] and parameter[8][@type='java.lang.String']]/parameter[8]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.Plugin.ID.IDFieldScanOptions.cs -->
<!-- IDFieldScanOptions.FieldScanOption.fromInt(int) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldScanOptions.FieldScanOption']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">fieldScanOption</attr>
<!-- IDFieldScanOptions.FieldScanOption.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldScanOptions.FieldScanOption']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- IDFieldScanOptions.initDictionaryStartVariableFromJsonObject(android.content.Context, org.json.JSONObject, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldScanOptions']/method[@name='initDictionaryStartVariableFromJsonObject' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.Object']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldScanOptions']/method[@name='initDictionaryStartVariableFromJsonObject' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.Object']]/parameter[2]" name="managedName">json</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='IDFieldScanOptions']/method[@name='initDictionaryStartVariableFromJsonObject' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.Object']]/parameter[3]" name="managedName">object</attr>
<!-- IDFieldScanOptions.setIdFieldScanOptionsStartVariable(io.anyline.plugin.id.IDFieldScanOptions) -->
<!-- File: Com.Gemalto.Jp2.JP2Decoder.cs -->
<!-- JP2Decoder.JP2Decoder(byte[]) -->
<!-- JP2Decoder.JP2Decoder(java.io.InputStream) -->
<!-- JP2Decoder.JP2Decoder(java.lang.String) -->
<!-- JP2Decoder.isJPEG2000(byte[]) -->
<!-- JP2Decoder.setLayersToDecode(int) -->
<!-- JP2Decoder.setSkipResolutions(int) -->
<!-- File: IO.Anyline.Opencv.Photo.AlignExposures.cs -->
<!-- AlignExposures.AlignExposures(long) -->
<!-- AlignExposures.process(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Opencv.Core.Scalar.cs -->
<!-- Scalar.Scalar(double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">v0</attr>
<!-- Scalar.Scalar(double, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[1]" name="managedName">v0</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]/parameter[2]" name="managedName">v1</attr>
<!-- Scalar.Scalar(double, double, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=3 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double']]/parameter[1]" name="managedName">v0</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=3 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double']]/parameter[2]" name="managedName">v1</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=3 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double']]/parameter[3]" name="managedName">v2</attr>
<!-- Scalar.Scalar(double, double, double, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=4 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[1]" name="managedName">v0</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=4 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[2]" name="managedName">v1</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=4 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[3]" name="managedName">v2</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=4 and parameter[1][@type='double'] and parameter[2][@type='double'] and parameter[3][@type='double'] and parameter[4][@type='double']]/parameter[4]" name="managedName">v3</attr>
<!-- Scalar.Scalar(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/constructor[@name='Scalar' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- Scalar.all(double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/method[@name='all' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">v</attr>
<!-- Scalar.mul(io.anyline.opencv.core.Scalar) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/method[@name='mul' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Scalar']]/parameter[1]" name="managedName">it</attr>
<!-- Scalar.mul(io.anyline.opencv.core.Scalar, double) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/method[@name='mul' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Scalar'] and parameter[2][@type='double']]/parameter[1]" name="managedName">it</attr>
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/method[@name='mul' and count(parameter)=2 and parameter[1][@type='io.anyline.opencv.core.Scalar'] and parameter[2][@type='double']]/parameter[2]" name="managedName">scale</attr>
<!-- Scalar.set(double[]) -->
<attr path="/api/package[@name='io.anyline.opencv.core']/class[@name='Scalar']/method[@name='set' and count(parameter)=1 and parameter[1][@type='double[]']]/parameter[1]" name="managedName">vals</attr>
<!-- File: IO.Anyline.Plugin.Ocr.AnylineContainerConfig.cs -->
<!-- AnylineContainerConfig.ContainerScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineContainerConfig.ContainerScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- AnylineContainerConfig.AnylineContainerConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineContainerConfig']/constructor[@name='AnylineContainerConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">anylineContainerConfigJson</attr>
<!-- AnylineContainerConfig.setScanMode(io.anyline.plugin.ocr.AnylineContainerConfig.ContainerScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineContainerConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ocr.AnylineContainerConfig.ContainerScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- AnylineContainerConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineContainerConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- AnylineContainerConfig.setCharacterWhitelist(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.ocr']/class[@name='AnylineContainerConfig']/method[@name='setCharacterWhitelist' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">characterWhiteList</attr>
<!-- File: IO.Anyline.View.AnylineCutoutBase.cs -->
<!-- AnylineCutoutBase.AnylineCutoutBase(io.anyline.view.AnylineFeedbackView, io.anyline.view.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineCutoutBase']/constructor[@name='AnylineCutoutBase' and count(parameter)=2 and parameter[1][@type='io.anyline.view.AnylineFeedbackView'] and parameter[2][@type='io.anyline.view.CutoutConfig']]/parameter[1]" name="managedName">anylineFeedbackView</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AnylineCutoutBase']/constructor[@name='AnylineCutoutBase' and count(parameter)=2 and parameter[1][@type='io.anyline.view.AnylineFeedbackView'] and parameter[2][@type='io.anyline.view.CutoutConfig']]/parameter[2]" name="managedName">cutoutConfig</attr>
<!-- AnylineCutoutBase.draw(android.graphics.Canvas) -->
<!-- File: IO.Anyline.Plugin.Tire.CommercialTireIdConfig.cs -->
<!-- CommercialTireIdConfig.CommercialTireIdConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='CommercialTireIdConfig']/constructor[@name='CommercialTireIdConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">tireConfigJson</attr>
<!-- File: IO.Anyline.Plugin.Meter.MeterScanViewPlugin.cs -->
<!-- MeterScanViewPlugin.MeterScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/constructor[@name='MeterScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/constructor[@name='MeterScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/constructor[@name='MeterScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">config</attr>
<!-- MeterScanViewPlugin.MeterScanViewPlugin(android.content.Context, io.anyline.view.ScanViewPluginConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/constructor[@name='MeterScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/constructor[@name='MeterScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">config</attr>
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/constructor[@name='MeterScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.view.ScanViewPluginConfig'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- MeterScanViewPlugin.setScanMode(io.anyline.plugin.meter.MeterScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.meter']/class[@name='MeterScanViewPlugin']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.meter.MeterScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfKeyPoint.cs -->
<!-- MatOfKeyPoint.MatOfKeyPoint(io.anyline.opencv.core.KeyPoint...) -->
<!-- MatOfKeyPoint.MatOfKeyPoint(io.anyline.opencv.core.Mat) -->
<!-- MatOfKeyPoint.MatOfKeyPoint(long) -->
<!-- MatOfKeyPoint.alloc(int) -->
<!-- MatOfKeyPoint.fromArray(io.anyline.opencv.core.KeyPoint...) -->
<!-- MatOfKeyPoint.fromList(java.util.List&lt;io.anyline.opencv.core.KeyPoint&gt;) -->
<!-- MatOfKeyPoint.fromNativeAddr(long) -->
<!-- File: IO.Anyline.IMapper.cs -->
<!-- Mapper.map(From) -->
<!-- File: IO.Anyline.Nfc.Parser.DG2Parser.cs -->
<!-- DG2Parser.DG2Parser(byte[]) -->
<!-- File: IO.Anyline.Camera.ICutoutUpdateListener.cs -->
<!-- CutoutUpdateListener.onCutoutUpdate(android.graphics.Rect, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='CutoutUpdateListener']/method[@name='onCutoutUpdate' and count(parameter)=2 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='android.graphics.Rect']]/parameter[1]" name="managedName">cutoutRect</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='CutoutUpdateListener']/method[@name='onCutoutUpdate' and count(parameter)=2 and parameter[1][@type='android.graphics.Rect'] and parameter[2][@type='android.graphics.Rect']]/parameter[2]" name="managedName">waterMarkRect</attr>
<!-- File: IO.Anyline.Plugin.ID.UniversalIdConfig.cs -->
<!-- UniversalIdConfig.UniversalIdConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdConfig']/constructor[@name='UniversalIdConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- UniversalIdConfig.getAllowedLayoutsForLayoutType(io.anyline.plugin.id.UniversalIdLayoutType) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdConfig']/method[@name='getAllowedLayoutsForLayoutType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.id.UniversalIdLayoutType']]/parameter[1]" name="managedName">universalIdLayoutType</attr>
<!-- UniversalIdConfig.setScanConfiguration(io.anyline.plugin.id.UniversalIdLayoutType, java.util.List&lt;java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdConfig']/method[@name='setScanConfiguration' and count(parameter)=2 and parameter[1][@type='io.anyline.plugin.id.UniversalIdLayoutType'] and parameter[2][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[1]" name="managedName">universalIdLayoutType</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='UniversalIdConfig']/method[@name='setScanConfiguration' and count(parameter)=2 and parameter[1][@type='io.anyline.plugin.id.UniversalIdLayoutType'] and parameter[2][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[2]" name="managedName">layoutList</attr>
<!-- File: IO.Anyline.Plugin.ScanInfo.cs -->
<!-- ScanInfo.ScanInfo(java.lang.String, java.lang.String, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanInfo']/constructor[@name='ScanInfo' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Object']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanInfo']/constructor[@name='ScanInfo' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Object']]/parameter[2]" name="managedName">key</attr>
<attr path="/api/package[@name='io.anyline.plugin']/class[@name='ScanInfo']/constructor[@name='ScanInfo' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Object']]/parameter[3]" name="managedName">value</attr>
<!-- File: IO.Anyline.Camera.IFlashControl.cs -->
<!-- FlashControl.Mode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FlashControl.Mode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- FlashControl.setAutoModeEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='FlashControl']/method[@name='setAutoModeEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FlashControl.setCameraController(io.anyline.camera.CameraController) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='FlashControl']/method[@name='setCameraController' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController']]/parameter[1]" name="managedName">cameraController</attr>
<!-- FlashControl.setFlashOnIfAuto(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='FlashControl']/method[@name='setFlashOnIfAuto' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- FlashControl.setMode(io.anyline.camera.FlashControl.Mode) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='FlashControl']/method[@name='setMode' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.FlashControl.Mode']]/parameter[1]" name="managedName">mode</attr>
<!-- File: IO.Anyline.Trainer.TrainerUtils.cs -->
<!-- TrainerUtils.ReportCorrectedResultHandler.onReportCorrectedResult(java.lang.String) -->
<!-- TrainerUtils.TokenResultHandler.onTokenResult(java.lang.String) -->
<!-- TrainerUtils.ViewConfigResultHandler.onViewConfigResult(org.json.JSONObject) -->
<!-- TrainerUtils.getAuthToken(io.anyline.trainer.ProjectContext, io.anyline.trainer.TrainerUtils.TokenResultHandler) -->
<!-- TrainerUtils.getViewConfigJsonAsync(io.anyline.trainer.ProjectContext, io.anyline.trainer.TrainerUtils.ViewConfigResultHandler) -->
<!-- TrainerUtils.reportCorrectedResults(io.anyline.trainer.AssetContext, java.lang.String, java.lang.String, io.anyline.trainer.TrainerUtils.ReportCorrectedResultHandler) -->
<!-- File: IO.Anyline.Camera.IHighResolutionImageProvider.cs -->
<!-- HighResolutionImageProvider.setHighResolutionImageListener(io.anyline.camera.HighResolutionImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='setHighResolutionImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.HighResolutionImageListener']]/parameter[1]" name="managedName">highResolutionImageListener</attr>
<!-- HighResolutionImageProvider.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">scanViewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='HighResolutionImageProvider']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">scanViewHeight</attr>
<!-- File: IO.Anyline.Nfc.NFC.DataGroup2.cs -->
<!-- DataGroup2.DataGroup2(android.graphics.Bitmap) -->
<!-- DataGroup2.setFaceImage(android.graphics.Bitmap) -->
<!-- File: IO.Anyline.Opencv.Core.KeyPoint.cs -->
<!-- KeyPoint.KeyPoint(float, float, float) -->
<!-- KeyPoint.KeyPoint(float, float, float, float) -->
<!-- KeyPoint.KeyPoint(float, float, float, float, float) -->
<!-- KeyPoint.KeyPoint(float, float, float, float, float, int) -->
<!-- KeyPoint.KeyPoint(float, float, float, float, float, int, int) -->
<!-- File: IO.Anyline.Models.BitmapCreatorImpl.cs -->
<!-- BitmapCreatorImpl.createBitmap(int, int, android.graphics.Bitmap.Config) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='BitmapCreatorImpl']/method[@name='createBitmap' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Bitmap.Config']]/parameter[1]" name="managedName">cols</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='BitmapCreatorImpl']/method[@name='createBitmap' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Bitmap.Config']]/parameter[2]" name="managedName">rows</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='BitmapCreatorImpl']/method[@name='createBitmap' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='android.graphics.Bitmap.Config']]/parameter[3]" name="managedName">config</attr>
<!-- File: IO.Anyline.Nfc.Reader.AesReader.cs -->
<!-- AesReader.calculateEncryptionKey(byte[]) -->
<!-- AesReader.calculateMac(byte[], byte[]) -->
<!-- AesReader.calculateMac(byte[], byte[], boolean) -->
<!-- AesReader.calculateSequenceCounter(byte[]) -->
<!-- AesReader.decrypt(byte[], byte[]) -->
<!-- AesReader.encrypt(byte[], byte[]) -->
<!-- AesReader.padData(byte[]) -->
<!-- File: IO.Anyline.Plugin.Licenseplate.LicensePlateScanMode.cs -->
<!-- LicensePlateScanMode.lookup(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanMode']/method[@name='lookup' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">scanMode</attr>
<!-- LicensePlateScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.Util.ImageUtil.cs -->
<!-- ImageUtil.getRotationCompensation(android.content.Context, int, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageUtil']/method[@name='getRotationCompensation' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageUtil']/method[@name='getRotationCompensation' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]/parameter[2]" name="managedName">cameraId</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ImageUtil']/method[@name='getRotationCompensation' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]/parameter[3]" name="managedName">isFrontFacing</attr>
<!-- File: IO.Anyline.View.ScanPage.cs -->
<!-- ScanPage.ScanPage(android.os.Parcel) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=1 and parameter[1][@type='android.os.Parcel']]/parameter[1]" name="managedName">in</attr>
<!-- ScanPage.ScanPage(java.io.File, java.io.File, java.util.ArrayList&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=3 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">fullImageFile</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=3 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[2]" name="managedName">croppedImageFile</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=3 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[3]" name="managedName">corners</attr>
<!-- ScanPage.ScanPage(java.io.File, java.io.File, java.util.ArrayList&lt;android.graphics.PointF&gt;, java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=4 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;'] and parameter[4][@type='java.lang.Integer']]/parameter[1]" name="managedName">fullImageFile</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=4 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;'] and parameter[4][@type='java.lang.Integer']]/parameter[2]" name="managedName">croppedImageFile</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=4 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;'] and parameter[4][@type='java.lang.Integer']]/parameter[3]" name="managedName">corners</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=4 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;'] and parameter[4][@type='java.lang.Integer']]/parameter[4]" name="managedName">startRotation</attr>
<!-- ScanPage.ScanPage(java.lang.String, java.lang.String, java.util.ArrayList&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">fullImagePath</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[2]" name="managedName">croppedImagePath</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/constructor[@name='ScanPage' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[3]" name="managedName">corners</attr>
<!-- ScanPage.setCroppedImageFile(java.io.File) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='setCroppedImageFile' and count(parameter)=1 and parameter[1][@type='java.io.File']]/parameter[1]" name="managedName">mImageFile</attr>
<!-- ScanPage.setFullImageFile(java.io.File) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='setFullImageFile' and count(parameter)=1 and parameter[1][@type='java.io.File']]/parameter[1]" name="managedName">mImageFile</attr>
<!-- ScanPage.setRotationInDegrees(int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='setRotationInDegrees' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">rotationInDegrees</attr>
<!-- ScanPage.setTransformationPoints(java.util.ArrayList&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='setTransformationPoints' and count(parameter)=1 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">transformationPoints</attr>
<!-- ScanPage.setCroppedImageFile(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='setCroppedImageFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">filePath</attr>
<!-- ScanPage.writeToParcel(android.os.Parcel, int) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='writeToParcel' and count(parameter)=2 and parameter[1][@type='android.os.Parcel'] and parameter[2][@type='int']]/parameter[1]" name="managedName">dest</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='ScanPage']/method[@name='writeToParcel' and count(parameter)=2 and parameter[1][@type='android.os.Parcel'] and parameter[2][@type='int']]/parameter[2]" name="managedName">flags</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfFloat6.cs -->
<!-- MatOfFloat6.MatOfFloat6(float...) -->
<!-- MatOfFloat6.MatOfFloat6(io.anyline.opencv.core.Mat) -->
<!-- MatOfFloat6.MatOfFloat6(long) -->
<!-- MatOfFloat6.alloc(int) -->
<!-- MatOfFloat6.fromArray(float...) -->
<!-- MatOfFloat6.fromList(java.util.List&lt;java.lang.Float&gt;) -->
<!-- MatOfFloat6.fromNativeAddr(long) -->
<!-- File: Com.Gemalto.Jp2.JP2Encoder.cs -->
<!-- JP2Encoder.JP2Encoder(android.graphics.Bitmap) -->
<!-- JP2Encoder.encode(java.io.OutputStream) -->
<!-- JP2Encoder.encode(java.lang.String) -->
<!-- JP2Encoder.setCompressionRatio(float...) -->
<!-- JP2Encoder.setNumResolutions(int) -->
<!-- JP2Encoder.setOutputFormat(int) -->
<!-- JP2Encoder.setVisualQuality(float...) -->
<!-- File: IO.Anyline.Opencv.Core.TermCriteria.cs -->
<!-- TermCriteria.TermCriteria(double[]) -->
<!-- TermCriteria.TermCriteria(int, int, double) -->
<!-- TermCriteria.set(double[]) -->
<!-- File: IO.Anyline.Opencv.Video.BackgroundSubtractorMOG2.cs -->
<!-- BackgroundSubtractorMOG2.BackgroundSubtractorMOG2(long) -->
<!-- BackgroundSubtractorMOG2.setBackgroundRatio(double) -->
<!-- BackgroundSubtractorMOG2.setComplexityReductionThreshold(double) -->
<!-- BackgroundSubtractorMOG2.setDetectShadows(boolean) -->
<!-- BackgroundSubtractorMOG2.setHistory(int) -->
<!-- BackgroundSubtractorMOG2.setNMixtures(int) -->
<!-- BackgroundSubtractorMOG2.setShadowThreshold(double) -->
<!-- BackgroundSubtractorMOG2.setShadowValue(int) -->
<!-- BackgroundSubtractorMOG2.setVarInit(double) -->
<!-- BackgroundSubtractorMOG2.setVarMax(double) -->
<!-- BackgroundSubtractorMOG2.setVarMin(double) -->
<!-- BackgroundSubtractorMOG2.setVarThreshold(double) -->
<!-- BackgroundSubtractorMOG2.setVarThresholdGen(double) -->
<!-- File: IO.Anyline.Plugin.Barcode.IScannedBarcodesListener.cs -->
<!-- ScannedBarcodesListener.scannedBarcodes(io.anyline.plugin.barcode.BarcodeScanResult) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/interface[@name='ScannedBarcodesListener']/method[@name='scannedBarcodes' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeScanResult']]/parameter[1]" name="managedName">scanResult</attr>
<!-- File: IO.Anyline.AnylineWorkerRunnable.cs -->
<!-- AnylineWorkerRunnable.setDebug(boolean) -->
<!-- AnylineWorkerRunnable.setCropRect(android.graphics.RectF) -->
<!-- AnylineWorkerRunnable.setId(java.lang.String) -->
<!-- AnylineWorkerRunnable.setIsFullFrameScanning(boolean) -->
<!-- AnylineWorkerRunnable.setProductName(java.lang.String) -->
<!-- AnylineWorkerRunnable.setWorkerRunnableExceptionListener(io.anyline.WorkerRunnableExceptionListener) -->
<!-- File: IO.Anyline.Plugin.Licenseplate.LicensePlateScanPlugin.cs -->
<!-- LicensePlateScanPlugin.LicensePlateScanPlugin(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/constructor[@name='LicensePlateScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/constructor[@name='LicensePlateScanPlugin' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- LicensePlateScanPlugin.setScanMode(io.anyline.plugin.licenseplate.LicensePlateScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.licenseplate.LicensePlateScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- LicensePlateScanPlugin.setValidationRegex(java.util.Map&lt;io.anyline.plugin.licenseplate.LicensePlateScanMode, java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;io.anyline.plugin.licenseplate.LicensePlateScanMode, java.lang.String&gt;']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- LicensePlateScanPlugin.getMapFromJsonObject(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/method[@name='getMapFromJsonObject' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- LicensePlateScanPlugin.mapToStartVariableString(java.util.Map&lt;io.anyline.plugin.licenseplate.LicensePlateScanMode, java.lang.String&gt;, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/method[@name='mapToStartVariableString' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;io.anyline.plugin.licenseplate.LicensePlateScanMode, java.lang.String&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">map</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/method[@name='mapToStartVariableString' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;io.anyline.plugin.licenseplate.LicensePlateScanMode, java.lang.String&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">separator</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanPlugin']/method[@name='mapToStartVariableString' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;io.anyline.plugin.licenseplate.LicensePlateScanMode, java.lang.String&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">delimiter</attr>
<!-- LicensePlateScanPlugin.onFinishedWithOutput(java.lang.Object) -->
<!-- LicensePlateScanPlugin.onFinishedWithOutput(java.lang.Object, io.anyline.models.AnylineImage) -->
<!-- File: IO.Anyline.Plugin.Tire.TireBaseConfig.cs -->
<!-- TireBaseConfig.UpsideDownMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireBaseConfig.UpsideDownMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- TireBaseConfig.TireBaseConfig(org.json.JSONObject) -->
<!-- TireBaseConfig.setMinConfidence(int) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireBaseConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- TireBaseConfig.setUpsideDownMode(io.anyline.plugin.tire.TireBaseConfig.UpsideDownMode) -->
<attr path="/api/package[@name='io.anyline.plugin.tire']/class[@name='TireBaseConfig']/method[@name='setUpsideDownMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.tire.TireBaseConfig.UpsideDownMode']]/parameter[1]" name="managedName">upsideDownMode</attr>
<!-- File: IO.Anyline.Camera.CameraController1.cs -->
<!-- CameraController1.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomLevelRatio</attr>
<!-- CameraController1.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setCameraOrientation' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController.CameraOrientation']]/parameter[1]" name="managedName">cameraOrientation</attr>
<!-- CameraController1.setCustomZoomLevel(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setCustomZoomLevel' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">zoomLevel</attr>
<!-- CameraController1.setEpsonConfig(java.lang.String, java.lang.String, java.lang.String, java.lang.String, float) -->
<!-- CameraController1.setFlashOn(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setFlashOn' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- CameraController1.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraController1.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[2]" name="managedName">cutOutRect</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[3]" name="managedName">surfaceWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setFocusRegionToCutout' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.RectF'] and parameter[3][@type='float'] and parameter[4][@type='float']]/parameter[4]" name="managedName">surfaceHeight</attr>
<!-- CameraController1.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraController1.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraController1.setupZoomHandler(android.view.View) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='setupZoomHandler' and count(parameter)=1 and parameter[1][@type='android.view.View']]/parameter[1]" name="managedName">view</attr>
<!-- CameraController1.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">scanViewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraController1']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">scanViewHeight</attr>
<!-- File: IO.Anyline.Nfc.Reader.AbstractReader.cs -->
<!-- AbstractReader.calculateEncryptionKey(byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[], boolean) -->
<!-- AbstractReader.calculateSequenceCounter(byte[]) -->
<!-- AbstractReader.decrypt(byte[], byte[]) -->
<!-- AbstractReader.encrypt(byte[], byte[]) -->
<!-- AbstractReader.initSession(int) -->
<!-- AbstractReader.padData(byte[]) -->
<!-- AbstractReader.readFile(byte[]) -->
<!-- AbstractReader.setApduWithLe(boolean) -->
<!-- AbstractReader.setBacInfo(io.anyline.nfc.Reader.BacInfo) -->
<!-- AbstractReader.setMaxBlockSize(int) -->
<!-- AbstractReader.setMutualAuthLe(byte) -->
<!-- AbstractReader.setProgressListener(java.lang.ref.WeakReference&lt;java.lang.Object&gt;) -->
<!-- AbstractReader.calculateEncryptionKey(byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[], boolean) -->
<!-- AbstractReader.calculateSequenceCounter(byte[]) -->
<!-- AbstractReader.decrypt(byte[], byte[]) -->
<!-- AbstractReader.encrypt(byte[], byte[]) -->
<!-- AbstractReader.padData(byte[]) -->
<!-- File: AT.Nineyards.Anyline.BuildConfig.cs -->
<!-- File: IO.Anyline.Opencv.Core.Point3.cs -->
<!-- Point3.Point3(double, double, double) -->
<!-- Point3.Point3(double[]) -->
<!-- Point3.Point3(io.anyline.opencv.core.Point) -->
<!-- Point3.cross(io.anyline.opencv.core.Point3) -->
<!-- Point3.dot(io.anyline.opencv.core.Point3) -->
<!-- Point3.set(double[]) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint3.cs -->
<!-- MatOfPoint3.MatOfPoint3(io.anyline.opencv.core.Mat) -->
<!-- MatOfPoint3.MatOfPoint3(io.anyline.opencv.core.Point3...) -->
<!-- MatOfPoint3.MatOfPoint3(long) -->
<!-- MatOfPoint3.alloc(int) -->
<!-- MatOfPoint3.fromArray(io.anyline.opencv.core.Point3...) -->
<!-- MatOfPoint3.fromList(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- MatOfPoint3.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Plugin.ID.Alphabet.cs -->
<!-- Alphabet.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='Alphabet']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">stringValue</attr>
<!-- Alphabet.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='Alphabet']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.View.SerialScanViewComposite.cs -->
<!-- SerialScanViewComposite.SerialScanViewComposite(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='SerialScanViewComposite']/constructor[@name='SerialScanViewComposite' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- SerialScanViewComposite.startWithId(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='SerialScanViewComposite']/method[@name='startWithId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- File: IO.Anyline.Opencv.Calib3d.StereoSGBM.cs -->
<!-- StereoSGBM.StereoSGBM(long) -->
<!-- StereoSGBM.setMode(int) -->
<!-- StereoSGBM.setP1(int) -->
<!-- StereoSGBM.setP2(int) -->
<!-- StereoSGBM.setPreFilterCap(int) -->
<!-- StereoSGBM.setUniquenessRatio(int) -->
<!-- StereoSGBM.create(int, int, int) -->
<!-- StereoSGBM.create(int, int, int, int, int, int, int, int, int, int, int) -->
<!-- File: IO.Anyline.Util.ColorUtil.cs -->
<!-- ColorUtil.adjustAlpha(int, float) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='ColorUtil']/method[@name='adjustAlpha' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='float']]/parameter[1]" name="managedName">color</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='ColorUtil']/method[@name='adjustAlpha' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='float']]/parameter[2]" name="managedName">alphaFactor</attr>
<!-- File: IO.Anyline.Plugin.IScanResultListener.cs -->
<!-- ScanResultListener.onResult(T) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanResultListener']/method[@name='onResult' and count(parameter)=1 and parameter[1][@type='T']]/parameter[1]" name="managedName">result</attr>
<!-- File: IO.Anyline.IImageProvider.cs -->
<!-- File: IO.Anyline.Opencv.Imgproc.LineSegmentDetector.cs -->
<!-- LineSegmentDetector.LineSegmentDetector(long) -->
<!-- LineSegmentDetector.compareSegments(io.anyline.opencv.core.Size, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.compareSegments(io.anyline.opencv.core.Size, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.drawSegments(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.DI.FileOutputStreamProviderFactory.cs -->
<!-- File: IO.Anyline.Camera.FaceDetector.cs -->
<!-- FaceDetector.FaceDetectionResultHandler.onFailure(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='FaceDetector.FaceDetectionResultHandler']/method[@name='onFailure' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">e</attr>
<!-- FaceDetector.FaceDetectionResultHandler.onSuccess(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline.camera']/interface[@name='FaceDetector.FaceDetectionResultHandler']/method[@name='onSuccess' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">faceImage</attr>
<!-- FaceDetector.FaceDetector(io.anyline.camera.FaceDetector.FaceDetectionResultHandler) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FaceDetector']/constructor[@name='FaceDetector' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.FaceDetector.FaceDetectionResultHandler']]/parameter[1]" name="managedName">faceDetectionResultHandler</attr>
<!-- FaceDetector.startFaceDetection(io.anyline.models.AnylineImage) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='FaceDetector']/method[@name='startFaceDetection' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineImage']]/parameter[1]" name="managedName">imageForProcessing</attr>
<!-- File: IO.Anyline.Products.Product.cs -->
<!-- Product.fromString(java.lang.String) -->
<!-- Product.valueOf(java.lang.String) -->
<!-- File: IO.Anyline.Nfc.NFC.Doc9303Apdu.cs -->
<!-- Doc9303Apdu.buildDO87(byte[]) -->
<!-- Doc9303Apdu.buildDO8E(byte[]) -->
<!-- Doc9303Apdu.buildDO97(int) -->
<!-- File: IO.Anyline.Opencv.ML.Ml.cs -->
<!-- File: IO.Anyline.Opencv.Objdetect.BaseCascadeClassifier.cs -->
<!-- BaseCascadeClassifier.BaseCascadeClassifier(long) -->
<!-- File: IO.Anyline.Plugin.ID.VehicleRegistrationCertificateConfig.cs -->
<!-- VehicleRegistrationCertificateConfig.VehicleRegistrationCertificateConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='VehicleRegistrationCertificateConfig']/constructor[@name='VehicleRegistrationCertificateConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- File: IO.Anyline.View.AbstractScanViewPluginComposite.cs -->
<!-- AbstractScanViewPluginComposite.AbstractScanViewPluginComposite(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/constructor[@name='AbstractScanViewPluginComposite' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- AbstractScanViewPluginComposite.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">cancelOnResult</attr>
<!-- AbstractScanViewPluginComposite.add(io.anyline.view.AbstractScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='add' and count(parameter)=1 and parameter[1][@type='io.anyline.view.AbstractScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- AbstractScanViewPluginComposite.addResult(io.anyline.plugin.ScanResult) -->
<!-- AbstractScanViewPluginComposite.addScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='addScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.addScanResultListener(io.anyline.plugin.ScanResultListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='addScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.addScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='addScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.addUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='addUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.calcCutOutAndImageCropBounds(android.content.Context, int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[2]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[3]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[4]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[5]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[6]" name="managedName">scale</attr>
<!-- AbstractScanViewPluginComposite.fireOnPluginInfo(io.anyline.plugin.ScanInfo) -->
<!-- AbstractScanViewPluginComposite.fireOnPluginResult(io.anyline.plugin.ScanResult) -->
<!-- AbstractScanViewPluginComposite.fireOnPluginScanRunSkipped(io.anyline.plugin.ScanRunSkippedReason) -->
<!-- AbstractScanViewPluginComposite.isFinalResult(io.anyline.plugin.ScanResult) -->
<!-- AbstractScanViewPluginComposite.remove(io.anyline.view.AbstractScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='remove' and count(parameter)=1 and parameter[1][@type='io.anyline.view.AbstractScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- AbstractScanViewPluginComposite.removeScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='removeScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.removeScanResultListener(io.anyline.plugin.ScanResultListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='removeScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.removeScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='removeScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.removeUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='removeUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPluginComposite.setCropRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">cropRect</attr>
<!-- AbstractScanViewPluginComposite.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPluginComposite']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- File: IO.Anyline.Camera.NativeBarcodeDetector.cs -->
<!-- NativeBarcodeDetector.setCameraView(io.anyline.camera.CameraView) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='NativeBarcodeDetector']/method[@name='setCameraView' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraView']]/parameter[1]" name="managedName">cameraView</attr>
<!-- File: IO.Anyline.Trainer.ProjectContext.cs -->
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String) -->
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline.Version) -->
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline.Version, java.lang.String) -->
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<!-- ProjectContext.ProjectContext(android.content.Context, org.json.JSONObject) -->
<!-- ProjectContext.setApiKey(java.lang.String) -->
<!-- ProjectContext.setProjectId(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Features2d.DescriptorMatcher.cs -->
<!-- DescriptorMatcher.DescriptorMatcher(long) -->
<!-- DescriptorMatcher.add(java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- DescriptorMatcher.clone(boolean) -->
<!-- DescriptorMatcher.create(int) -->
<!-- DescriptorMatcher.knnMatch(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, int) -->
<!-- DescriptorMatcher.knnMatch(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, int, io.anyline.opencv.core.Mat, boolean) -->
<!-- DescriptorMatcher.knnMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, int) -->
<!-- DescriptorMatcher.knnMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, int, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, boolean) -->
<!-- DescriptorMatcher.match(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDMatch) -->
<!-- DescriptorMatcher.match(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDMatch, io.anyline.opencv.core.Mat) -->
<!-- DescriptorMatcher.match(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDMatch) -->
<!-- DescriptorMatcher.match(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDMatch, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- DescriptorMatcher.radiusMatch(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, float) -->
<!-- DescriptorMatcher.radiusMatch(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, float, io.anyline.opencv.core.Mat, boolean) -->
<!-- DescriptorMatcher.radiusMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, float) -->
<!-- DescriptorMatcher.radiusMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, float, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, boolean) -->
<!-- DescriptorMatcher.read(java.lang.String) -->
<!-- DescriptorMatcher.write(java.lang.String) -->
<!-- File: IO.Anyline.Models.BitmapCreatorFactory.cs -->
<!-- File: IO.Anyline.Plugin.IScanRunSkippedListener.cs -->
<!-- ScanRunSkippedListener.onRunSkipped(io.anyline.plugin.ScanRunSkippedReason) -->
<attr path="/api/package[@name='io.anyline.plugin']/interface[@name='ScanRunSkippedListener']/method[@name='onRunSkipped' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedReason']]/parameter[1]" name="managedName">reason</attr>
<!-- File: IO.Anyline.Camera.CameraPermissionHelper.cs -->
<!-- CameraPermissionHelper.CameraPermissionHelper(android.app.Activity) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraPermissionHelper']/constructor[@name='CameraPermissionHelper' and count(parameter)=1 and parameter[1][@type='android.app.Activity']]/parameter[1]" name="managedName">activity</attr>
<!-- CameraPermissionHelper.onRequestPermissionsResult(int, java.lang.String[], int[]) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraPermissionHelper']/method[@name='onRequestPermissionsResult' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String[]'] and parameter[3][@type='int[]']]/parameter[1]" name="managedName">requestCode</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraPermissionHelper']/method[@name='onRequestPermissionsResult' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String[]'] and parameter[3][@type='int[]']]/parameter[2]" name="managedName">permissions</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraPermissionHelper']/method[@name='onRequestPermissionsResult' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String[]'] and parameter[3][@type='int[]']]/parameter[3]" name="managedName">grantResults</attr>
<!-- CameraPermissionHelper.showPermissionMessage(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraPermissionHelper']/method[@name='showPermissionMessage' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">message</attr>
<!-- File: IO.Anyline.Util.JSONUtil.cs -->
<!-- JSONUtil.recursiveJsonKeyConverterToLower(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSONUtil']/method[@name='recursiveJsonKeyConverterToLower' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- JSONUtil.toMap(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='JSONUtil']/method[@name='toMap' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">object</attr>
<!-- File: IO.Anyline.Plugin.ID.MrzIdentification.cs -->
<!-- MrzIdentification.MrzIdentification(io.anyline.models.AnylineRawResult) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/constructor[@name='MrzIdentification' and count(parameter)=1 and parameter[1][@type='io.anyline.models.AnylineRawResult']]/parameter[1]" name="managedName">alResult</attr>
<!-- MrzIdentification.setAddress(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">address</attr>
<!-- MrzIdentification.setCheckDigitDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- MrzIdentification.setCheckDigitDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- MrzIdentification.setCheckDigitDayOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitDayOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDayOfBirth</attr>
<!-- MrzIdentification.setCheckDigitDocumentNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- MrzIdentification.setCheckDigitExpirationDate(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitExpirationDate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitExpirationDate</attr>
<!-- MrzIdentification.setCheckDigitFinal(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- MrzIdentification.setCheckDigitNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitNumber</attr>
<!-- MrzIdentification.setCheckDigitPersonalNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- MrzIdentification.setCountryCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">countryCode</attr>
<!-- MrzIdentification.setDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- MrzIdentification.setDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- MrzIdentification.setDateOfIssue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- MrzIdentification.setDayOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setDayOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dayOfBirth</attr>
<!-- MrzIdentification.setDocumentNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- MrzIdentification.setDocumentType(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">documentType</attr>
<!-- MrzIdentification.setExpirationDate(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setExpirationDate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">expirationDate</attr>
<!-- MrzIdentification.setGivenNames(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">givenNames</attr>
<!-- MrzIdentification.setIssuingCountryCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- MrzIdentification.setIssuingDate(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setIssuingDate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">issuingDate</attr>
<!-- MrzIdentification.setMrzString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setMrzString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">mrzString</attr>
<!-- MrzIdentification.setNationalityCountryCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- MrzIdentification.setOptionalData(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">optionalData</attr>
<!-- MrzIdentification.setPersonalNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- MrzIdentification.setPersonalNumber2(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setPersonalNumber2' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">personalNumber2</attr>
<!-- MrzIdentification.setSex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">sex</attr>
<!-- MrzIdentification.setSurNames(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setSurNames' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">surNames</attr>
<!-- MrzIdentification.setSurname(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">surname</attr>
<!-- MrzIdentification.setVizAddress(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- MrzIdentification.setVizDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- MrzIdentification.setVizDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- MrzIdentification.setVizDateOfIssue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- MrzIdentification.setVizGivenNames(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- MrzIdentification.setVizSurname(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- MrzIdentification.setAllCheckDigitsValid(boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='MrzIdentification']/method[@name='setAllCheckDigitsValid' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">allCheckDigitsValid</attr>
<!-- File: IO.Anyline.Plugin.Licenseplate.LicensePlateScanResult.cs -->
<!-- LicensePlateScanResult.LicensePlateScanResult(java.lang.String, java.util.List&lt;android.graphics.PointF&gt;, java.lang.Integer, io.anyline.models.AnylineImage, io.anyline.models.AnylineImage, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[1]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[2]" name="managedName">outline</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[3]" name="managedName">confidence</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[4]" name="managedName">cutoutImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[5]" name="managedName">fullImage</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[6]" name="managedName">result</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[7]" name="managedName">country</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[8]" name="managedName">area</attr>
<attr path="/api/package[@name='io.anyline.plugin.licenseplate']/class[@name='LicensePlateScanResult']/constructor[@name='LicensePlateScanResult' and count(parameter)=9 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='io.anyline.models.AnylineImage'] and parameter[5][@type='io.anyline.models.AnylineImage'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.lang.String']]/parameter[9]" name="managedName">blobKey</attr>
<!-- File: IO.Anyline.View.BaseScanViewConfig.cs -->
<!-- BaseScanViewConfig.BaseScanViewConfig(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='BaseScanViewConfig']/constructor[@name='BaseScanViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='BaseScanViewConfig']/constructor[@name='BaseScanViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">configFileName</attr>
<!-- BaseScanViewConfig.BaseScanViewConfig(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='BaseScanViewConfig']/constructor[@name='BaseScanViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='BaseScanViewConfig']/constructor[@name='BaseScanViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">json</attr>
<!-- BaseScanViewConfig.init(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='BaseScanViewConfig']/method[@name='init' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='BaseScanViewConfig']/method[@name='init' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">json</attr>
<!-- File: IO.Anyline.Plugin.ID.NFCConfig.cs -->
<!-- NFCConfig.NFCConfig(java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='NFCConfig']/constructor[@name='NFCConfig' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">passportNumber</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='NFCConfig']/constructor[@name='NFCConfig' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">dateOfBirth</attr>
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='NFCConfig']/constructor[@name='NFCConfig' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">expirationDate</attr>
<!-- File: IO.Anyline.View.AbstractScanViewPlugin.cs -->
<!-- AbstractScanViewPlugin.AbstractScanViewPlugin(android.content.Context, io.anyline.plugin.AbstractScanPlugin, io.anyline.view.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/constructor[@name='AbstractScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/constructor[@name='AbstractScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[2]" name="managedName">scanPlugin</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/constructor[@name='AbstractScanViewPlugin' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline.plugin.AbstractScanPlugin'] and parameter[3][@type='io.anyline.view.ScanViewPluginConfig']]/parameter[3]" name="managedName">scanViewConfig</attr>
<!-- AbstractScanViewPlugin.setCancelOnResult(boolean) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">cancelOnResult</attr>
<!-- AbstractScanViewPlugin.addScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='addScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.addScanResultListener(io.anyline.plugin.ScanResultListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='addScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.addScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='addScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.addUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='addUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.calcCutOutAndImageCropBounds(android.content.Context, int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[2]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[3]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[4]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[5]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[6]" name="managedName">scale</attr>
<!-- AbstractScanViewPlugin.removeScanInfoListener(io.anyline.plugin.ScanInfoListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='removeScanInfoListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanInfoListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.removeScanResultListener(io.anyline.plugin.ScanResultListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='removeScanResultListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanResultListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.removeScanRunSkippedListener(io.anyline.plugin.ScanRunSkippedListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='removeScanRunSkippedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.ScanRunSkippedListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.removeUIConfigChangedListener(io.anyline.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='removeUIConfigChangedListener' and count(parameter)=1 and parameter[1][@type='io.anyline.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- AbstractScanViewPlugin.setCropRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">cropRect</attr>
<!-- AbstractScanViewPlugin.setImageProvider(io.anyline.ImageProvider) -->
<attr path="/api/package[@name='io.anyline.view']/class[@name='AbstractScanViewPlugin']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- File: IO.Anyline.Camera.AbstractZoomHandler.cs -->
<!-- AbstractZoomHandler.AbstractZoomHandler(android.view.View, int, io.anyline.camera.CameraController) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/constructor[@name='AbstractZoomHandler' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[1]" name="managedName">touchableView</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/constructor[@name='AbstractZoomHandler' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[2]" name="managedName">currentZoomLevel</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/constructor[@name='AbstractZoomHandler' and count(parameter)=3 and parameter[1][@type='android.view.View'] and parameter[2][@type='int'] and parameter[3][@type='io.anyline.camera.CameraController']]/parameter[3]" name="managedName">cameraController</attr>
<!-- AbstractZoomHandler.notifyZoomChanged(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/method[@name='notifyZoomChanged' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">zoom</attr>
<!-- AbstractZoomHandler.onTouch(android.view.View, android.view.MotionEvent) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/method[@name='onTouch' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='android.view.MotionEvent']]/parameter[1]" name="managedName">v</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/method[@name='onTouch' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='android.view.MotionEvent']]/parameter[2]" name="managedName">event</attr>
<!-- AbstractZoomHandler.setMaxZoom(float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/method[@name='setMaxZoom' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">maxZoom</attr>
<!-- AbstractZoomHandler.setZoomHardness(float) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/method[@name='setZoomHardness' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">zoomHardness</attr>
<!-- AbstractZoomHandler.notifyZoomChanged(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='AbstractZoomHandler']/method[@name='notifyZoomChanged' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">zoom</attr>
<!-- File: IO.Anyline.Opencv.ML.StatModel.cs -->
<!-- StatModel.StatModel(long) -->
<!-- StatModel.predict(io.anyline.opencv.core.Mat) -->
<!-- StatModel.predict(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- StatModel.train(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Products.IAnylineUpdateDelegate.cs -->
<!-- IAnylineUpdateDelegate.onUpdateError(java.lang.String) -->
<!-- IAnylineUpdateDelegate.onUpdateProgress(java.lang.String, float) -->
<!-- File: IO.Anyline.Modules.LicenseExpirationHelper.cs -->
<!-- LicenseExpirationHelper.showExpirationDialog(android.content.Context, android.content.DialogInterface.OnClickListener) -->
<attr path="/api/package[@name='io.anyline.modules']/class[@name='LicenseExpirationHelper']/method[@name='showExpirationDialog' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.content.DialogInterface.OnClickListener']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.modules']/class[@name='LicenseExpirationHelper']/method[@name='showExpirationDialog' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.content.DialogInterface.OnClickListener']]/parameter[2]" name="managedName">okListener</attr>
<!-- File: IO.Anyline.Plugin.ID.TemplateConfig.cs -->
<!-- TemplateConfig.TemplateConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.plugin.id']/class[@name='TemplateConfig']/constructor[@name='TemplateConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- File: IO.Anyline.Opencv.Video.Video.cs -->
<!-- Video.CamShift(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect, io.anyline.opencv.core.TermCriteria) -->
<!-- Video.buildOpticalFlowPyramid(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Size, int) -->
<!-- Video.buildOpticalFlowPyramid(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Size, int, boolean, int, int, boolean) -->
<!-- Video.calcOpticalFlowFarneback(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int, int, int, int, double, int) -->
<!-- Video.calcOpticalFlowPyrLK(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfByte, io.anyline.opencv.core.MatOfFloat) -->
<!-- Video.calcOpticalFlowPyrLK(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfByte, io.anyline.opencv.core.MatOfFloat, io.anyline.opencv.core.Size, int) -->
<!-- Video.calcOpticalFlowPyrLK(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfByte, io.anyline.opencv.core.MatOfFloat, io.anyline.opencv.core.Size, int, io.anyline.opencv.core.TermCriteria, int, double) -->
<!-- Video.createBackgroundSubtractorKNN(int, double, boolean) -->
<!-- Video.createBackgroundSubtractorMOG2(int, double, boolean) -->
<!-- Video.estimateRigidTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Video.findTransformECC(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Video.findTransformECC(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Video.findTransformECC(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.TermCriteria, io.anyline.opencv.core.Mat) -->
<!-- Video.meanShift(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect, io.anyline.opencv.core.TermCriteria) -->
<!-- File: IO.Anyline.Nfc.Tools.AESCMAC.cs -->
<!-- AESCMAC.get(byte[], byte[]) -->
<!-- AESCMAC.get(byte[], byte[], byte[]) -->
<!-- File: IO.Anyline.Util.NumberValidationUtil.cs -->
<!-- NumberValidationUtil.getValidNumber(java.lang.String, double, double) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='NumberValidationUtil']/method[@name='getValidNumber' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='double'] and parameter[3][@type='double']]/parameter[1]" name="managedName">numberString</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='NumberValidationUtil']/method[@name='getValidNumber' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='double'] and parameter[3][@type='double']]/parameter[2]" name="managedName">min</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='NumberValidationUtil']/method[@name='getValidNumber' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='double'] and parameter[3][@type='double']]/parameter[3]" name="managedName">max</attr>
<!-- File: IO.Anyline.Models.AnylineRawResult.cs -->
<!-- AnylineRawResult.getConfidence(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineRawResult']/method[@name='getConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">identifier</attr>
<!-- AnylineRawResult.getResult(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineRawResult']/method[@name='getResult' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">identifier</attr>
<!-- AnylineRawResult.getResultSpecialCharacters(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineRawResult']/method[@name='getResultSpecialCharacters' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">identifier</attr>
<!-- AnylineRawResult.hasConfidenceValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineRawResult']/method[@name='hasConfidenceValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">identifier</attr>
<!-- File: IO.Anyline.Opencv.Android.Utils.cs -->
<!-- Utils.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat) -->
<!-- Utils.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat, boolean) -->
<!-- Utils.exportResource(android.content.Context, int) -->
<!-- Utils.exportResource(android.content.Context, int, java.lang.String) -->
<!-- Utils.loadResource(android.content.Context, int) -->
<!-- Utils.loadResource(android.content.Context, int, int) -->
<!-- Utils.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap) -->
<!-- Utils.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap, boolean) -->
<!-- File: IO.Anyline.Opencv.ML.ANN_MLP.cs -->
<!-- ANN_MLP.ANN_MLP(long) -->
<!-- ANN_MLP.setBackpropMomentumScale(double) -->
<!-- ANN_MLP.setBackpropWeightScale(double) -->
<!-- ANN_MLP.setLayerSizes(io.anyline.opencv.core.Mat) -->
<!-- ANN_MLP.setRpropDW0(double) -->
<!-- ANN_MLP.setRpropDWMax(double) -->
<!-- ANN_MLP.setRpropDWMin(double) -->
<!-- ANN_MLP.setRpropDWMinus(double) -->
<!-- ANN_MLP.setRpropDWPlus(double) -->
<!-- ANN_MLP.setTermCriteria(io.anyline.opencv.core.TermCriteria) -->
<!-- ANN_MLP.setTrainMethod(int) -->
<!-- ANN_MLP.getWeights(int) -->
<!-- ANN_MLP.setActivationFunction(int) -->
<!-- ANN_MLP.setActivationFunction(int, double, double) -->
<!-- ANN_MLP.setTrainMethod(int, double, double) -->
<!-- File: IO.Anyline.Opencv.Core.CvException.cs -->
<!-- CvException.CvException(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Imgproc.CLAHE.cs -->
<!-- CLAHE.CLAHE(long) -->
<!-- CLAHE.setClipLimit(double) -->
<!-- CLAHE.setTilesGridSize(io.anyline.opencv.core.Size) -->
<!-- CLAHE.apply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
</metadata>
