<!-- THIS FILE IS AUTO-GENERATED! DO NOT EDIT! -->

<metadata>

<!-- File: IO.Anyline2.DI.Plugintype.PluginTypeProviderImpl.cs -->
<!-- File: IO.Anyline.Plugin.Result.MrzResult.cs -->
<!-- MrzResult.setAllCheckDigitsValid(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setAllCheckDigitsValid' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">allCheckDigitsValid</attr>
<!-- MrzResult.setCheckDigitDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- MrzResult.setCheckDigitDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- MrzResult.setCheckDigitDocumentNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- MrzResult.setCheckDigitFinal(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- MrzResult.setCheckDigitPersonalNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- MrzResult.setDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- MrzResult.setDateOfBirthObject(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setDateOfBirthObject' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfBirthObject</attr>
<!-- MrzResult.setDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- MrzResult.setDateOfExpiryObject(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setDateOfExpiryObject' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfExpiryObject</attr>
<!-- MrzResult.setDocumentNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- MrzResult.setDocumentType(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">documentType</attr>
<!-- MrzResult.setFieldConfidences(io.anyline.plugin.result.FieldConfidences) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setFieldConfidences' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.FieldConfidences']]/parameter[1]" name="managedName">fieldConfidences</attr>
<!-- MrzResult.setFirstName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">firstName</attr>
<!-- MrzResult.setGivenNames(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">givenNames</attr>
<!-- MrzResult.setIssuingCountryCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- MrzResult.setLastName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">lastName</attr>
<!-- MrzResult.setMrzString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setMrzString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">mrzString</attr>
<!-- MrzResult.setNationalityCountryCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- MrzResult.setOptionalData(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">optionalData</attr>
<!-- MrzResult.setPersonalNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- MrzResult.setSex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">sex</attr>
<!-- MrzResult.setSurname(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">surname</attr>
<!-- MrzResult.setVizAddress(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- MrzResult.setVizDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- MrzResult.setVizDateOfBirthObject(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizDateOfBirthObject' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfBirthObject</attr>
<!-- MrzResult.setVizDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- MrzResult.setVizDateOfExpiryObject(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizDateOfExpiryObject' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfExpiryObject</attr>
<!-- MrzResult.setVizDateOfIssue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- MrzResult.setVizDateOfIssueObject(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizDateOfIssueObject' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizDateOfIssueObject</attr>
<!-- MrzResult.setVizGivenNames(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- MrzResult.setVizSurname(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MrzResult']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline.Plugin.Result.DateValue.cs -->
<!-- DateValue.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='DateValue']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- DateValue.setDay(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='DateValue']/method[@name='setDay' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">day</attr>
<!-- DateValue.setFormattedText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='DateValue']/method[@name='setFormattedText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">formattedText</attr>
<!-- DateValue.setMonth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='DateValue']/method[@name='setMonth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">month</attr>
<!-- DateValue.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='DateValue']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- DateValue.setYear(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='DateValue']/method[@name='setYear' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">year</attr>
<!-- File: IO.Anyline.Opencv.Utils.Converters.cs -->
<!-- Converters.Mat_to_vector_DMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.DMatch&gt;) -->
<!-- Converters.Mat_to_vector_KeyPoint(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.KeyPoint&gt;) -->
<!-- Converters.Mat_to_vector_Mat(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.Mat_to_vector_Point(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.Mat_to_vector_Point2d(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.Mat_to_vector_Point2f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.Mat_to_vector_Point3(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Point3d(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Point3f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Point3i(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.Mat_to_vector_Rect(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Rect&gt;) -->
<!-- Converters.Mat_to_vector_char(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.Mat_to_vector_double(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Double&gt;) -->
<!-- Converters.Mat_to_vector_float(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Float&gt;) -->
<!-- Converters.Mat_to_vector_int(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Integer&gt;) -->
<!-- Converters.Mat_to_vector_uchar(io.anyline.opencv.core.Mat, java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.Mat_to_vector_vector_DMatch(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;) -->
<!-- Converters.Mat_to_vector_vector_KeyPoint(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;) -->
<!-- Converters.Mat_to_vector_vector_Point(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;) -->
<!-- Converters.Mat_to_vector_vector_Point2f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint2f&gt;) -->
<!-- Converters.Mat_to_vector_vector_Point3f(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint3f&gt;) -->
<!-- Converters.Mat_to_vector_vector_char(io.anyline.opencv.core.Mat, java.util.List&lt;java.util.List&lt;java.lang.Byte&gt;&gt;) -->
<!-- Converters.vector_DMatch_to_Mat(java.util.List&lt;io.anyline.opencv.core.DMatch&gt;) -->
<!-- Converters.vector_KeyPoint_to_Mat(java.util.List&lt;io.anyline.opencv.core.KeyPoint&gt;) -->
<!-- Converters.vector_Mat_to_Mat(java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_Point2d_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.vector_Point2f_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.vector_Point3_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;, int) -->
<!-- Converters.vector_Point3d_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.vector_Point3f_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.vector_Point3i_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- Converters.vector_Point_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- Converters.vector_Point_to_Mat(java.util.List&lt;io.anyline.opencv.core.Point&gt;, int) -->
<!-- Converters.vector_Rect_to_Mat(java.util.List&lt;io.anyline.opencv.core.Rect&gt;) -->
<!-- Converters.vector_char_to_Mat(java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.vector_double_to_Mat(java.util.List&lt;java.lang.Double&gt;) -->
<!-- Converters.vector_float_to_Mat(java.util.List&lt;java.lang.Float&gt;) -->
<!-- Converters.vector_int_to_Mat(java.util.List&lt;java.lang.Integer&gt;) -->
<!-- Converters.vector_uchar_to_Mat(java.util.List&lt;java.lang.Byte&gt;) -->
<!-- Converters.vector_vector_DMatch_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfDMatch&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_KeyPoint_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfKeyPoint&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_Point2f_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfPoint2f&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_Point3f_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfPoint3f&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_Point_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Converters.vector_vector_char_to_Mat(java.util.List&lt;io.anyline.opencv.core.MatOfByte&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- File: IO.Anyline2.IPlugin.cs -->
<!-- File: IO.Anyline.Camera.IHighResolutionImageListener.cs -->
<!-- HighResolutionImageListener.onError(java.lang.Throwable) -->
<!-- HighResolutionImageListener.onImageTaken(io.anyline.models.AnylineImage) -->
<!-- File: IO.Anyline.Nfc.Tools.AES.cs -->
<!-- AES.decrypt(byte[], byte[], byte[]) -->
<!-- AES.decrypt(byte[], byte[], byte[], int, int) -->
<!-- AES.encrypt(byte[], byte[], byte[]) -->
<!-- File: IO.Anyline2.Model.ALSquareVector.cs -->
<!-- ALSquareVector.ALSquareVector(io.anyline2.model.ALSquareVector) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquareVector']/constructor[@name='ALSquareVector' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALSquareVector']]/parameter[1]" name="managedName">alSquareVector</attr>
<!-- ALSquareVector.ALSquareVector(java.util.List&lt;io.anyline2.model.ALSquare&gt;) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquareVector']/constructor[@name='ALSquareVector' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline2.model.ALSquare&gt;']]/parameter[1]" name="managedName">squares</attr>
<!-- ALSquareVector.ALSquareVector(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquareVector']/constructor[@name='ALSquareVector' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline.Plugin.Result.Visualization.cs -->
<!-- Visualization.setContourPoints(java.util.List&lt;java.util.List&lt;java.util.List&lt;java.lang.Integer&gt;&gt;&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Visualization']/method[@name='setContourPoints' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.util.List&lt;java.util.List&lt;java.lang.Integer&gt;&gt;&gt;']]/parameter[1]" name="managedName">contourPoints</attr>
<!-- Visualization.setContours(java.util.List&lt;java.util.List&lt;java.lang.Integer&gt;&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Visualization']/method[@name='setContours' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.util.List&lt;java.lang.Integer&gt;&gt;']]/parameter[1]" name="managedName">contours</attr>
<!-- Visualization.setTextRect(java.util.List&lt;java.lang.Integer&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Visualization']/method[@name='setTextRect' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.Integer&gt;']]/parameter[1]" name="managedName">textRect</attr>
<!-- File: IO.Anyline.Plugin.Result.TireSizeResultField.cs -->
<!-- TireSizeResultField.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResultField']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- TireSizeResultField.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResultField']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline.Camera.ICameraOpenListener.cs -->
<!-- CameraOpenListener.onCameraError(java.lang.Exception) -->
<!-- CameraOpenListener.onCameraOpened(io.anyline.camera.CameraController, int, int) -->
<!-- File: IO.Anyline2.Logger.cs -->
<!-- Logger.setInstance(io.anyline2.Logger) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='Logger']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.Logger']]/parameter[1]" name="managedName">instance</attr>
<!-- Logger.logError(java.lang.String, java.lang.String, java.lang.Throwable) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='Logger']/method[@name='logError' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Throwable']]/parameter[1]" name="managedName">tag</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='Logger']/method[@name='logError' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Throwable']]/parameter[2]" name="managedName">message</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='Logger']/method[@name='logError' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Throwable']]/parameter[3]" name="managedName">throwable</attr>
<!-- File: IO.Anyline.Opencv.Core.CvType.cs -->
<!-- CvType.CV_16SC(int) -->
<!-- CvType.CV_16UC(int) -->
<!-- CvType.CV_32FC(int) -->
<!-- CvType.CV_32SC(int) -->
<!-- CvType.CV_64FC(int) -->
<!-- CvType.CV_8SC(int) -->
<!-- CvType.CV_8UC(int) -->
<!-- CvType.ELEM_SIZE(int) -->
<!-- CvType.channels(int) -->
<!-- CvType.depth(int) -->
<!-- CvType.isInteger(int) -->
<!-- CvType.makeType(int, int) -->
<!-- CvType.typeToString(int) -->
<!-- File: IO.Anyline.Util.AssetUtil.cs -->
<!-- AssetUtil.copyAnylineAssets(android.content.Context, org.json.JSONObject, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[2]" name="managedName">json</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[3]" name="managedName">mapJsonName</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[4]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[5]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFileWithoutPath(android.content.Context, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFileWithoutPath(android.content.Context, java.lang.String, java.io.File, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyDirectory(java.io.File, java.io.File) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyDirectory' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File']]/parameter[1]" name="managedName">sourceDir</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='copyDirectory' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File']]/parameter[2]" name="managedName">destDir</attr>
<!-- AssetUtil.deleteDirectory(java.io.File) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='deleteDirectory' and count(parameter)=1 and parameter[1][@type='java.io.File']]/parameter[1]" name="managedName">directoryToBeDeleted</attr>
<!-- AssetUtil.fileExists(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='fileExists' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">path</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='fileExists' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- AssetUtil.getAnylineAssetsJson(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getAnylineAssetsJson' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='getAnylineAssetsJson' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- AssetUtil.getRootPathForProduct(android.content.Context, io.anyline.products.Product) -->
<!-- AssetUtil.getRootPathForScanPlugin(android.content.Context, java.lang.Class&lt;?&gt;) -->
<!-- AssetUtil.readFile(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='readFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">path</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='AssetUtil']/method[@name='readFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- File: IO.Anyline.Plugin.Result.IdResult.cs -->
<!-- IdResult.setAdditionalInformation(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAdditionalInformation' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">additionalInformation</attr>
<!-- IdResult.setAdditionalInformation1(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAdditionalInformation1' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">additionalInformation1</attr>
<!-- IdResult.setAdditionalInformation2(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAdditionalInformation2' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">additionalInformation2</attr>
<!-- IdResult.setAdditionalInformation3(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAdditionalInformation3' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">additionalInformation3</attr>
<!-- IdResult.setAddress(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">address</attr>
<!-- IdResult.setAge(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAge' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">age</attr>
<!-- IdResult.setAirport(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAirport' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">airport</attr>
<!-- IdResult.setAllCheckDigitsValid(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAllCheckDigitsValid' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">allCheckDigitsValid</attr>
<!-- IdResult.setAudit(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAudit' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">audit</attr>
<!-- IdResult.setAuthority(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setAuthority' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">authority</attr>
<!-- IdResult.setBarcode(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setBarcode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">barcode</attr>
<!-- IdResult.setBloodType(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setBloodType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">bloodType</attr>
<!-- IdResult.setCardAccessNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCardAccessNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">cardAccessNumber</attr>
<!-- IdResult.setCheckDigitDateOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- IdResult.setCheckDigitDateOfExpiry(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- IdResult.setCheckDigitDocumentNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- IdResult.setCheckDigitFinal(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- IdResult.setCheckDigitPersonalNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- IdResult.setCityNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCityNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">cityNumber</attr>
<!-- IdResult.setConditions(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setConditions' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">conditions</attr>
<!-- IdResult.setCountry(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setCountry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">country</attr>
<!-- IdResult.setDateOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- IdResult.setDateOfBirthObject(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDateOfBirthObject' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">dateOfBirthObject</attr>
<!-- IdResult.setDateOfExpiry(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- IdResult.setDateOfExpiryObject(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDateOfExpiryObject' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">dateOfExpiryObject</attr>
<!-- IdResult.setDateOfIssue(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- IdResult.setDateOfRegistration(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDateOfRegistration' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">dateOfRegistration</attr>
<!-- IdResult.setDegreeOfDisability(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDegreeOfDisability' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">degreeOfDisability</attr>
<!-- IdResult.setDivisionNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDivisionNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">divisionNumber</attr>
<!-- IdResult.setDocumentCategoryDefinition(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentCategoryDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentCategoryDefinition</attr>
<!-- IdResult.setDocumentDiscriminator(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentDiscriminator' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentDiscriminator</attr>
<!-- IdResult.setDocumentNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- IdResult.setDocumentRegionDefinition(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentRegionDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentRegionDefinition</attr>
<!-- IdResult.setDocumentSideDefinition(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentSideDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentSideDefinition</attr>
<!-- IdResult.setDocumentType(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentType</attr>
<!-- IdResult.setDocumentTypeDefinition(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentTypeDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentTypeDefinition</attr>
<!-- IdResult.setDocumentVersionsDefinition(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDocumentVersionsDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">documentVersionsDefinition</attr>
<!-- IdResult.setDuplicate(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDuplicate' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">duplicate</attr>
<!-- IdResult.setDuration(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setDuration' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">duration</attr>
<!-- IdResult.setEducationalInstitution(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setEducationalInstitution' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">educationalInstitution</attr>
<!-- IdResult.setEmployer(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setEmployer' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">employer</attr>
<!-- IdResult.setEndorsements(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setEndorsements' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">endorsements</attr>
<!-- IdResult.setEyes(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setEyes' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">eyes</attr>
<!-- IdResult.setFace(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFace' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">face</attr>
<!-- IdResult.setFamilyNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFamilyNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">familyNumber</attr>
<!-- IdResult.setFamilyRelation(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFamilyRelation' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">familyRelation</attr>
<!-- IdResult.setFathersName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFathersName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">fathersName</attr>
<!-- IdResult.setFirstIssued(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFirstIssued' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">firstIssued</attr>
<!-- IdResult.setFirstName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">firstName</attr>
<!-- IdResult.setFolio(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFolio' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">folio</attr>
<!-- IdResult.setFormattedDateOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFormattedDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">formattedDateOfBirth</attr>
<!-- IdResult.setFormattedDateOfExpiry(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFormattedDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">formattedDateOfExpiry</attr>
<!-- IdResult.setFormattedDateOfIssue(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFormattedDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">formattedDateOfIssue</attr>
<!-- IdResult.setFullName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setFullName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">fullName</attr>
<!-- IdResult.setGivenNames(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">givenNames</attr>
<!-- IdResult.setHair(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setHair' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">hair</attr>
<!-- IdResult.setHeadOfFamily(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setHeadOfFamily' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">headOfFamily</attr>
<!-- IdResult.setHeight(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setHeight' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">height</attr>
<!-- IdResult.setHologram(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setHologram' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">hologram</attr>
<!-- IdResult.setInitials(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setInitials' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">initials</attr>
<!-- IdResult.setInitialsAndDateOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setInitialsAndDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">initialsAndDateOfBirth</attr>
<!-- IdResult.setIssuingCountryCode(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- IdResult.setLastName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">lastName</attr>
<!-- IdResult.setLicenseClass(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setLicenseClass' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">licenseClass</attr>
<!-- IdResult.setLicenseType(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setLicenseType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">licenseType</attr>
<!-- IdResult.setMaidenName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMaidenName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">maidenName</attr>
<!-- IdResult.setMilitaryRank(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMilitaryRank' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">militaryRank</attr>
<!-- IdResult.setMirrorNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMirrorNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">mirrorNumber</attr>
<!-- IdResult.setMothersName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMothersName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">mothersName</attr>
<!-- IdResult.setMrz(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMrz' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">mrz</attr>
<!-- IdResult.setMrzString(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMrzString' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">mrzString</attr>
<!-- IdResult.setMunicipalityNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setMunicipalityNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">municipalityNumber</attr>
<!-- IdResult.setNationality(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setNationality' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">nationality</attr>
<!-- IdResult.setNationalityCountryCode(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- IdResult.setOccupation(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setOccupation' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">occupation</attr>
<!-- IdResult.setOffice(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setOffice' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">office</attr>
<!-- IdResult.setOptionalData(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">optionalData</attr>
<!-- IdResult.setParentsFirstName(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setParentsFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">parentsFirstName</attr>
<!-- IdResult.setParish(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setParish' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">parish</attr>
<!-- IdResult.setPersonalNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- IdResult.setPlaceAndDateOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setPlaceAndDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">placeAndDateOfBirth</attr>
<!-- IdResult.setPlaceOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setPlaceOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">placeOfBirth</attr>
<!-- IdResult.setPreviousType(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setPreviousType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">previousType</attr>
<!-- IdResult.setPseudonym(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setPseudonym' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">pseudonym</attr>
<!-- IdResult.setReligion(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setReligion' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">religion</attr>
<!-- IdResult.setRestrictions(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setRestrictions' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">restrictions</attr>
<!-- IdResult.setSex(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">sex</attr>
<!-- IdResult.setSignature(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setSignature' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">signature</attr>
<!-- IdResult.setSocialSecurityNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setSocialSecurityNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">socialSecurityNumber</attr>
<!-- IdResult.setState(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setState' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">state</attr>
<!-- IdResult.setStateNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setStateNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">stateNumber</attr>
<!-- IdResult.setStatus(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setStatus' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">status</attr>
<!-- IdResult.setSurname(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">surname</attr>
<!-- IdResult.setVizAddress(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- IdResult.setVizDateOfBirth(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- IdResult.setVizDateOfBirthObject(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizDateOfBirthObject' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizDateOfBirthObject</attr>
<!-- IdResult.setVizDateOfExpiry(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- IdResult.setVizDateOfExpiryObject(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizDateOfExpiryObject' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizDateOfExpiryObject</attr>
<!-- IdResult.setVizDateOfIssue(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- IdResult.setVizDateOfIssueObject(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizDateOfIssueObject' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizDateOfIssueObject</attr>
<!-- IdResult.setVizGivenNames(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- IdResult.setVizSurname(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- IdResult.setVoterId(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setVoterId' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">voterId</attr>
<!-- IdResult.setWeight(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setWeight' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">weight</attr>
<!-- IdResult.setWorkPermitNumber(io.anyline.plugin.result.UniversalIdResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='IdResult']/method[@name='setWorkPermitNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResultField']]/parameter[1]" name="managedName">workPermitNumber</attr>
<!-- File: IO.Anyline2.CacheConfig.cs -->
<!-- CacheConfig.Companion.CacheConfig.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- CacheConfig.Preset.CacheConfig.Preset(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- File: IO.Anyline2.Legacy.ArgumentException.cs -->
<!-- ArgumentException.ArgumentException(int, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='ArgumentException']/constructor[@name='ArgumentException' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">errorCode</attr>
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='ArgumentException']/constructor[@name='ArgumentException' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">reason</attr>
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='ArgumentException']/constructor[@name='ArgumentException' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">parameterName</attr>
<!-- File: IO.Anyline.Models.AnylineYuvImage.cs -->
<!-- AnylineYuvImage.AnylineYuvImage(android.media.Image, int, int, int, int, int, boolean) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[1]" name="managedName">image</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[2]" name="managedName">targetOrientation</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[3]" name="managedName">cropX</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[4]" name="managedName">cropY</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[5]" name="managedName">cropWidth</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[6]" name="managedName">cropHeight</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=7 and parameter[1][@type='android.media.Image'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='boolean']]/parameter[7]" name="managedName">isGreyOnly</attr>
<!-- AnylineYuvImage.AnylineYuvImage(int, int, int, byte[], int, boolean) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[1]" name="managedName">format</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[2]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[3]" name="managedName">height</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[4]" name="managedName">data</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[5]" name="managedName">targetOrientation</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='byte[]'] and parameter[5][@type='int'] and parameter[6][@type='boolean']]/parameter[6]" name="managedName">isGreyOnly</attr>
<!-- AnylineYuvImage.AnylineYuvImage(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">format</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">height</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/constructor[@name='AnylineYuvImage' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">targetOrientation</attr>
<!-- AnylineYuvImage.crop(int, int, int, int, boolean) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[1]" name="managedName">cropX</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[2]" name="managedName">cropY</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[3]" name="managedName">cropWidth</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[4]" name="managedName">cropHeight</attr>
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='crop' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='boolean']]/parameter[5]" name="managedName">isGreyOnly</attr>
<!-- AnylineYuvImage.setTo(byte[]) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineYuvImage']/method[@name='setTo' and count(parameter)=1 and parameter[1][@type='byte[]']]/parameter[1]" name="managedName">data</attr>
<!-- File: IO.Anyline.Plugin.Config.LayoutMrz.cs -->
<!-- LayoutMrz.setDateOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- LayoutMrz.setDateOfExpiry(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- LayoutMrz.setVizAddress(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- LayoutMrz.setVizDateOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- LayoutMrz.setVizDateOfExpiry(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- LayoutMrz.setVizDateOfIssue(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- LayoutMrz.setVizGivenNames(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- LayoutMrz.setVizSurname(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutMrz']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline2.View.FlashConfig.cs -->
<!-- FlashConfig.FlashAlignment.fromInt(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig.FlashAlignment']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">pos</attr>
<!-- FlashConfig.FlashAlignment.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig.FlashAlignment']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">flashPos</attr>
<!-- FlashConfig.FlashAlignment.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig.FlashAlignment']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- FlashConfig.FlashMode.fromInt(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig.FlashMode']/method[@name='fromInt' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">mode</attr>
<!-- FlashConfig.FlashMode.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig.FlashMode']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">mode</attr>
<!-- FlashConfig.FlashMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig.FlashMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- FlashConfig.FlashConfig(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/constructor[@name='FlashConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/constructor[@name='FlashConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">flashJson</attr>
<!-- FlashConfig.setAlignment(io.anyline2.view.FlashConfig.FlashAlignment) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setAlignment' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.FlashConfig.FlashAlignment']]/parameter[1]" name="managedName">alignment</attr>
<!-- FlashConfig.setImageAutoId(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setImageAutoId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">imageAutoId</attr>
<!-- FlashConfig.setImageOffId(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setImageOffId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">imageOffId</attr>
<!-- FlashConfig.setImageOnId(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setImageOnId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">imageOnId</attr>
<!-- FlashConfig.setMode(io.anyline2.view.FlashConfig.FlashMode) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setMode' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.FlashConfig.FlashMode']]/parameter[1]" name="managedName">mode</attr>
<!-- FlashConfig.setOffsetXInDp(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setOffsetXInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">offsetXInDp</attr>
<!-- FlashConfig.setOffsetYInDp(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setOffsetYInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">offsetYInDp</attr>
<!-- FlashConfig.setPaddingInDp(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashConfig']/method[@name='setPaddingInDp' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">paddingInDp</attr>
<!-- File: IO.Anyline.Camera.SimpleZoomHandlerBuilder.cs -->
<!-- SimpleZoomHandlerBuilder.forView(android.view.View, int, io.anyline.camera.CameraController) -->
<!-- SimpleZoomHandlerBuilder.setMaxZoom(float) -->
<!-- SimpleZoomHandlerBuilder.setZoomListener(io.anyline.camera.SimpleZoomHandler.IZoomHandlerListener) -->
<!-- File: IO.Anyline.Plugin.Result.Barcode.cs -->
<!-- Barcode.setAamva(io.anyline.plugin.result.Aamva) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Barcode']/method[@name='setAamva' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.Aamva']]/parameter[1]" name="managedName">aamva</attr>
<!-- Barcode.setBase64value(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Barcode']/method[@name='setBase64value' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">base64value</attr>
<!-- Barcode.setCoordinates(java.util.List&lt;java.lang.Integer&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Barcode']/method[@name='setCoordinates' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.Integer&gt;']]/parameter[1]" name="managedName">coordinates</attr>
<!-- Barcode.setFormat(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Barcode']/method[@name='setFormat' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">format</attr>
<!-- Barcode.setValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Barcode']/method[@name='setValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- File: IO.Anyline.Opencv.Imgproc.Subdiv2D.cs -->
<!-- Subdiv2D.Subdiv2D(io.anyline.opencv.core.Rect) -->
<!-- Subdiv2D.Subdiv2D(long) -->
<!-- Subdiv2D.edgeDst(int) -->
<!-- Subdiv2D.edgeDst(int, io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.edgeOrg(int) -->
<!-- Subdiv2D.edgeOrg(int, io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.findNearest(io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.findNearest(io.anyline.opencv.core.Point, io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.getEdge(int, int) -->
<!-- Subdiv2D.getEdgeList(io.anyline.opencv.core.MatOfFloat4) -->
<!-- Subdiv2D.getTriangleList(io.anyline.opencv.core.MatOfFloat6) -->
<!-- Subdiv2D.getVertex(int) -->
<!-- Subdiv2D.getVertex(int, int[]) -->
<!-- Subdiv2D.getVoronoiFacetList(io.anyline.opencv.core.MatOfInt, java.util.List&lt;io.anyline.opencv.core.MatOfPoint2f&gt;, io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Subdiv2D.initDelaunay(io.anyline.opencv.core.Rect) -->
<!-- Subdiv2D.insert(io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Subdiv2D.insert(io.anyline.opencv.core.Point) -->
<!-- Subdiv2D.locate(io.anyline.opencv.core.Point, int[], int[]) -->
<!-- Subdiv2D.nextEdge(int) -->
<!-- Subdiv2D.rotateEdge(int, int) -->
<!-- Subdiv2D.symEdge(int) -->
<!-- File: IO.Anyline.AnylineSDK.cs -->
<!-- AnylineSDK.TrainerEnvironment.valueOf(java.lang.String) -->
<!-- AnylineSDK.init(java.lang.String, android.content.Context) -->
<!-- File: IO.Anyline2.Viewplugin.ViewPluginBase.cs -->
<!-- ViewPluginBase.setUIChangeListener(io.anyline2.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='setUIChangeListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- ViewPluginBase.subscribeToImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='subscribeToImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ViewPluginBase.subscribeToNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider, java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='subscribeToNativeBarcodeProvider' and count(parameter)=2 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">nativeBarcodeProvider</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='subscribeToNativeBarcodeProvider' and count(parameter)=2 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[2]" name="managedName">supportedFormats</attr>
<!-- ViewPluginBase.unsubscribeFromImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='unsubscribeFromImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ViewPluginBase.unsubscribeFromNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='unsubscribeFromNativeBarcodeProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider']]/parameter[1]" name="managedName">nativeBarcodeProvider</attr>
<!-- ViewPluginBase.setUIChangeListener(io.anyline2.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='setUIChangeListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- ViewPluginBase.subscribeToImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='subscribeToImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ViewPluginBase.subscribeToNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider, java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='subscribeToNativeBarcodeProvider' and count(parameter)=2 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">nativeBarcodeProvider</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='subscribeToNativeBarcodeProvider' and count(parameter)=2 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[2]" name="managedName">supportedFormats</attr>
<!-- ViewPluginBase.unsubscribeFromImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='unsubscribeFromImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ViewPluginBase.unsubscribeFromNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ViewPluginBase']/method[@name='unsubscribeFromNativeBarcodeProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider']]/parameter[1]" name="managedName">nativeBarcodeProvider</attr>
<!-- File: IO.Anyline.Nfc.TagProvider.cs -->
<!-- TagProvider.setTag(android.nfc.tech.IsoDep) -->
<!-- TagProvider.setTimeout(int) -->
<!-- TagProvider.transceive(byte[]) -->
<!-- File: IO.Anyline.Plugin.Config.MrzConfig.cs -->
<!-- MrzConfig.setCropAndTransformID(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzConfig']/method[@name='setCropAndTransformID' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">cropAndTransformID</attr>
<!-- MrzConfig.setFaceDetectionEnabled(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzConfig']/method[@name='setFaceDetectionEnabled' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">faceDetectionEnabled</attr>
<!-- MrzConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- MrzConfig.setMrzFieldScanOptions(io.anyline.plugin.config.MrzFieldScanOptions) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzConfig']/method[@name='setMrzFieldScanOptions' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions']]/parameter[1]" name="managedName">mrzFieldScanOptions</attr>
<!-- MrzConfig.setMrzMinFieldConfidences(io.anyline.plugin.config.MrzMinFieldConfidences) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzConfig']/method[@name='setMrzMinFieldConfidences' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzMinFieldConfidences']]/parameter[1]" name="managedName">mrzMinFieldConfidences</attr>
<!-- MrzConfig.setStrictMode(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzConfig']/method[@name='setStrictMode' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">strictMode</attr>
<!-- File: IO.Anyline2.Image.INativeBarcodeProvider.cs -->
<!-- NativeBarcodeProvider.Factory.setInstance(io.anyline2.image.NativeBarcodeProvider) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='NativeBarcodeProvider.Factory']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider']]/parameter[1]" name="managedName">instance</attr>
<!-- NativeBarcodeProvider.addNativeBarcodeReceivedEventListener(io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;, java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='NativeBarcodeProvider']/method[@name='addNativeBarcodeReceivedEventListener' and count(parameter)=2 and parameter[1][@type='io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">nativeBarcodeReceivedEvent</attr>
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='NativeBarcodeProvider']/method[@name='addNativeBarcodeReceivedEventListener' and count(parameter)=2 and parameter[1][@type='io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[2]" name="managedName">supportedFormats</attr>
<!-- NativeBarcodeProvider.removeNativeBarcodeReceivedEventListener(io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;) -->
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='NativeBarcodeProvider']/method[@name='removeNativeBarcodeReceivedEventListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;']]/parameter[1]" name="managedName">nativeBarcodeReceivedEvent</attr>
<!-- File: IO.Anyline2.Viewplugin.ViewPluginComposite.cs -->
<!-- ViewPluginComposite.ProcessingMode.valueOf(java.lang.String) -->
<!-- ViewPluginComposite.ViewPluginComposite(org.json.JSONObject) -->
<!-- ViewPluginComposite.setUIChangeListener(io.anyline2.view.UIChangeListener) -->
<!-- ViewPluginComposite.subscribeToImageProvider(io.anyline2.image.ImageProvider) -->
<!-- ViewPluginComposite.subscribeToNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider, java.util.List&lt;? extends io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<!-- ViewPluginComposite.unsubscribeFromImageProvider(io.anyline2.image.ImageProvider) -->
<!-- ViewPluginComposite.unsubscribeFromNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider) -->
<!-- File: IO.Anyline2.DI.SoundUtilProvider.cs -->
<!-- File: IO.Anyline.Nfc.Parser.TagParser.cs -->
<!-- TagParser.TagParser(byte[]) -->
<!-- TagParser.geTag(java.lang.String) -->
<!-- TagParser.parseElement(byte[]) -->
<!-- File: IO.Anyline2.AssetUtilImpl.cs -->
<!-- File: IO.Anyline.Opencv.Core.MatOfFloat4.cs -->
<!-- MatOfFloat4.MatOfFloat4(float...) -->
<!-- MatOfFloat4.MatOfFloat4(io.anyline.opencv.core.Mat) -->
<!-- MatOfFloat4.MatOfFloat4(long) -->
<!-- MatOfFloat4.alloc(int) -->
<!-- MatOfFloat4.fromArray(float...) -->
<!-- MatOfFloat4.fromList(java.util.List&lt;java.lang.Float&gt;) -->
<!-- MatOfFloat4.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.Camera.AbstractMlKitDetector.cs -->
<!-- AbstractMlKitDetector.AbstractMlKitDetector(android.content.Context) -->
<!-- File: IO.Anyline.Camera.IImageListener.cs -->
<!-- ImageListener.onImageAvailable(io.anyline.camera.ImageReceiver) -->
<!-- File: IO.Anyline.Plugin.Result.VehicleRegistrationCertificateResult.cs -->
<!-- VehicleRegistrationCertificateResult.setResult(io.anyline.plugin.result.VrcResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VehicleRegistrationCertificateResult']/method[@name='setResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VrcResult']]/parameter[1]" name="managedName">result</attr>
<!-- VehicleRegistrationCertificateResult.setVisualization(io.anyline.plugin.result.Visualization) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VehicleRegistrationCertificateResult']/method[@name='setVisualization' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.Visualization']]/parameter[1]" name="managedName">visualization</attr>
<!-- File: IO.Anyline2.Plugin.ScanPluginConfig.cs -->
<!-- ScanPluginConfig.ScanPluginConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPluginConfig']/constructor[@name='ScanPluginConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonConfig</attr>
<!-- File: IO.Anyline2.Image.FileStorageImpl.cs -->
<!-- FileStorageImpl.saveBitmap(android.content.Context, android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='FileStorageImpl']/method[@name='saveBitmap' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.image']/class[@name='FileStorageImpl']/method[@name='saveBitmap' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.Bitmap']]/parameter[2]" name="managedName">bitmap</attr>
<!-- File: IO.Anyline2.View.ScanViewUtil.cs -->
<!-- ScanViewUtil.objectToOutline(java.lang.Object) -->
<!-- ScanViewUtil.openCvPointListToPointFList(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- File: IO.Anyline2.Image.IImageProvider.cs -->
<!-- ImageProvider.Factory.setInstance(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='ImageProvider.Factory']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">instance</attr>
<!-- ImageProvider.addImageReceivedEventListener(io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;) -->
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='ImageProvider']/method[@name='addImageReceivedEventListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;']]/parameter[1]" name="managedName">imageReceivedEvent</attr>
<!-- ImageProvider.removeImageReceivedEventListener(io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;) -->
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='ImageProvider']/method[@name='removeImageReceivedEventListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;']]/parameter[1]" name="managedName">imageReceivedEvent</attr>
<!-- File: IO.Anyline2.ALRectToROIMapper.cs -->
<!-- File: IO.Anyline.Nfc.NFC.DataGroup1.cs -->
<!-- DataGroup1.DataGroup1(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<!-- DataGroup1.setDateOfBirth(java.lang.String) -->
<!-- DataGroup1.setDateOfExpiry(java.lang.String) -->
<!-- DataGroup1.setDocumentNumber(java.lang.String) -->
<!-- DataGroup1.setDocumentType(java.lang.String) -->
<!-- DataGroup1.setFirstName(java.lang.String) -->
<!-- DataGroup1.setGender(java.lang.String) -->
<!-- DataGroup1.setIssuingStateCode(java.lang.String) -->
<!-- DataGroup1.setLastName(java.lang.String) -->
<!-- DataGroup1.setNationality(java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Config.MeterConfig.cs -->
<!-- MeterConfig.ScanMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MeterConfig.ScanMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- MeterConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MeterConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- MeterConfig.setMaxNumDecimalDigits(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MeterConfig']/method[@name='setMaxNumDecimalDigits' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">maxNumDecimalDigits</attr>
<!-- MeterConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MeterConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- MeterConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MeterConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- MeterConfig.setScanMode(io.anyline.plugin.config.MeterConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MeterConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MeterConfig.ScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- File: IO.Anyline2.DI.Context.ContextProvider.cs -->
<!-- ContextProvider.setInstance(android.content.Context) -->
<!-- File: IO.Anyline2.View.ScanViewConfig.cs -->
<!-- ScanViewConfig.ScanViewConfig(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanViewConfig']/constructor[@name='ScanViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanViewConfig']/constructor[@name='ScanViewConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- File: IO.Anyline2.Model.ALContourVector.cs -->
<!-- ALContourVector.ALContourVector(io.anyline2.model.ALContourVector) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALContourVector']/constructor[@name='ALContourVector' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALContourVector']]/parameter[1]" name="managedName">alContourVector</attr>
<!-- ALContourVector.ALContourVector(java.util.List&lt;io.anyline2.model.ALRect&gt;) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALContourVector']/constructor[@name='ALContourVector' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline2.model.ALRect&gt;']]/parameter[1]" name="managedName">rects</attr>
<!-- ALContourVector.ALContourVector(org.json.JSONArray) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALContourVector']/constructor[@name='ALContourVector' and count(parameter)=1 and parameter[1][@type='org.json.JSONArray']]/parameter[1]" name="managedName">array</attr>
<!-- ALContourVector.ALContourVector(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALContourVector']/constructor[@name='ALContourVector' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline2.Viewplugin.ScanViewPlugin.cs -->
<!-- ScanViewPlugin.ScanViewPlugin(io.anyline2.viewplugin.ScanViewPluginConfig) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/constructor[@name='ScanViewPlugin' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPluginConfig']]/parameter[1]" name="managedName">scanViewPluginConfig</attr>
<!-- ScanViewPlugin.ScanViewPlugin(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/constructor[@name='ScanViewPlugin' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonConfig</attr>
<!-- ScanViewPlugin.ScanViewPlugin(org.json.JSONObject, io.anyline2.legacy.trainer.AssetContext) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/constructor[@name='ScanViewPlugin' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='io.anyline2.legacy.trainer.AssetContext']]/parameter[1]" name="managedName">jsonConfig</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/constructor[@name='ScanViewPlugin' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='io.anyline2.legacy.trainer.AssetContext']]/parameter[2]" name="managedName">assetContext</attr>
<!-- ScanViewPlugin.setROI(io.anyline2.model.ALRect) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='setROI' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALRect']]/parameter[1]" name="managedName">roi</attr>
<!-- ScanViewPlugin.calcCutOutAndImageCropBounds(android.content.Context, int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[2]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[3]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[4]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[5]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float']]/parameter[6]" name="managedName">scale</attr>
<!-- ScanViewPlugin.setUIChangeListener(io.anyline2.view.UIChangeListener) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='setUIChangeListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.UIChangeListener']]/parameter[1]" name="managedName">listener</attr>
<!-- ScanViewPlugin.subscribeToImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='subscribeToImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ScanViewPlugin.subscribeToNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider, java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='subscribeToNativeBarcodeProvider' and count(parameter)=2 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">nativeBarcodeProvider</attr>
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='subscribeToNativeBarcodeProvider' and count(parameter)=2 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[2]" name="managedName">supportedFormats</attr>
<!-- ScanViewPlugin.unsubscribeFromImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='unsubscribeFromImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ScanViewPlugin.unsubscribeFromNativeBarcodeProvider(io.anyline2.image.NativeBarcodeProvider) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPlugin']/method[@name='unsubscribeFromNativeBarcodeProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.NativeBarcodeProvider']]/parameter[1]" name="managedName">nativeBarcodeProvider</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfInt4.cs -->
<!-- MatOfInt4.MatOfInt4(int...) -->
<!-- MatOfInt4.MatOfInt4(io.anyline.opencv.core.Mat) -->
<!-- MatOfInt4.MatOfInt4(long) -->
<!-- MatOfInt4.alloc(int) -->
<!-- MatOfInt4.fromArray(int...) -->
<!-- MatOfInt4.fromList(java.util.List&lt;java.lang.Integer&gt;) -->
<!-- MatOfInt4.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.SharedPreferencesProvider.cs -->
<!-- SharedPreferencesProvider.provideSharePreferences(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='SharedPreferencesProvider']/method[@name='provideSharePreferences' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.Plugin.Config.StartVariable.cs -->
<!-- StartVariable.setKey(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='StartVariable']/method[@name='setKey' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">key</attr>
<!-- StartVariable.setValue(java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='StartVariable']/method[@name='setValue' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]/parameter[1]" name="managedName">value</attr>
<!-- File: IO.Anyline2.DI.Mlkit.MlKitContextProvider.cs -->
<!-- File: IO.Anyline.Camera.IZoomEventHandler.cs -->
<!-- ZoomEventHandler.onZoomEventOccured(double) -->
<!-- File: IO.Anyline2.AppEnvironment.cs -->
<!-- AppEnvironment.Companion.AppEnvironment.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- AppEnvironment.Companion.getInstance(io.anyline2.CacheConfig) -->
<!-- AppEnvironment.AppEnvironment(io.anyline2.CacheConfig) -->
<!-- AppEnvironment.getInstance(io.anyline2.CacheConfig) -->
<!-- File: IO.Anyline2.Camera.CameraView.cs -->
<!-- CameraView.CameraView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CameraView.CameraView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- CameraView.CameraView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- CameraView.addImageReceivedEventListener(io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/method[@name='addImageReceivedEventListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;']]/parameter[1]" name="managedName">imageReceivedEvent</attr>
<!-- CameraView.addNativeBarcodeReceivedEventListener(io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;, java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/method[@name='addNativeBarcodeReceivedEventListener' and count(parameter)=2 and parameter[1][@type='io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">nativeBarcodeReceivedEvent</attr>
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/method[@name='addNativeBarcodeReceivedEventListener' and count(parameter)=2 and parameter[1][@type='io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;'] and parameter[2][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[2]" name="managedName">supportedFormats</attr>
<!-- CameraView.enableNativeBarcodeDetection(java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/method[@name='enableNativeBarcodeDetection' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">format</attr>
<!-- CameraView.removeImageReceivedEventListener(io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/method[@name='removeImageReceivedEventListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.Event&lt;io.anyline2.image.AnylineImage&gt;']]/parameter[1]" name="managedName">imageReceivedEvent</attr>
<!-- CameraView.removeNativeBarcodeReceivedEventListener(io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='CameraView']/method[@name='removeNativeBarcodeReceivedEventListener' and count(parameter)=1 and parameter[1][@type='io.anyline2.Event&lt;android.util.Pair&lt;io.anyline.models.AnylineYuvImage, io.anyline.plugin.result.BarcodeResult&gt;&gt;']]/parameter[1]" name="managedName">nativeBarcodeReceivedEvent</attr>
<!-- File: IO.Anyline.Plugin.Config.LayoutInsuranceCard.cs -->
<!-- LayoutInsuranceCard.setAuthority(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setAuthority' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">authority</attr>
<!-- LayoutInsuranceCard.setDateOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- LayoutInsuranceCard.setDateOfExpiry(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- LayoutInsuranceCard.setDocumentNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- LayoutInsuranceCard.setFirstName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">firstName</attr>
<!-- LayoutInsuranceCard.setLastName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">lastName</attr>
<!-- LayoutInsuranceCard.setNationality(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setNationality' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">nationality</attr>
<!-- LayoutInsuranceCard.setPersonalNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutInsuranceCard']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- File: IO.Anyline.Nfc.Tools.Tools.cs -->
<!-- Tools.adjustParityBits(byte[]) -->
<!-- Tools.byteToBytes(byte) -->
<!-- Tools.bytesToString(byte[]) -->
<!-- Tools.calculate2bytesInt(int) -->
<!-- Tools.calculateAsn1Length(byte[]) -->
<!-- Tools.calculateMrzCheckDigit(java.lang.String) -->
<!-- Tools.concatByteArrays(byte[], byte[]) -->
<!-- Tools.doXor(byte[], byte[]) -->
<!-- Tools.getAsn1HeaderLength(byte[]) -->
<!-- Tools.getIntFrom16bits(byte[]) -->
<!-- Tools.getLengthFromAsn1(byte[]) -->
<!-- Tools.getLengthFromFileHeader(byte[]) -->
<!-- Tools.incrementBytesArray(byte[]) -->
<!-- Tools.incrementBytesArray(byte[], int) -->
<!-- Tools.inputStreamToByteArray(java.io.InputStream) -->
<!-- Tools.invertBytes(byte[]) -->
<!-- Tools.unpadData(byte[]) -->
<!-- File: IO.Anyline.Camera.ImageReceiver.cs -->
<!-- ImageReceiver.getYuvImage(android.graphics.Rect, boolean) -->
<!-- ImageReceiver.getYuvImage(boolean) -->
<!-- File: IO.Anyline2.CorrectedResultReportingImpl.cs -->
<!-- CorrectedResultReportingImpl.reportCorrectedResult(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='CorrectedResultReportingImpl']/method[@name='reportCorrectedResult' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]/parameter[1]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='CorrectedResultReportingImpl']/method[@name='reportCorrectedResult' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]/parameter[2]" name="managedName">correctedResult</attr>
<!-- CorrectedResultReportingImpl.reportCorrectedResult(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='CorrectedResultReportingImpl']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='CorrectedResultReportingImpl']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">correctedResult</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='CorrectedResultReportingImpl']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">apiKey</attr>
<!-- File: IO.Anyline.Nfc.NFC.Apdu.cs -->
<!-- Apdu.buildApduCommand(byte, byte, byte, byte, byte[]) -->
<!-- Apdu.buildApduCommand(byte, byte, byte, byte, byte[], byte) -->
<!-- Apdu.setApduWithLe(boolean) -->
<!-- File: IO.Anyline2.ScanResult.cs -->
<!-- ScanResult.Companion.ScanResult.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- ScanResult.ScanResult(io.anyline2.image.AnylineImage, java.lang.String) -->
<!-- ScanResult.setFaceImage(io.anyline2.image.AnylineImage) -->
<!-- ScanResult.reportCorrectedResult(java.lang.String) -->
<!-- ScanResult.reportCorrectedResult(java.lang.String, java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Result.PluginResult.cs -->
<!-- PluginResult.setBarcodeResult(io.anyline.plugin.result.BarcodeResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setBarcodeResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.BarcodeResult']]/parameter[1]" name="managedName">barcodeResult</attr>
<!-- PluginResult.setBlobKey(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setBlobKey' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">blobKey</attr>
<!-- PluginResult.setCommercialTireIdResult(io.anyline.plugin.result.CommercialTireIdResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setCommercialTireIdResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.CommercialTireIdResult']]/parameter[1]" name="managedName">commercialTireIdResult</attr>
<!-- PluginResult.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- PluginResult.setContainerResult(io.anyline.plugin.result.ContainerResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setContainerResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.ContainerResult']]/parameter[1]" name="managedName">containerResult</attr>
<!-- PluginResult.setCropRect(io.anyline.plugin.result.CropRect) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.CropRect']]/parameter[1]" name="managedName">cropRect</attr>
<!-- PluginResult.setJapaneseLandingPermissionResult(io.anyline.plugin.result.JapaneseLandingPermissionResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setJapaneseLandingPermissionResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JapaneseLandingPermissionResult']]/parameter[1]" name="managedName">japaneseLandingPermissionResult</attr>
<!-- PluginResult.setLicensePlateResult(io.anyline.plugin.result.LicensePlateResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setLicensePlateResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.LicensePlateResult']]/parameter[1]" name="managedName">licensePlateResult</attr>
<!-- PluginResult.setMeterResult(io.anyline.plugin.result.MeterResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setMeterResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.MeterResult']]/parameter[1]" name="managedName">meterResult</attr>
<!-- PluginResult.setMrzResult(io.anyline.plugin.result.MrzResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setMrzResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.MrzResult']]/parameter[1]" name="managedName">mrzResult</attr>
<!-- PluginResult.setOcrResult(io.anyline.plugin.result.OcrResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setOcrResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.OcrResult']]/parameter[1]" name="managedName">ocrResult</attr>
<!-- PluginResult.setOdometerResult(io.anyline.plugin.result.OdometerResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setOdometerResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.OdometerResult']]/parameter[1]" name="managedName">odometerResult</attr>
<!-- PluginResult.setPluginID(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setPluginID' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">pluginID</attr>
<!-- PluginResult.setTinResult(io.anyline.plugin.result.TinResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setTinResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TinResult']]/parameter[1]" name="managedName">tinResult</attr>
<!-- PluginResult.setTireMakeResult(io.anyline.plugin.result.TireMakeResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setTireMakeResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireMakeResult']]/parameter[1]" name="managedName">tireMakeResult</attr>
<!-- PluginResult.setTireSizeResult(io.anyline.plugin.result.TireSizeResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setTireSizeResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResult']]/parameter[1]" name="managedName">tireSizeResult</attr>
<!-- PluginResult.setUniversalIdResult(io.anyline.plugin.result.UniversalIdResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setUniversalIdResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.UniversalIdResult']]/parameter[1]" name="managedName">universalIdResult</attr>
<!-- PluginResult.setVehicleRegistrationCertificateResult(io.anyline.plugin.result.VehicleRegistrationCertificateResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setVehicleRegistrationCertificateResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResult']]/parameter[1]" name="managedName">vehicleRegistrationCertificateResult</attr>
<!-- PluginResult.setVinResult(io.anyline.plugin.result.VinResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='PluginResult']/method[@name='setVinResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VinResult']]/parameter[1]" name="managedName">vinResult</attr>
<!-- File: IO.Anyline.Plugin.Result.CropRect.cs -->
<!-- CropRect.setHeight(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='CropRect']/method[@name='setHeight' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">height</attr>
<!-- CropRect.setWidth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='CropRect']/method[@name='setWidth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">width</attr>
<!-- CropRect.setX(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='CropRect']/method[@name='setX' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">x</attr>
<!-- CropRect.setY(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='CropRect']/method[@name='setY' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">y</attr>
<!-- File: IO.Anyline.ICombinedImageProvider.cs -->
<!-- File: IO.Anyline.Plugin.Result.ContainerResult.cs -->
<!-- ContainerResult.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='ContainerResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline2.Model.ALGeometry.cs -->
<!-- ALGeometry.ALGeometry(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALGeometry']/constructor[@name='ALGeometry' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline2.CachedEventsUtils.cs -->
<!-- CachedEventsUtils.Companion.CachedEventsUtils.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- CachedEventsUtils.Companion.deleteCachedEvents(android.content.Context) -->
<!-- CachedEventsUtils.Companion.encodeToMd5(byte[]) -->
<!-- CachedEventsUtils.Companion.exportCachedEvents(android.content.Context, java.io.File) -->
<!-- CachedEventsUtils.Companion.getCachedEventsFolder(android.content.Context) -->
<!-- CachedEventsUtils.Companion.getOrCreateCachedEventsFolder(android.content.Context) -->
<!-- File: IO.Anyline2.ContextUtils.cs -->
<!-- File: IO.Anyline2.View.IUIChangeListener.cs -->
<!-- UIChangeListener.delayScanTime(io.anyline2.viewplugin.ScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='delayScanTime' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- UIChangeListener.drawVisualFeedback(io.anyline2.viewplugin.ScanViewPlugin, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='drawVisualFeedback' and count(parameter)=2 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin'] and parameter[2][@type='java.lang.Object']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='drawVisualFeedback' and count(parameter)=2 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin'] and parameter[2][@type='java.lang.Object']]/parameter[2]" name="managedName">reportedObject</attr>
<!-- UIChangeListener.onBrightnessUpdate(int) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='onBrightnessUpdate' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">value</attr>
<!-- UIChangeListener.onCutoutChanged(java.util.List&lt;android.util.Pair&lt;io.anyline2.viewplugin.ScanViewPlugin, io.anyline2.view.CutoutRect&gt;&gt;) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='onCutoutChanged' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.util.Pair&lt;io.anyline2.viewplugin.ScanViewPlugin, io.anyline2.view.CutoutRect&gt;&gt;']]/parameter[1]" name="managedName">scanViewPluginCutoutRectList</attr>
<!-- UIChangeListener.onCutoutVisibility(io.anyline2.viewplugin.ScanViewPlugin, boolean) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='onCutoutVisibility' and count(parameter)=2 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='onCutoutVisibility' and count(parameter)=2 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- UIChangeListener.onScanViewPluginStart(io.anyline2.viewplugin.ScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='onScanViewPluginStart' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- UIChangeListener.onScanViewPluginStop(io.anyline2.viewplugin.ScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline2.view']/interface[@name='UIChangeListener']/method[@name='onScanViewPluginStop' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- File: IO.Anyline.Plugin.Result.TireSizeResult.cs -->
<!-- TireSizeResult.setCommercialTire(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setCommercialTire' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">commercialTire</attr>
<!-- TireSizeResult.setConstruction(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setConstruction' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">construction</attr>
<!-- TireSizeResult.setDiameter(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setDiameter' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">diameter</attr>
<!-- TireSizeResult.setExtraLoad(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setExtraLoad' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">extraLoad</attr>
<!-- TireSizeResult.setLoadIndex(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setLoadIndex' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">loadIndex</attr>
<!-- TireSizeResult.setPrettifiedString(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setPrettifiedString' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">prettifiedString</attr>
<!-- TireSizeResult.setPrettifiedStringWithMeta(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setPrettifiedStringWithMeta' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">prettifiedStringWithMeta</attr>
<!-- TireSizeResult.setRatio(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setRatio' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">ratio</attr>
<!-- TireSizeResult.setSpeedRating(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setSpeedRating' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">speedRating</attr>
<!-- TireSizeResult.setText(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">text</attr>
<!-- TireSizeResult.setVehicleType(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setVehicleType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">vehicleType</attr>
<!-- TireSizeResult.setWidth(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setWidth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">width</attr>
<!-- TireSizeResult.setWinter(io.anyline.plugin.result.TireSizeResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireSizeResult']/method[@name='setWinter' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TireSizeResultField']]/parameter[1]" name="managedName">winter</attr>
<!-- File: IO.Anyline2.DI.Scancontroller.ScanControllerProviderImpl.cs -->
<!-- File: IO.Anyline.Plugin.Result.OcrResult.cs -->
<!-- OcrResult.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='OcrResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline2.Viewplugin.ScanViewPluginConfig.cs -->
<!-- ScanViewPluginConfig.ScanViewPluginConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanViewPluginConfig']/constructor[@name='ScanViewPluginConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- File: IO.Anyline.Camera.CameraView.cs -->
<!-- CameraView.CameraView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CameraView.CameraView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- CameraView.CameraView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/constructor[@name='CameraView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- CameraView.setPreferredCameraConfig(io.anyline.camera.CameraConfig) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredCameraConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraConfig']]/parameter[1]" name="managedName">preferredConfig</attr>
<!-- CameraView.onLayout(boolean, int, int, int, int) -->
<!-- CameraView.setCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setCameraOpenListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraOpenListener']]/parameter[1]" name="managedName">listener</attr>
<!-- CameraView.setFlashOn(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setFlashOn' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isOn</attr>
<!-- CameraView.setFocusConfig(io.anyline.camera.FocusConfig) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setFocusConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.FocusConfig']]/parameter[1]" name="managedName">focusConfig</attr>
<!-- CameraView.setHighResolutionImageListener(io.anyline.camera.HighResolutionImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setHighResolutionImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.HighResolutionImageListener']]/parameter[1]" name="managedName">highResolutionImageListener</attr>
<!-- CameraView.setImageListener(io.anyline.camera.ImageListener) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setImageListener' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.ImageListener']]/parameter[1]" name="managedName">imageListener</attr>
<!-- CameraView.setPreferredPictureSize(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPictureSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPictureSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">height</attr>
<!-- CameraView.setPreferredPreviewFps(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewFps' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">minFps</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewFps' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">maxFps</attr>
<!-- CameraView.setPreferredPreviewSize(int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreferredPreviewSize' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">height</attr>
<!-- CameraView.setPreviewCropGravity(int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setPreviewCropGravity' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">cropGravity</attr>
<!-- CameraView.setSceneMode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setSceneMode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">sceneMode</attr>
<!-- CameraView.setUseMaxFpsRange(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='setUseMaxFpsRange' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- CameraView.takeHighResolutionImage(int, int, int, int, int, int) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[1]" name="managedName">top</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[2]" name="managedName">left</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[3]" name="managedName">right</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[4]" name="managedName">bottom</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[5]" name="managedName">scanViewWidth</attr>
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraView']/method[@name='takeHighResolutionImage' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]/parameter[6]" name="managedName">scanViewHeight</attr>
<!-- File: IO.Anyline2.DI.Reporting.NetworkInterfaceProvider.cs -->
<!-- NetworkInterfaceProvider.withNetworkInterface(kotlin.jvm.functions.Function1&lt;? super io.anyline2.reporting.NetworkImplementation, kotlin.Unit&gt;) -->
<!-- File: IO.Anyline.Plugin.Result.UniversalIdResult.cs -->
<!-- UniversalIdResult.setResult(io.anyline.plugin.result.IdResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='UniversalIdResult']/method[@name='setResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.IdResult']]/parameter[1]" name="managedName">result</attr>
<!-- UniversalIdResult.setVisualization(io.anyline.plugin.result.Visualization) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='UniversalIdResult']/method[@name='setVisualization' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.Visualization']]/parameter[1]" name="managedName">visualization</attr>
<!-- File: IO.Anyline.Trainer.IAssetDelegate.cs -->
<!-- IAssetDelegate.onAssetDownloadProgress(java.lang.String, float) -->
<attr path="/api/package[@name='io.anyline.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetDownloadProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[1]" name="managedName">assetName</attr>
<attr path="/api/package[@name='io.anyline.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetDownloadProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[2]" name="managedName">progress</attr>
<!-- IAssetDelegate.onAssetUpdateAvailable(boolean) -->
<attr path="/api/package[@name='io.anyline.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetUpdateAvailable' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">updateAvailable</attr>
<!-- IAssetDelegate.onAssetUpdateError(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetUpdateError' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">error</attr>
<!-- File: IO.Anyline2.ICorrectedResultReporting.cs -->
<!-- CorrectedResultReporting.Factory.setInstance(io.anyline2.CorrectedResultReporting) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='CorrectedResultReporting.Factory']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.CorrectedResultReporting']]/parameter[1]" name="managedName">instance</attr>
<!-- CorrectedResultReporting.reportCorrectedResult(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline2']/interface[@name='CorrectedResultReporting']/method[@name='reportCorrectedResult' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]/parameter[1]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline2']/interface[@name='CorrectedResultReporting']/method[@name='reportCorrectedResult' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]/parameter[2]" name="managedName">correctedResult</attr>
<!-- CorrectedResultReporting.reportCorrectedResult(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2']/interface[@name='CorrectedResultReporting']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline2']/interface[@name='CorrectedResultReporting']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">correctedResult</attr>
<attr path="/api/package[@name='io.anyline2']/interface[@name='CorrectedResultReporting']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">apiKey</attr>
<!-- File: IO.Anyline.Plugin.Config.OdometerConfig.cs -->
<!-- OdometerConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OdometerConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- OdometerConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OdometerConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- File: IO.Anyline2.Legacy.AnylineException.cs -->
<!-- AnylineException.AnylineException(int, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='AnylineException']/constructor[@name='AnylineException' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">errorCode</attr>
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='AnylineException']/constructor[@name='AnylineException' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">reason</attr>
<!-- File: IO.Anyline.Opencv.Core.Rect.cs -->
<!-- Rect.Rect(double[]) -->
<!-- Rect.Rect(int, int, int, int) -->
<!-- Rect.Rect(io.anyline.opencv.core.Point, io.anyline.opencv.core.Point) -->
<!-- Rect.Rect(io.anyline.opencv.core.Point, io.anyline.opencv.core.Size) -->
<!-- Rect.contains(io.anyline.opencv.core.Point) -->
<!-- Rect.set(double[]) -->
<!-- File: IO.Anyline.Opencv.Core.Size.cs -->
<!-- Size.Size(double, double) -->
<!-- Size.Size(double[]) -->
<!-- Size.Size(io.anyline.opencv.core.Point) -->
<!-- Size.set(double[]) -->
<!-- File: IO.Anyline.Nfc.Reader.BacInfo.cs -->
<!-- BacInfo.setDateOfBirth(java.lang.String) -->
<!-- BacInfo.setDateOfExpiry(java.lang.String) -->
<!-- BacInfo.setPassportNbr(java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Result.BarcodeResult.cs -->
<!-- BarcodeResult.setBarcodes(java.util.List&lt;io.anyline.plugin.result.Barcode&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BarcodeResult']/method[@name='setBarcodes' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline.plugin.result.Barcode&gt;']]/parameter[1]" name="managedName">barcodes</attr>
<!-- File: IO.Anyline.Opencv.Imgproc.Moments.cs -->
<!-- Moments.Moments(double, double, double, double, double, double, double, double, double, double) -->
<!-- Moments.Moments(double[]) -->
<!-- Moments.set(double[]) -->
<!-- Moments.set_m00(double) -->
<!-- Moments.set_m01(double) -->
<!-- Moments.set_m02(double) -->
<!-- Moments.set_m03(double) -->
<!-- Moments.set_m10(double) -->
<!-- Moments.set_m11(double) -->
<!-- Moments.set_m12(double) -->
<!-- Moments.set_m20(double) -->
<!-- Moments.set_m21(double) -->
<!-- Moments.set_m30(double) -->
<!-- Moments.set_mu02(double) -->
<!-- Moments.set_mu03(double) -->
<!-- Moments.set_mu11(double) -->
<!-- Moments.set_mu12(double) -->
<!-- Moments.set_mu20(double) -->
<!-- Moments.set_mu21(double) -->
<!-- Moments.set_mu30(double) -->
<!-- Moments.set_nu02(double) -->
<!-- Moments.set_nu03(double) -->
<!-- Moments.set_nu11(double) -->
<!-- Moments.set_nu12(double) -->
<!-- Moments.set_nu20(double) -->
<!-- Moments.set_nu21(double) -->
<!-- Moments.set_nu30(double) -->
<!-- File: IO.Anyline.Plugin.Result.JapaneseLandingPermissionResult.cs -->
<!-- JapaneseLandingPermissionResult.setResult(io.anyline.plugin.result.JlpResult) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JapaneseLandingPermissionResult']/method[@name='setResult' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JlpResult']]/parameter[1]" name="managedName">result</attr>
<!-- File: IO.Anyline.Plugin.Result.Arabic.cs -->
<!-- Arabic.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Arabic']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- Arabic.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Arabic']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline2.View.AnylineWebView.cs -->
<!-- AnylineWebView.AnylineWebView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/constructor[@name='AnylineWebView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- AnylineWebView.drawDocument(java.util.List&lt;android.graphics.PointF&gt;, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='drawDocument' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">reportedShape</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='drawDocument' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- AnylineWebView.drawFeedback(java.util.List&lt;android.graphics.PointF&gt;, io.anyline2.model.ALRect, float, float, java.lang.String, java.lang.String, int, int, io.anyline2.viewplugin.ScanFeedbackConfig.ScanFeedbackStyle, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='drawFeedback' and count(parameter)=10 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='io.anyline2.viewplugin.ScanFeedbackConfig.ScanFeedbackStyle'] and parameter[10][@type='android.graphics.Rect']]/parameter[1]" name="managedName">shape</attr>
<!-- AnylineWebView.getScaleWebView(android.webkit.WebView) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getScaleWebView' and count(parameter)=1 and parameter[1][@type='android.webkit.WebView']]/parameter[1]" name="managedName">webView</attr>
<!-- AnylineWebView.getViewRelativePointListFromCutoutRelativeShape(java.util.List&lt;android.graphics.PointF&gt;, java.lang.String, io.anyline2.model.ALRect, int, int, float, android.graphics.Rect, float) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[1]" name="managedName">shape</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[3]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[4]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[5]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[6]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[7]" name="managedName">rectOnVisibleView</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='getViewRelativePointListFromCutoutRelativeShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.model.ALRect'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='float'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[8]" name="managedName">scanViewPluginScale</attr>
<!-- AnylineWebView.initConfig(io.anyline2.viewplugin.ViewPluginBase) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='initConfig' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ViewPluginBase']]/parameter[1]" name="managedName">viewPluginBase</attr>
<!-- AnylineWebView.loadJavascript(java.lang.String) -->
<!-- AnylineWebView.setCameraView(io.anyline.camera.CameraView) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setCameraView' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraView']]/parameter[1]" name="managedName">cameraView</attr>
<!-- AnylineWebView.setRectRelativeToCutout(android.graphics.RectF, float, io.anyline.opencv.core.Rect, float, java.lang.String, io.anyline.opencv.core.Rect, int, int, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[1]" name="managedName">rect</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[2]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[3]" name="managedName">reportedRect</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[4]" name="managedName">resizeScale</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[5]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[6]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[7]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[8]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setRectRelativeToCutout' and count(parameter)=9 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='float'] and parameter[3][@type='io.anyline.opencv.core.Rect'] and parameter[4][@type='float'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='io.anyline.opencv.core.Rect'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='android.graphics.Rect']]/parameter[9]" name="managedName">cutoutRectOnView</attr>
<!-- AnylineWebView.setScanDelayTime(double, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setScanDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">delayTime</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='setScanDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- AnylineWebView.updateContours(java.lang.Object, float, float, java.lang.String, io.anyline.opencv.core.Rect, int, int, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[1]" name="managedName">contours</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[2]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[3]" name="managedName">resizeScale</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[4]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[5]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[6]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[7]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateContours' and count(parameter)=8 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='float'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.opencv.core.Rect'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='android.graphics.Rect']]/parameter[8]" name="managedName">rectOnVisibleView</attr>
<!-- AnylineWebView.updateCutouts(java.lang.String, boolean) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateCutouts' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateCutouts' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- AnylineWebView.updateShape(java.util.List&lt;android.graphics.PointF&gt;, io.anyline2.model.ALRect, float, java.lang.String, int, int, android.graphics.Rect, float) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[1]" name="managedName">reportedShape</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[2]" name="managedName">cropRect</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[3]" name="managedName">scale</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[4]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[5]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[6]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[7]" name="managedName">rectOnVisibleView</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineWebView']/method[@name='updateShape' and count(parameter)=8 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='io.anyline2.model.ALRect'] and parameter[3][@type='float'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='android.graphics.Rect'] and parameter[8][@type='float']]/parameter[8]" name="managedName">scanViewPluginScale</attr>
<!-- File: IO.Anyline2.Util.JSUtil.cs -->
<!-- JSUtil.setupConfig(android.content.Context, java.lang.String, io.anyline2.viewplugin.CutoutConfig, io.anyline2.viewplugin.ScanFeedbackConfig, android.graphics.Rect) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.viewplugin.CutoutConfig'] and parameter[4][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.viewplugin.CutoutConfig'] and parameter[4][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[2]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.viewplugin.CutoutConfig'] and parameter[4][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[3]" name="managedName">cutoutConfig</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.viewplugin.CutoutConfig'] and parameter[4][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[4]" name="managedName">visualFeedbackConfig</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.viewplugin.CutoutConfig'] and parameter[4][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[5][@type='android.graphics.Rect']]/parameter[5]" name="managedName">rect</attr>
<!-- JSUtil.setupDelayTime(double, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">delayTime</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupDelayTime' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- JSUtil.setupMask(io.anyline2.viewplugin.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupMask' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.CutoutConfig']]/parameter[1]" name="managedName">cutoutConfig</attr>
<!-- JSUtil.setupParallelConfig(android.content.Context, java.util.ArrayList&lt;java.lang.String&gt;, java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;, java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;, java.util.ArrayList&lt;android.graphics.Rect&gt;) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[2]" name="managedName">ids</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[3]" name="managedName">cutoutConfigs</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[4]" name="managedName">visualFeedbackConfigs</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupParallelConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[5]" name="managedName">rects</attr>
<!-- JSUtil.setupSerialConfig(android.content.Context, java.util.ArrayList&lt;java.lang.String&gt;, java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;, java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;, java.util.ArrayList&lt;android.graphics.Rect&gt;) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[2]" name="managedName">ids</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[3]" name="managedName">cutoutConfigs</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[4]" name="managedName">visualFeedbackConfigs</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='setupSerialConfig' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.CutoutConfig&gt;'] and parameter[4][@type='java.util.ArrayList&lt;io.anyline2.viewplugin.ScanFeedbackConfig&gt;'] and parameter[5][@type='java.util.ArrayList&lt;android.graphics.Rect&gt;']]/parameter[5]" name="managedName">rects</attr>
<!-- JSUtil.updateCutout(java.lang.String, boolean) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateCutout' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[1]" name="managedName">id</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateCutout' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]/parameter[2]" name="managedName">visible</attr>
<!-- JSUtil.updateDocumentColorsFeedback(io.anyline2.viewplugin.ScanFeedbackConfig, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateDocumentColorsFeedback' and count(parameter)=2 and parameter[1][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">visualFeedbackConfig</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateDocumentColorsFeedback' and count(parameter)=2 and parameter[1][@type='io.anyline2.viewplugin.ScanFeedbackConfig'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">id</attr>
<!-- JSUtil.updateFeedback(java.util.ArrayList&lt;android.graphics.RectF&gt;, android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateFeedback' and count(parameter)=3 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.RectF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">rectFs</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateFeedback' and count(parameter)=3 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.RectF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateFeedback' and count(parameter)=3 and parameter[1][@type='java.util.ArrayList&lt;android.graphics.RectF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- JSUtil.updateFeedbackShape(java.util.List&lt;android.graphics.PointF&gt;, android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateFeedbackShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">points</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateFeedbackShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.util']/class[@name='JSUtil']/method[@name='updateFeedbackShape' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">id</attr>
<!-- File: IO.Anyline2.DI.Reporting.NetworkClientProviderImpl.cs -->
<!-- File: IO.Anyline2.DI.Config.IPluginConfigProvider.cs -->
<!-- PluginConfigProvider.Factory.setInstance(io.anyline2.di.config.PluginConfigProvider) -->
<!-- PluginConfigProvider.providePluginConfig(org.json.JSONObject) -->
<!-- PluginConfigProvider.toJsonObject(io.anyline.plugin.config.PluginConfig) -->
<!-- File: IO.Anyline.Opencv.Android.UtilsProviderImpl.cs -->
<!-- UtilsProviderImpl.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat, boolean) -->
<!-- UtilsProviderImpl.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap) -->
<!-- File: IO.Anyline.Opencv.Core.Range.cs -->
<!-- Range.Range(double[]) -->
<!-- Range.Range(int, int) -->
<!-- Range.intersection(io.anyline.opencv.core.Range) -->
<!-- Range.set(double[]) -->
<!-- Range.shift(int) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfDouble.cs -->
<!-- MatOfDouble.MatOfDouble(double...) -->
<!-- MatOfDouble.MatOfDouble(io.anyline.opencv.core.Mat) -->
<!-- MatOfDouble.MatOfDouble(long) -->
<!-- MatOfDouble.alloc(int) -->
<!-- MatOfDouble.fromArray(double...) -->
<!-- MatOfDouble.fromList(java.util.List&lt;java.lang.Double&gt;) -->
<!-- MatOfDouble.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.View.AnylineFeedbackView.cs -->
<!-- AnylineFeedbackView.AnylineFeedbackView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineFeedbackView']/constructor[@name='AnylineFeedbackView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineFeedbackView']/constructor[@name='AnylineFeedbackView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- AnylineFeedbackView.translateX(float) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineFeedbackView']/method[@name='translateX' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">x</attr>
<!-- AnylineFeedbackView.translateY(float) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineFeedbackView']/method[@name='translateY' and count(parameter)=1 and parameter[1][@type='float']]/parameter[1]" name="managedName">y</attr>
<!-- File: IO.Anyline.Products.AnylineUpdater.cs -->
<!-- AnylineUpdater.getLocalAssetVersion(io.anyline.trainer.AssetContext) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='AnylineUpdater']/method[@name='getLocalAssetVersion' and count(parameter)=1 and parameter[1][@type='io.anyline.trainer.AssetContext']]/parameter[1]" name="managedName">assetContext</attr>
<!-- AnylineUpdater.update(android.content.Context, io.anyline.trainer.AssetContext, io.anyline.products.IAnylineUpdateDelegate) -->
<!-- File: IO.Anyline.Plugin.Result.JlpResult.cs -->
<!-- JlpResult.setAirport(io.anyline.plugin.result.JapaneseLandingPermissionResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JlpResult']/method[@name='setAirport' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JapaneseLandingPermissionResultField']]/parameter[1]" name="managedName">airport</attr>
<!-- JlpResult.setDateOfExpiry(io.anyline.plugin.result.JapaneseLandingPermissionResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JlpResult']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JapaneseLandingPermissionResultField']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- JlpResult.setDateOfIssue(io.anyline.plugin.result.JapaneseLandingPermissionResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JlpResult']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JapaneseLandingPermissionResultField']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- JlpResult.setDuration(io.anyline.plugin.result.JapaneseLandingPermissionResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JlpResult']/method[@name='setDuration' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JapaneseLandingPermissionResultField']]/parameter[1]" name="managedName">duration</attr>
<!-- JlpResult.setStatus(io.anyline.plugin.result.JapaneseLandingPermissionResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JlpResult']/method[@name='setStatus' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.JapaneseLandingPermissionResultField']]/parameter[1]" name="managedName">status</attr>
<!-- File: IO.Anyline2.JsonParser.cs -->
<!-- JsonParser.setInstance(io.anyline2.JsonParser) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='JsonParser']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.JsonParser']]/parameter[1]" name="managedName">instance</attr>
<!-- JsonParser.createJSONFromAppEnvironment(io.anyline2.AppEnvironment) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='JsonParser']/method[@name='createJSONFromAppEnvironment' and count(parameter)=1 and parameter[1][@type='io.anyline2.AppEnvironment']]/parameter[1]" name="managedName">appEnvironment</attr>
<!-- JsonParser.createJSONFromMap(java.util.Map&lt;java.lang.String, ?&gt;) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='JsonParser']/method[@name='createJSONFromMap' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;']]/parameter[1]" name="managedName">stringMap</attr>
<!-- JsonParser.createJSONFromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='JsonParser']/method[@name='createJSONFromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline.Plugin.Config.TireMakeConfig.cs -->
<!-- TireMakeConfig.UpsideDownMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireMakeConfig.UpsideDownMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- TireMakeConfig.UpsideDownMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireMakeConfig.UpsideDownMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- TireMakeConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireMakeConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- TireMakeConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireMakeConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- TireMakeConfig.setUpsideDownMode(io.anyline.plugin.config.TireMakeConfig.UpsideDownMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireMakeConfig']/method[@name='setUpsideDownMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TireMakeConfig.UpsideDownMode']]/parameter[1]" name="managedName">upsideDownMode</attr>
<!-- File: IO.Anyline.Util.NumUtil.cs -->
<!-- NumUtil.asDouble(java.lang.Object) -->
<!-- NumUtil.asFloat(java.lang.Object) -->
<!-- NumUtil.asInteger(java.lang.Object) -->
<!-- File: IO.Anyline.Opencv.Core.Core.cs -->
<!-- Core.setNumThreads(int) -->
<!-- Core.LUT(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.Mahalanobis(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PCABackProject(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PCACompute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PCACompute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Core.PCACompute(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.PCAProject(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.PSNR(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.SVBackSubst(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.SVDecomp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.SVDecomp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.absdiff(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.absdiff(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.add(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.addWeighted(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, double, io.anyline.opencv.core.Mat) -->
<!-- Core.addWeighted(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, double, io.anyline.opencv.core.Mat, int) -->
<!-- Core.batchDistance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Core.batchDistance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.batchDistance(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Mat, int, boolean) -->
<!-- Core.bitwise_and(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_and(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_not(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_not(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_or(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_or(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_xor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.bitwise_xor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.borderInterpolate(int, int, int) -->
<!-- Core.calcCovarMatrix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.calcCovarMatrix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.cartToPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.cartToPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.checkRange(io.anyline.opencv.core.Mat) -->
<!-- Core.checkRange(io.anyline.opencv.core.Mat, boolean, double, double) -->
<!-- Core.compare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.compare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, int) -->
<!-- Core.completeSymm(io.anyline.opencv.core.Mat) -->
<!-- Core.completeSymm(io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.convertScaleAbs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.convertScaleAbs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double) -->
<!-- Core.copyMakeBorder(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, int) -->
<!-- Core.copyMakeBorder(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Core.countNonZero(io.anyline.opencv.core.Mat) -->
<!-- Core.cubeRoot(float) -->
<!-- Core.dct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.dct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.determinant(io.anyline.opencv.core.Mat) -->
<!-- Core.dft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.dft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.divide(double, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.divide(double, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double) -->
<!-- Core.divide(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.eigen(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.eigen(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.exp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.extractChannel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.fastAtan2(float, float) -->
<!-- Core.findNonZero(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.flip(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.gemm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat) -->
<!-- Core.gemm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, int) -->
<!-- Core.getOptimalDFTSize(int) -->
<!-- Core.hconcat(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- Core.idct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.idct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.idft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.idft(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.inRange(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.insertChannel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.invert(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.invert(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.kmeans(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.TermCriteria, int, int) -->
<!-- Core.kmeans(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.TermCriteria, int, int, io.anyline.opencv.core.Mat) -->
<!-- Core.log(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.magnitude(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.max(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.max(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.mean(io.anyline.opencv.core.Mat) -->
<!-- Core.mean(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.meanStdDev(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDouble, io.anyline.opencv.core.MatOfDouble) -->
<!-- Core.meanStdDev(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfDouble, io.anyline.opencv.core.MatOfDouble, io.anyline.opencv.core.Mat) -->
<!-- Core.merge(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- Core.min(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.min(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.minMaxLoc(io.anyline.opencv.core.Mat) -->
<!-- Core.minMaxLoc(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.mixChannels(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt) -->
<!-- Core.mulSpectrums(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.mulSpectrums(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, boolean) -->
<!-- Core.mulTransposed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.mulTransposed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean, io.anyline.opencv.core.Mat, double) -->
<!-- Core.mulTransposed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double) -->
<!-- Core.multiply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, double, int) -->
<!-- Core.norm(io.anyline.opencv.core.Mat) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, int) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.norm(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, int) -->
<!-- Core.normalize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, int, io.anyline.opencv.core.Mat) -->
<!-- Core.patchNaNs(io.anyline.opencv.core.Mat) -->
<!-- Core.patchNaNs(io.anyline.opencv.core.Mat, double) -->
<!-- Core.perspectiveTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.phase(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.phase(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.polarToCart(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.polarToCart(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Core.pow(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat) -->
<!-- Core.randShuffle(io.anyline.opencv.core.Mat) -->
<!-- Core.randShuffle(io.anyline.opencv.core.Mat, double) -->
<!-- Core.randn(io.anyline.opencv.core.Mat, double, double) -->
<!-- Core.randu(io.anyline.opencv.core.Mat, double, double) -->
<!-- Core.reduce(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Core.reduce(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Core.repeat(io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Mat) -->
<!-- Core.scaleAdd(io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.setErrorVerbosity(boolean) -->
<!-- Core.setIdentity(io.anyline.opencv.core.Mat) -->
<!-- Core.setIdentity(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar) -->
<!-- Core.solve(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.solve(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.solveCubic(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.solvePoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.solvePoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.sort(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.sortIdx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.split(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Core.sqrt(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.subtract(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Core.sumElems(io.anyline.opencv.core.Mat) -->
<!-- Core.trace(io.anyline.opencv.core.Mat) -->
<!-- Core.transform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.transpose(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Core.vconcat(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Plugin.Config.OcrConfig.cs -->
<!-- OcrConfig.ScanMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig.ScanMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- OcrConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- OcrConfig.setCharCountX(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setCharCountX' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">charCountX</attr>
<!-- OcrConfig.setCharCountY(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setCharCountY' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">charCountY</attr>
<!-- OcrConfig.setCharPaddingXFactor(java.lang.Double) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setCharPaddingXFactor' and count(parameter)=1 and parameter[1][@type='java.lang.Double']]/parameter[1]" name="managedName">charPaddingXFactor</attr>
<!-- OcrConfig.setCharPaddingYFactor(java.lang.Double) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setCharPaddingYFactor' and count(parameter)=1 and parameter[1][@type='java.lang.Double']]/parameter[1]" name="managedName">charPaddingYFactor</attr>
<!-- OcrConfig.setCharWhitelist(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setCharWhitelist' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">charWhitelist</attr>
<!-- OcrConfig.setCustomCmdFile(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setCustomCmdFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">customCmdFile</attr>
<!-- OcrConfig.setMaxCharHeight(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setMaxCharHeight' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">maxCharHeight</attr>
<!-- OcrConfig.setMinCharHeight(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setMinCharHeight' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minCharHeight</attr>
<!-- OcrConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- OcrConfig.setMinSharpness(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setMinSharpness' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minSharpness</attr>
<!-- OcrConfig.setModels(java.util.List&lt;java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setModels' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[1]" name="managedName">models</attr>
<!-- OcrConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- OcrConfig.setScanMode(io.anyline.plugin.config.OcrConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='OcrConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.OcrConfig.ScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- File: IO.Anyline.DI.IFileOutputStreamProvider.cs -->
<!-- FileOutputStreamProvider.provideFileOutputStream(java.io.File) -->
<!-- File: IO.Anyline.Trainer.AssetContext.cs -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String) -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, io.anyline.Version) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version']]/parameter[3]" name="managedName">assetVersion</attr>
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, io.anyline.Version, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">assetVersion</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.Version'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">stage</attr>
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">assetVersion</attr>
<!-- AssetContext.AssetContext(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- AssetContext.getParameter(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/method[@name='getParameter' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">parameterName</attr>
<!-- AssetContext.setParameter(java.lang.String, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/method[@name='setParameter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[1]" name="managedName">parameterName</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='AssetContext']/method[@name='setParameter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[2]" name="managedName">value</attr>
<!-- File: IO.Anyline.DI.FileOutputStreamProviderImpl.cs -->
<!-- FileOutputStreamProviderImpl.provideFileOutputStream(java.io.File) -->
<!-- File: IO.Anyline.Plugin.Config.AllowedLayouts.cs -->
<!-- AllowedLayouts.setDrivingLicense(java.util.List&lt;java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='AllowedLayouts']/method[@name='setDrivingLicense' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[1]" name="managedName">drivingLicense</attr>
<!-- AllowedLayouts.setIdFront(java.util.List&lt;java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='AllowedLayouts']/method[@name='setIdFront' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[1]" name="managedName">idFront</attr>
<!-- AllowedLayouts.setInsuranceCard(java.util.List&lt;java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='AllowedLayouts']/method[@name='setInsuranceCard' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[1]" name="managedName">insuranceCard</attr>
<!-- AllowedLayouts.setMrz(java.util.List&lt;java.lang.String&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='AllowedLayouts']/method[@name='setMrz' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.String&gt;']]/parameter[1]" name="managedName">mrz</attr>
<!-- File: IO.Anyline2.Reporting.KtorNetworkClient.cs -->
<!-- KtorNetworkClient.KtorNetworkClient(long, long, boolean) -->
<!-- File: IO.Anyline.Plugin.Config.VehicleRegistrationCertificateField.cs -->
<!-- VehicleRegistrationCertificateField.ScanOption.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VehicleRegistrationCertificateField.ScanOption']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- VehicleRegistrationCertificateField.ScanOption.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VehicleRegistrationCertificateField.ScanOption']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- VehicleRegistrationCertificateField.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VehicleRegistrationCertificateField']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- VehicleRegistrationCertificateField.setScanOption(io.anyline.plugin.config.VehicleRegistrationCertificateField.ScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VehicleRegistrationCertificateField']/method[@name='setScanOption' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField.ScanOption']]/parameter[1]" name="managedName">scanOption</attr>
<!-- File: IO.Anyline2.Legacy.Trainer.ProjectContext.cs -->
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">apiKey</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline2.legacy.Version) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version']]/parameter[5]" name="managedName">assetVersion</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline2.legacy.Version, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version'] and parameter[6][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version'] and parameter[6][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version'] and parameter[6][@type='java.lang.String']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version'] and parameter[6][@type='java.lang.String']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version'] and parameter[6][@type='java.lang.String']]/parameter[5]" name="managedName">assetVersion</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline2.legacy.Version'] and parameter[6][@type='java.lang.String']]/parameter[6]" name="managedName">stage</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[5]" name="managedName">assetVersion</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- ProjectContext.setApiKey(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/method[@name='setApiKey' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">apiKey</attr>
<!-- ProjectContext.setProjectId(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='ProjectContext']/method[@name='setProjectId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">projectId</attr>
<!-- File: IO.Anyline.Plugin.Config.TireSizeConfig.cs -->
<!-- TireSizeConfig.UpsideDownMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireSizeConfig.UpsideDownMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- TireSizeConfig.UpsideDownMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireSizeConfig.UpsideDownMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- TireSizeConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireSizeConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- TireSizeConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireSizeConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- TireSizeConfig.setUpsideDownMode(io.anyline.plugin.config.TireSizeConfig.UpsideDownMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TireSizeConfig']/method[@name='setUpsideDownMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TireSizeConfig.UpsideDownMode']]/parameter[1]" name="managedName">upsideDownMode</attr>
<!-- File: IO.Anyline.Plugin.Result.VrcResult.cs -->
<!-- VrcResult.setAddress(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">address</attr>
<!-- VrcResult.setBrand(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setBrand' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">brand</attr>
<!-- VrcResult.setDisplacement(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDisplacement' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">displacement</attr>
<!-- VrcResult.setDocumentCategoryDefinition(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDocumentCategoryDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">documentCategoryDefinition</attr>
<!-- VrcResult.setDocumentNumber(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- VrcResult.setDocumentRegionDefinition(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDocumentRegionDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">documentRegionDefinition</attr>
<!-- VrcResult.setDocumentSideDefinition(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDocumentSideDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">documentSideDefinition</attr>
<!-- VrcResult.setDocumentTypeDefinition(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDocumentTypeDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">documentTypeDefinition</attr>
<!-- VrcResult.setDocumentVersionsDefinition(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setDocumentVersionsDefinition' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">documentVersionsDefinition</attr>
<!-- VrcResult.setFirstIssued(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setFirstIssued' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">firstIssued</attr>
<!-- VrcResult.setFirstName(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">firstName</attr>
<!-- VrcResult.setFormattedFirstIssued(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setFormattedFirstIssued' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">formattedFirstIssued</attr>
<!-- VrcResult.setLastName(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">lastName</attr>
<!-- VrcResult.setLicensePlate(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setLicensePlate' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">licensePlate</attr>
<!-- VrcResult.setManufacturerCode(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setManufacturerCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">manufacturerCode</attr>
<!-- VrcResult.setTire(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setTire' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">tire</attr>
<!-- VrcResult.setVehicleIdentificationNumber(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setVehicleIdentificationNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">vehicleIdentificationNumber</attr>
<!-- VrcResult.setVehicleType(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setVehicleType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">vehicleType</attr>
<!-- VrcResult.setVehicleTypeCode(io.anyline.plugin.result.VehicleRegistrationCertificateResultField) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VrcResult']/method[@name='setVehicleTypeCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.VehicleRegistrationCertificateResultField']]/parameter[1]" name="managedName">vehicleTypeCode</attr>
<!-- File: IO.Anyline.Nfc.Parser.EFSODParser.cs -->
<!-- EFSODParser.EFSODParser(byte[]) -->
<!-- File: IO.Anyline.Util.ConstantUtil.cs -->
<!-- File: IO.Anyline.Opencv.Imgproc.ImgprocProviderImpl.cs -->
<!-- ImgprocProviderImpl.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint2f.cs -->
<!-- MatOfPoint2f.MatOfPoint2f(io.anyline.opencv.core.Mat) -->
<!-- MatOfPoint2f.MatOfPoint2f(io.anyline.opencv.core.Point...) -->
<!-- MatOfPoint2f.MatOfPoint2f(long) -->
<!-- MatOfPoint2f.alloc(int) -->
<!-- MatOfPoint2f.fromArray(io.anyline.opencv.core.Point...) -->
<!-- MatOfPoint2f.fromList(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- MatOfPoint2f.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.View.CameraConfig.cs -->
<!-- CameraConfig.CameraConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/constructor[@name='CameraConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- CameraConfig.setDefaultLensFacing(io.anyline.camera.CameraFeatures.LensFacing) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setDefaultLensFacing' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.LensFacing']]/parameter[1]" name="managedName">defaultLensFacing</attr>
<!-- CameraConfig.setFallbackLensFacings(java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setFallbackLensFacings' and count(parameter)=1 and parameter[1][@type='java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;']]/parameter[1]" name="managedName">fallbackLensFacings</attr>
<!-- CameraConfig.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraConfig.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraConfig.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraConfig.setPreferredPictureHeight(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setPreferredPictureHeight' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPictureHeight</attr>
<!-- CameraConfig.setPreferredPictureWidth(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setPreferredPictureWidth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPictureWidth</attr>
<!-- CameraConfig.setPreferredPreviewHeight(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setPreferredPreviewHeight' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPreviewHeight</attr>
<!-- CameraConfig.setPreferredPreviewWidth(int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setPreferredPreviewWidth' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">preferredPreviewWidth</attr>
<!-- CameraConfig.setZoomGestureEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setZoomGestureEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">zoomGestureEnabled</attr>
<!-- CameraConfig.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CameraConfig']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomRatio</attr>
<!-- File: IO.Anyline.Nfc.Reader.DESedeReader.cs -->
<!-- DESedeReader.calculateEncryptionKey(byte[]) -->
<!-- DESedeReader.calculateMac(byte[], byte[]) -->
<!-- DESedeReader.calculateMac(byte[], byte[], boolean) -->
<!-- DESedeReader.calculateSequenceCounter(byte[]) -->
<!-- DESedeReader.decrypt(byte[], byte[]) -->
<!-- DESedeReader.encrypt(byte[], byte[]) -->
<!-- DESedeReader.padData(byte[]) -->
<!-- File: IO.Anyline.Plugin.Config.LayoutIdFront.cs -->
<!-- LayoutIdFront.setAdditionalInformation(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setAdditionalInformation' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">additionalInformation</attr>
<!-- LayoutIdFront.setAdditionalInformation1(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setAdditionalInformation1' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">additionalInformation1</attr>
<!-- LayoutIdFront.setAddress(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">address</attr>
<!-- LayoutIdFront.setAge(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setAge' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">age</attr>
<!-- LayoutIdFront.setAuthority(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setAuthority' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">authority</attr>
<!-- LayoutIdFront.setCardAccessNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setCardAccessNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">cardAccessNumber</attr>
<!-- LayoutIdFront.setCitizenship(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setCitizenship' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">citizenship</attr>
<!-- LayoutIdFront.setCityNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setCityNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">cityNumber</attr>
<!-- LayoutIdFront.setDateOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- LayoutIdFront.setDateOfExpiry(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- LayoutIdFront.setDateOfIssue(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- LayoutIdFront.setDateOfRegistration(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setDateOfRegistration' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfRegistration</attr>
<!-- LayoutIdFront.setDivisionNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setDivisionNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">divisionNumber</attr>
<!-- LayoutIdFront.setDocumentNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- LayoutIdFront.setFamilyName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setFamilyName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">familyName</attr>
<!-- LayoutIdFront.setFathersName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setFathersName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">fathersName</attr>
<!-- LayoutIdFront.setFirstName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">firstName</attr>
<!-- LayoutIdFront.setFolio(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setFolio' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">folio</attr>
<!-- LayoutIdFront.setFullName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setFullName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">fullName</attr>
<!-- LayoutIdFront.setGivenNames(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">givenNames</attr>
<!-- LayoutIdFront.setHeight(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setHeight' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">height</attr>
<!-- LayoutIdFront.setLastName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">lastName</attr>
<!-- LayoutIdFront.setLicenseClass(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setLicenseClass' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">licenseClass</attr>
<!-- LayoutIdFront.setLicenseType(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setLicenseType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">licenseType</attr>
<!-- LayoutIdFront.setMunicipalityNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setMunicipalityNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">municipalityNumber</attr>
<!-- LayoutIdFront.setNationalId(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setNationalId' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">nationalId</attr>
<!-- LayoutIdFront.setNationality(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setNationality' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">nationality</attr>
<!-- LayoutIdFront.setParentsGivenName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setParentsGivenName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">parentsGivenName</attr>
<!-- LayoutIdFront.setPersonalNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- LayoutIdFront.setPlaceAndDateOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setPlaceAndDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">placeAndDateOfBirth</attr>
<!-- LayoutIdFront.setPlaceOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setPlaceOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">placeOfBirth</attr>
<!-- LayoutIdFront.setSex(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">sex</attr>
<!-- LayoutIdFront.setStateNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setStateNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">stateNumber</attr>
<!-- LayoutIdFront.setSupportNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setSupportNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">supportNumber</attr>
<!-- LayoutIdFront.setSurname(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">surname</attr>
<!-- LayoutIdFront.setVoterId(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutIdFront']/method[@name='setVoterId' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">voterId</attr>
<!-- File: IO.Anyline2.ManagesUUIDImpl.cs -->
<!-- ManagesUUIDImpl.Companion.ManagesUUIDImpl.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- File: IO.Anyline2.Model.ALSquare.cs -->
<!-- ALSquare.ALSquare(io.anyline2.model.ALPoint, io.anyline2.model.ALPoint, io.anyline2.model.ALPoint, io.anyline2.model.ALPoint) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=4 and parameter[1][@type='io.anyline2.model.ALPoint'] and parameter[2][@type='io.anyline2.model.ALPoint'] and parameter[3][@type='io.anyline2.model.ALPoint'] and parameter[4][@type='io.anyline2.model.ALPoint']]/parameter[1]" name="managedName">topLeft</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=4 and parameter[1][@type='io.anyline2.model.ALPoint'] and parameter[2][@type='io.anyline2.model.ALPoint'] and parameter[3][@type='io.anyline2.model.ALPoint'] and parameter[4][@type='io.anyline2.model.ALPoint']]/parameter[2]" name="managedName">topRight</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=4 and parameter[1][@type='io.anyline2.model.ALPoint'] and parameter[2][@type='io.anyline2.model.ALPoint'] and parameter[3][@type='io.anyline2.model.ALPoint'] and parameter[4][@type='io.anyline2.model.ALPoint']]/parameter[3]" name="managedName">bottomLeft</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=4 and parameter[1][@type='io.anyline2.model.ALPoint'] and parameter[2][@type='io.anyline2.model.ALPoint'] and parameter[3][@type='io.anyline2.model.ALPoint'] and parameter[4][@type='io.anyline2.model.ALPoint']]/parameter[4]" name="managedName">bottomRight</attr>
<!-- ALSquare.ALSquare(io.anyline2.model.ALRect) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALRect']]/parameter[1]" name="managedName">alRect</attr>
<!-- ALSquare.ALSquare(io.anyline2.model.ALSquare) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALSquare']]/parameter[1]" name="managedName">alRect</attr>
<!-- ALSquare.ALSquare(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALSquare']/constructor[@name='ALSquare' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline.Opencv.Android.UtilsProviderFactory.cs -->
<!-- File: IO.Anyline.Plugin.Result.FieldConfidences.cs -->
<!-- FieldConfidences.setCheckDigitDateOfBirth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- FieldConfidences.setCheckDigitDateOfExpiry(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- FieldConfidences.setCheckDigitDocumentNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- FieldConfidences.setCheckDigitFinal(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- FieldConfidences.setCheckDigitPersonalNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- FieldConfidences.setDateOfBirth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- FieldConfidences.setDateOfExpiry(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- FieldConfidences.setDocumentNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- FieldConfidences.setDocumentType(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">documentType</attr>
<!-- FieldConfidences.setGivenNames(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">givenNames</attr>
<!-- FieldConfidences.setIssuingCountryCode(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- FieldConfidences.setMrzString(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setMrzString' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">mrzString</attr>
<!-- FieldConfidences.setNationalityCountryCode(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- FieldConfidences.setOptionalData(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">optionalData</attr>
<!-- FieldConfidences.setPersonalNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- FieldConfidences.setSex(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">sex</attr>
<!-- FieldConfidences.setSurname(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">surname</attr>
<!-- FieldConfidences.setVizAddress(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- FieldConfidences.setVizDateOfBirth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- FieldConfidences.setVizDateOfExpiry(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- FieldConfidences.setVizDateOfIssue(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- FieldConfidences.setVizGivenNames(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- FieldConfidences.setVizSurname(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='FieldConfidences']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline2.Legacy.Version.cs -->
<!-- Version.Version(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/constructor[@name='Version' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">major</attr>
<!-- Version.Version(java.lang.Integer, java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/constructor[@name='Version' and count(parameter)=2 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer']]/parameter[1]" name="managedName">major</attr>
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/constructor[@name='Version' and count(parameter)=2 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer']]/parameter[2]" name="managedName">minor</attr>
<!-- Version.Version(java.lang.Integer, java.lang.Integer, java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/constructor[@name='Version' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Integer']]/parameter[1]" name="managedName">major</attr>
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/constructor[@name='Version' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Integer']]/parameter[2]" name="managedName">minor</attr>
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/constructor[@name='Version' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Integer']]/parameter[3]" name="managedName">patch</attr>
<!-- Version.setMajor(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/method[@name='setMajor' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">major</attr>
<!-- Version.setMinor(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/method[@name='setMinor' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">minor</attr>
<!-- Version.setPatch(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='Version']/method[@name='setPatch' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">patch</attr>
<!-- File: IO.Anyline.Camera.CameraFeatures.cs -->
<!-- CameraFeatures.FocusMode.fromCamera1(java.lang.String) -->
<!-- CameraFeatures.FocusMode.valueOf(java.lang.String) -->
<!-- CameraFeatures.FpsRange.CameraFeatures.FpsRange(int, int) -->
<!-- CameraFeatures.FpsRange.getRangesFromCamera1(java.util.List&lt;int[]&gt;) -->
<!-- CameraFeatures.LensFacing.fromBitFlag(int) -->
<!-- CameraFeatures.LensFacing.fromBitFlags(int) -->
<!-- CameraFeatures.LensFacing.fromCamera1(int) -->
<!-- CameraFeatures.LensFacing.valueOf(java.lang.String) -->
<!-- CameraFeatures.OutputFormat.fromImageFormat(int) -->
<!-- CameraFeatures.OutputFormat.valueOf(java.lang.String) -->
<!-- CameraFeatures.SceneMode.fromCamera1(java.lang.String) -->
<!-- CameraFeatures.SceneMode.valueOf(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint3f.cs -->
<!-- MatOfPoint3f.MatOfPoint3f(io.anyline.opencv.core.Mat) -->
<!-- MatOfPoint3f.MatOfPoint3f(io.anyline.opencv.core.Point3...) -->
<!-- MatOfPoint3f.MatOfPoint3f(long) -->
<!-- MatOfPoint3f.alloc(int) -->
<!-- MatOfPoint3f.fromArray(io.anyline.opencv.core.Point3...) -->
<!-- MatOfPoint3f.fromList(java.util.List&lt;io.anyline.opencv.core.Point3&gt;) -->
<!-- MatOfPoint3f.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Opencv.Imgproc.ImgprocProviderFactory.cs -->
<!-- File: IO.Anyline.Plugin.Result.OdometerResult.cs -->
<!-- OdometerResult.setValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='OdometerResult']/method[@name='setValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- File: IO.Anyline.Util.DimensUtil.cs -->
<!-- DimensUtil.dpToPx(android.content.Context, float) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='dpToPx' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='float']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='dpToPx' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='float']]/parameter[2]" name="managedName">dp</attr>
<!-- DimensUtil.getDpFromPix(android.content.Context, int) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getDpFromPix' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getDpFromPix' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[2]" name="managedName">pix</attr>
<!-- DimensUtil.getPixFromDp(android.content.Context, int) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getPixFromDp' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getPixFromDp' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int']]/parameter[2]" name="managedName">dp</attr>
<!-- DimensUtil.getScreenOrientation(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='getScreenOrientation' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- DimensUtil.isOrientationPortrait(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='DimensUtil']/method[@name='isOrientationPortrait' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- File: IO.Anyline2.Legacy.Products.AnylineUpdater.cs -->
<!-- AnylineUpdater.getLocalAssetVersion(io.anyline2.legacy.trainer.AssetContext) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='AnylineUpdater']/method[@name='getLocalAssetVersion' and count(parameter)=1 and parameter[1][@type='io.anyline2.legacy.trainer.AssetContext']]/parameter[1]" name="managedName">assetContext</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfDMatch.cs -->
<!-- MatOfDMatch.MatOfDMatch(io.anyline.opencv.core.DMatch...) -->
<!-- MatOfDMatch.MatOfDMatch(io.anyline.opencv.core.Mat) -->
<!-- MatOfDMatch.MatOfDMatch(long) -->
<!-- MatOfDMatch.alloc(int) -->
<!-- MatOfDMatch.fromArray(io.anyline.opencv.core.DMatch...) -->
<!-- MatOfDMatch.fromList(java.util.List&lt;io.anyline.opencv.core.DMatch&gt;) -->
<!-- MatOfDMatch.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Opencv.Core.DMatch.cs -->
<!-- DMatch.DMatch(int, int, float) -->
<!-- DMatch.DMatch(int, int, int, float) -->
<!-- DMatch.lessThan(io.anyline.opencv.core.DMatch) -->
<!-- File: IO.Anyline.Camera.NativeBarcodeDetectionThread.cs -->
<!-- File: IO.Anyline.Opencv.Core.MatOfPoint.cs -->
<!-- MatOfPoint.MatOfPoint(io.anyline.opencv.core.Mat) -->
<!-- MatOfPoint.MatOfPoint(io.anyline.opencv.core.Point...) -->
<!-- MatOfPoint.MatOfPoint(long) -->
<!-- MatOfPoint.alloc(int) -->
<!-- MatOfPoint.fromArray(io.anyline.opencv.core.Point...) -->
<!-- MatOfPoint.fromList(java.util.List&lt;io.anyline.opencv.core.Point&gt;) -->
<!-- MatOfPoint.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.Viewplugin.ScanFeedbackConfig.cs -->
<!-- ScanFeedbackConfig.FeedbackAnimationStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig.FeedbackAnimationStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- ScanFeedbackConfig.ScanFeedbackStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig.ScanFeedbackStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- ScanFeedbackConfig.ScanFeedbackConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig']/constructor[@name='ScanFeedbackConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- ScanFeedbackConfig.getAnimationStyle(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig']/method[@name='getAnimationStyle' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">style</attr>
<!-- ScanFeedbackConfig.getCornerRadiusInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig']/method[@name='getCornerRadiusInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- ScanFeedbackConfig.getScanFeedbackStyle(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig']/method[@name='getScanFeedbackStyle' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">style</attr>
<!-- ScanFeedbackConfig.getStrokeWidthInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='ScanFeedbackConfig']/method[@name='getStrokeWidthInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- File: IO.Anyline.Camera.SimpleZoomHandler.cs -->
<!-- SimpleZoomHandler.IZoomHandlerListener.onZoomChanged(int) -->
<!-- SimpleZoomHandler.notifyZoomChanged(int) -->
<!-- SimpleZoomHandler.setZoomHandlerListener(io.anyline.camera.SimpleZoomHandler.IZoomHandlerListener) -->
<!-- File: IO.Anyline2.View.ScanView.cs -->
<!-- ScanView.ScanView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- ScanView.ScanView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- ScanView.ScanView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- ScanView.ScanView(android.content.Context, android.util.AttributeSet, int, int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/constructor[@name='ScanView' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">defStyleRes</attr>
<!-- ScanView.setScanViewPlugin(io.anyline2.viewplugin.ViewPluginBase) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='setScanViewPlugin' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ViewPluginBase']]/parameter[1]" name="managedName">viewPluginBase</attr>
<!-- ScanView.drawShape(java.util.List&lt;android.graphics.PointF&gt;) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='drawShape' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;android.graphics.PointF&gt;']]/parameter[1]" name="managedName">outline</attr>
<!-- ScanView.init(io.anyline2.legacy.trainer.AssetContext, int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='init' and count(parameter)=2 and parameter[1][@type='io.anyline2.legacy.trainer.AssetContext'] and parameter[2][@type='int']]/parameter[1]" name="managedName">assetContext</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='init' and count(parameter)=2 and parameter[1][@type='io.anyline2.legacy.trainer.AssetContext'] and parameter[2][@type='int']]/parameter[2]" name="managedName">timeoutSeconds</attr>
<!-- ScanView.init(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='init' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">configFileName</attr>
<!-- ScanView.init(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='init' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonConfig</attr>
<!-- ScanView.onLayout(boolean, int, int, int, int) -->
<!-- ScanView.setCountsForAutoFlash(int, int, int, int) -->
<!-- ScanView.setCropRect(io.anyline.opencv.core.Rect) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='setCropRect' and count(parameter)=1 and parameter[1][@type='io.anyline.opencv.core.Rect']]/parameter[1]" name="managedName">cropRect</attr>
<!-- ScanView.setLevelsForAutoFlash(int, int, int, int) -->
<!-- ScanView.setScanConfig(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='setScanConfig' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">pathFile</attr>
<!-- ScanView.setScanConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='setScanConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- ScanView.setScanViewConfig(io.anyline2.view.ScanViewConfig) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='setScanViewConfig' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.ScanViewConfig']]/parameter[1]" name="managedName">scanViewConfig</attr>
<!-- ScanView.setupCameraController(android.content.Context) -->
<!-- ScanView.updateCutoutView(io.anyline2.viewplugin.ScanViewPlugin) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='ScanView']/method[@name='updateCutoutView' and count(parameter)=1 and parameter[1][@type='io.anyline2.viewplugin.ScanViewPlugin']]/parameter[1]" name="managedName">scanViewPlugin</attr>
<!-- File: IO.Anyline.Nfc.NFC.NFCResult.cs -->
<!-- NFCResult.NFCResult(io.anyline.nfc.NFC.DataGroup1, io.anyline.nfc.NFC.DataGroup2, io.anyline.nfc.NFC.SOD) -->
<!-- NFCResult.setDataGroup1(io.anyline.nfc.NFC.DataGroup1) -->
<!-- NFCResult.setDataGroup2(io.anyline.nfc.NFC.DataGroup2) -->
<!-- NFCResult.setSod(io.anyline.nfc.NFC.SOD) -->
<!-- File: IO.Anyline.Models.IBitmapCreator.cs -->
<!-- BitmapCreator.createBitmap(int, int, android.graphics.Bitmap.Config) -->
<!-- File: IO.Anyline.Opencv.Imgcodecs.Imgcodecs.cs -->
<!-- Imgcodecs.imdecode(io.anyline.opencv.core.Mat, int) -->
<!-- Imgcodecs.imencode(java.lang.String, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfByte) -->
<!-- Imgcodecs.imencode(java.lang.String, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfByte, io.anyline.opencv.core.MatOfInt) -->
<!-- Imgcodecs.imread(java.lang.String) -->
<!-- Imgcodecs.imread(java.lang.String, int) -->
<!-- Imgcodecs.imreadmulti(java.lang.String, java.util.List&lt;io.anyline.opencv.core.Mat&gt;) -->
<!-- Imgcodecs.imreadmulti(java.lang.String, java.util.List&lt;io.anyline.opencv.core.Mat&gt;, int) -->
<!-- Imgcodecs.imwrite(java.lang.String, io.anyline.opencv.core.Mat) -->
<!-- Imgcodecs.imwrite(java.lang.String, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfInt) -->
<!-- File: IO.Anyline.Nfc.Parser.DG1Parser.cs -->
<!-- DG1Parser.DG1Parser(byte[]) -->
<!-- DG1Parser.setDateOfBirth(java.lang.String) -->
<!-- DG1Parser.setDateOfBirthCheckDigit(java.lang.String) -->
<!-- DG1Parser.setDateOfExpiry(java.lang.String) -->
<!-- DG1Parser.setDateOfExpiryCheckDigit(java.lang.String) -->
<!-- DG1Parser.setDocumentCode(java.lang.String) -->
<!-- DG1Parser.setDocumentNumber(java.lang.String) -->
<!-- DG1Parser.setDocumentNumberCheckDigit(java.lang.String) -->
<!-- DG1Parser.setGender(java.lang.String) -->
<!-- DG1Parser.setGivenNames(java.lang.String) -->
<!-- DG1Parser.setIssuingStateCode(java.lang.String) -->
<!-- DG1Parser.setMRZ(java.lang.String) -->
<!-- DG1Parser.setNationalityCode(java.lang.String) -->
<!-- DG1Parser.setSurname(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Core.Mat.cs -->
<!-- Mat.Mat(int, int, int) -->
<!-- Mat.Mat(int, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Mat.Mat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Range) -->
<!-- Mat.Mat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Range, io.anyline.opencv.core.Range) -->
<!-- Mat.Mat(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect) -->
<!-- Mat.Mat(io.anyline.opencv.core.Size, int) -->
<!-- Mat.Mat(io.anyline.opencv.core.Size, int, io.anyline.opencv.core.Scalar) -->
<!-- Mat.Mat(long) -->
<!-- Mat.adjustROI(int, int, int, int) -->
<!-- Mat.assignTo(io.anyline.opencv.core.Mat) -->
<!-- Mat.assignTo(io.anyline.opencv.core.Mat, int) -->
<!-- Mat.checkVector(int) -->
<!-- Mat.checkVector(int, int) -->
<!-- Mat.checkVector(int, int, boolean) -->
<!-- Mat.col(int) -->
<!-- Mat.colRange(int, int) -->
<!-- Mat.colRange(io.anyline.opencv.core.Range) -->
<!-- Mat.convertTo(io.anyline.opencv.core.Mat, int) -->
<!-- Mat.convertTo(io.anyline.opencv.core.Mat, int, double) -->
<!-- Mat.convertTo(io.anyline.opencv.core.Mat, int, double, double) -->
<!-- Mat.copyTo(io.anyline.opencv.core.Mat) -->
<!-- Mat.copyTo(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Mat.create(int, int, int) -->
<!-- Mat.create(io.anyline.opencv.core.Size, int) -->
<!-- Mat.cross(io.anyline.opencv.core.Mat) -->
<!-- Mat.diag(int) -->
<!-- Mat.diag(io.anyline.opencv.core.Mat) -->
<!-- Mat.dot(io.anyline.opencv.core.Mat) -->
<!-- Mat.eye(int, int, int) -->
<!-- Mat.eye(io.anyline.opencv.core.Size, int) -->
<!-- Mat.get(int, int) -->
<!-- Mat.get(int, int, byte[]) -->
<!-- Mat.get(int, int, double[]) -->
<!-- Mat.get(int, int, float[]) -->
<!-- Mat.get(int, int, int[]) -->
<!-- Mat.get(int, int, short[]) -->
<!-- Mat.inv(int) -->
<!-- Mat.locateROI(io.anyline.opencv.core.Size, io.anyline.opencv.core.Point) -->
<!-- Mat.mul(io.anyline.opencv.core.Mat) -->
<!-- Mat.mul(io.anyline.opencv.core.Mat, double) -->
<!-- Mat.ones(int, int, int) -->
<!-- Mat.ones(io.anyline.opencv.core.Size, int) -->
<!-- Mat.push_back(io.anyline.opencv.core.Mat) -->
<!-- Mat.put(int, int, byte[]) -->
<!-- Mat.put(int, int, double...) -->
<!-- Mat.put(int, int, float[]) -->
<!-- Mat.put(int, int, int[]) -->
<!-- Mat.put(int, int, short[]) -->
<!-- Mat.reshape(int) -->
<!-- Mat.reshape(int, int) -->
<!-- Mat.row(int) -->
<!-- Mat.rowRange(int, int) -->
<!-- Mat.rowRange(io.anyline.opencv.core.Range) -->
<!-- Mat.setTo(io.anyline.opencv.core.Mat) -->
<!-- Mat.setTo(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Mat.setTo(io.anyline.opencv.core.Scalar) -->
<!-- Mat.setTo(io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Mat) -->
<!-- Mat.step1(int) -->
<!-- Mat.submat(int, int, int, int) -->
<!-- Mat.submat(io.anyline.opencv.core.Range, io.anyline.opencv.core.Range) -->
<!-- Mat.submat(io.anyline.opencv.core.Rect) -->
<!-- Mat.zeros(int, int, int) -->
<!-- Mat.zeros(io.anyline.opencv.core.Size, int) -->
<!-- File: IO.Anyline2.Legacy.Util.AssetUtil.cs -->
<!-- AssetUtil.assetExists(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='assetExists' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='assetExists' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">path</attr>
<!-- AssetUtil.copyAllAssetFiles(android.content.Context, java.lang.String...) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAllAssetFiles' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String...']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAllAssetFiles' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String...']]/parameter[2]" name="managedName">assetPaths</attr>
<!-- AssetUtil.copyAnylineAssets(android.content.Context, org.json.JSONObject, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[2]" name="managedName">json</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[3]" name="managedName">mapJsonName</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[4]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAnylineAssets' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.io.File'] and parameter[5][@type='boolean']]/parameter[5]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, boolean, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean'] and parameter[5][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean'] and parameter[5][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean'] and parameter[5][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean'] and parameter[5][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean'] and parameter[5][@type='java.lang.String']]/parameter[5]" name="managedName">pathPrefix</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFile(android.content.Context, java.lang.String, java.io.File, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFile' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[5]" name="managedName">pathPrefix</attr>
<!-- AssetUtil.copyAssetFileWithoutPath(android.content.Context, java.lang.String, java.io.File, boolean) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='boolean']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyAssetFileWithoutPath(android.content.Context, java.lang.String, java.io.File, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pathInAssets</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">dirToCopyTo</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyAssetFileWithoutPath' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.io.File'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">isForceCopy</attr>
<!-- AssetUtil.copyDirectory(java.io.File, java.io.File) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyDirectory' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File']]/parameter[1]" name="managedName">sourceDir</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='copyDirectory' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='java.io.File']]/parameter[2]" name="managedName">destDir</attr>
<!-- AssetUtil.deleteDirectory(java.io.File) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='deleteDirectory' and count(parameter)=1 and parameter[1][@type='java.io.File']]/parameter[1]" name="managedName">directoryToBeDeleted</attr>
<!-- AssetUtil.fileExists(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='fileExists' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">path</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='fileExists' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- AssetUtil.getAnylineAssetsJson(android.content.Context, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='getAnylineAssetsJson' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='getAnylineAssetsJson' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- AssetUtil.readFile(java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='readFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[1]" name="managedName">path</attr>
<attr path="/api/package[@name='io.anyline2.legacy.util']/class[@name='AssetUtil']/method[@name='readFile' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]/parameter[2]" name="managedName">fileName</attr>
<!-- File: IO.Anyline.Plugin.Config.UniversalIdField.cs -->
<!-- UniversalIdField.ScanOption.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdField.ScanOption']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- UniversalIdField.ScanOption.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdField.ScanOption']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- UniversalIdField.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdField']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- UniversalIdField.setScanOption(io.anyline.plugin.config.UniversalIdField.ScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdField']/method[@name='setScanOption' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField.ScanOption']]/parameter[1]" name="managedName">scanOption</attr>
<!-- File: IO.Anyline.Util.SoundUtil.cs -->
<!-- SoundUtil.SoundUtil(android.content.Context) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='SoundUtil']/constructor[@name='SoundUtil' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- SoundUtil.loadSoundFromAssets(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='SoundUtil']/method[@name='loadSoundFromAssets' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">assetFileName</attr>
<!-- SoundUtil.playSound(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.util']/class[@name='SoundUtil']/method[@name='playSound' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">assetFileName</attr>
<!-- File: IO.Anyline.Nfc.NFC.SOD.cs -->
<!-- SOD.SOD(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<!-- SOD.setIssuerCertificationAuthority(java.lang.String) -->
<!-- SOD.setIssuerCountry(java.lang.String) -->
<!-- SOD.setIssuerOrganization(java.lang.String) -->
<!-- SOD.setIssuerOrganizationalUnit(java.lang.String) -->
<!-- SOD.setLdsHashAlgorithm(java.lang.String) -->
<!-- SOD.setSignatureAlgorithm(java.lang.String) -->
<!-- SOD.setValidFromString(java.lang.String) -->
<!-- SOD.setValidUntilString(java.lang.String) -->
<!-- File: IO.Anyline2.Legacy.Trainer.AssetContext.cs -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String) -->
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, io.anyline2.legacy.Version) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version']]/parameter[3]" name="managedName">assetVersion</attr>
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, io.anyline2.legacy.Version, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">assetVersion</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.Version'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">stage</attr>
<!-- AssetContext.AssetContext(android.content.Context, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">assetVersion</attr>
<!-- AssetContext.AssetContext(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/constructor[@name='AssetContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- AssetContext.getParameter(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/method[@name='getParameter' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">parameterName</attr>
<!-- AssetContext.setParameter(java.lang.String, java.lang.Object) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/method[@name='setParameter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[1]" name="managedName">parameterName</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/class[@name='AssetContext']/method[@name='setParameter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object']]/parameter[2]" name="managedName">value</attr>
<!-- File: IO.Anyline.Plugin.Config.MrzMinFieldConfidences.cs -->
<!-- MrzMinFieldConfidences.setCheckDigitDateOfBirth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- MrzMinFieldConfidences.setCheckDigitDateOfExpiry(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- MrzMinFieldConfidences.setCheckDigitDocumentNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- MrzMinFieldConfidences.setCheckDigitFinal(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- MrzMinFieldConfidences.setCheckDigitPersonalNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- MrzMinFieldConfidences.setDateOfBirth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- MrzMinFieldConfidences.setDateOfExpiry(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- MrzMinFieldConfidences.setDocumentNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- MrzMinFieldConfidences.setDocumentType(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">documentType</attr>
<!-- MrzMinFieldConfidences.setGivenNames(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">givenNames</attr>
<!-- MrzMinFieldConfidences.setIssuingCountryCode(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- MrzMinFieldConfidences.setMrzString(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setMrzString' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">mrzString</attr>
<!-- MrzMinFieldConfidences.setNationalityCountryCode(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- MrzMinFieldConfidences.setOptionalData(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">optionalData</attr>
<!-- MrzMinFieldConfidences.setPersonalNumber(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- MrzMinFieldConfidences.setSex(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">sex</attr>
<!-- MrzMinFieldConfidences.setSurname(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">surname</attr>
<!-- MrzMinFieldConfidences.setVizAddress(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- MrzMinFieldConfidences.setVizDateOfBirth(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- MrzMinFieldConfidences.setVizDateOfExpiry(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- MrzMinFieldConfidences.setVizDateOfIssue(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- MrzMinFieldConfidences.setVizGivenNames(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- MrzMinFieldConfidences.setVizSurname(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzMinFieldConfidences']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline.Nfc.Constants.MrtdConstants.cs -->
<!-- File: IO.Anyline.Opencv.Core.MatProviderImpl.cs -->
<!-- MatProviderImpl.provideMat(io.anyline.opencv.core.Size, int) -->
<!-- File: IO.Anyline.Plugin.Result.TireMakeResult.cs -->
<!-- TireMakeResult.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TireMakeResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline.Plugin.Config.MrzFieldScanOptions.cs -->
<!-- MrzFieldScanOptions.MrzScanOption.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions.MrzScanOption']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- MrzFieldScanOptions.MrzScanOption.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions.MrzScanOption']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- MrzFieldScanOptions.setCheckDigitDateOfBirth(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setCheckDigitDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">checkDigitDateOfBirth</attr>
<!-- MrzFieldScanOptions.setCheckDigitDateOfExpiry(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setCheckDigitDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">checkDigitDateOfExpiry</attr>
<!-- MrzFieldScanOptions.setCheckDigitDocumentNumber(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setCheckDigitDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">checkDigitDocumentNumber</attr>
<!-- MrzFieldScanOptions.setCheckDigitFinal(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setCheckDigitFinal' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">checkDigitFinal</attr>
<!-- MrzFieldScanOptions.setCheckDigitPersonalNumber(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setCheckDigitPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">checkDigitPersonalNumber</attr>
<!-- MrzFieldScanOptions.setDateOfBirth(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- MrzFieldScanOptions.setDateOfExpiry(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- MrzFieldScanOptions.setDocumentNumber(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- MrzFieldScanOptions.setDocumentType(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setDocumentType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">documentType</attr>
<!-- MrzFieldScanOptions.setGivenNames(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">givenNames</attr>
<!-- MrzFieldScanOptions.setIssuingCountryCode(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setIssuingCountryCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">issuingCountryCode</attr>
<!-- MrzFieldScanOptions.setMrzString(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setMrzString' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">mrzString</attr>
<!-- MrzFieldScanOptions.setNationalityCountryCode(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setNationalityCountryCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">nationalityCountryCode</attr>
<!-- MrzFieldScanOptions.setOptionalData(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setOptionalData' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">optionalData</attr>
<!-- MrzFieldScanOptions.setPersonalNumber(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- MrzFieldScanOptions.setSex(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">sex</attr>
<!-- MrzFieldScanOptions.setSurname(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">surname</attr>
<!-- MrzFieldScanOptions.setVizAddress(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setVizAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">vizAddress</attr>
<!-- MrzFieldScanOptions.setVizDateOfBirth(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setVizDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">vizDateOfBirth</attr>
<!-- MrzFieldScanOptions.setVizDateOfExpiry(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setVizDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">vizDateOfExpiry</attr>
<!-- MrzFieldScanOptions.setVizDateOfIssue(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setVizDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">vizDateOfIssue</attr>
<!-- MrzFieldScanOptions.setVizGivenNames(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setVizGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">vizGivenNames</attr>
<!-- MrzFieldScanOptions.setVizSurname(io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='MrzFieldScanOptions']/method[@name='setVizSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzFieldScanOptions.MrzScanOption']]/parameter[1]" name="managedName">vizSurname</attr>
<!-- File: IO.Anyline.Opencv.Core.IMatProvider.cs -->
<!-- MatProvider.provideMat(io.anyline.opencv.core.Size, int) -->
<!-- File: IO.Anyline.Plugin.Barcode.BarcodeFormat.cs -->
<!-- BarcodeFormat.toBarcodeFormatInt(io.anyline.plugin.barcode.BarcodeFormat) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeFormat']/method[@name='toBarcodeFormatInt' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.barcode.BarcodeFormat']]/parameter[1]" name="managedName">barcodeFormat</attr>
<!-- BarcodeFormat.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.barcode']/class[@name='BarcodeFormat']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.Plugin.Config.PluginConfig.cs -->
<!-- PluginConfig.setBarcodeConfig(io.anyline.plugin.config.BarcodeConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setBarcodeConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.BarcodeConfig']]/parameter[1]" name="managedName">barcodeConfig</attr>
<!-- PluginConfig.setCancelOnResult(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setCancelOnResult' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">cancelOnResult</attr>
<!-- PluginConfig.setCommercialTireIdConfig(io.anyline.plugin.config.CommercialTireIdConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setCommercialTireIdConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.CommercialTireIdConfig']]/parameter[1]" name="managedName">commercialTireIdConfig</attr>
<!-- PluginConfig.setContainerConfig(io.anyline.plugin.config.ContainerConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setContainerConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.ContainerConfig']]/parameter[1]" name="managedName">containerConfig</attr>
<!-- PluginConfig.setId(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">id</attr>
<!-- PluginConfig.setJapaneseLandingPermissionConfig(io.anyline.plugin.config.JapaneseLandingPermissionConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setJapaneseLandingPermissionConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfig']]/parameter[1]" name="managedName">japaneseLandingPermissionConfig</attr>
<!-- PluginConfig.setLicensePlateConfig(io.anyline.plugin.config.LicensePlateConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setLicensePlateConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LicensePlateConfig']]/parameter[1]" name="managedName">licensePlateConfig</attr>
<!-- PluginConfig.setMeterConfig(io.anyline.plugin.config.MeterConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setMeterConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MeterConfig']]/parameter[1]" name="managedName">meterConfig</attr>
<!-- PluginConfig.setMrzConfig(io.anyline.plugin.config.MrzConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setMrzConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.MrzConfig']]/parameter[1]" name="managedName">mrzConfig</attr>
<!-- PluginConfig.setOcrConfig(io.anyline.plugin.config.OcrConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setOcrConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.OcrConfig']]/parameter[1]" name="managedName">ocrConfig</attr>
<!-- PluginConfig.setOdometerConfig(io.anyline.plugin.config.OdometerConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setOdometerConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.OdometerConfig']]/parameter[1]" name="managedName">odometerConfig</attr>
<!-- PluginConfig.setStartScanDelay(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setStartScanDelay' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">startScanDelay</attr>
<!-- PluginConfig.setStartVariables(java.util.List&lt;io.anyline.plugin.config.StartVariable&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setStartVariables' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline.plugin.config.StartVariable&gt;']]/parameter[1]" name="managedName">startVariables</attr>
<!-- PluginConfig.setTinConfig(io.anyline.plugin.config.TinConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setTinConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TinConfig']]/parameter[1]" name="managedName">tinConfig</attr>
<!-- PluginConfig.setTireMakeConfig(io.anyline.plugin.config.TireMakeConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setTireMakeConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TireMakeConfig']]/parameter[1]" name="managedName">tireMakeConfig</attr>
<!-- PluginConfig.setTireSizeConfig(io.anyline.plugin.config.TireSizeConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setTireSizeConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TireSizeConfig']]/parameter[1]" name="managedName">tireSizeConfig</attr>
<!-- PluginConfig.setUniversalIdConfig(io.anyline.plugin.config.UniversalIdConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setUniversalIdConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdConfig']]/parameter[1]" name="managedName">universalIdConfig</attr>
<!-- PluginConfig.setVehicleRegistrationCertificateConfig(io.anyline.plugin.config.VehicleRegistrationCertificateConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setVehicleRegistrationCertificateConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateConfig']]/parameter[1]" name="managedName">vehicleRegistrationCertificateConfig</attr>
<!-- PluginConfig.setVinConfig(io.anyline.plugin.config.VinConfig) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='PluginConfig']/method[@name='setVinConfig' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VinConfig']]/parameter[1]" name="managedName">vinConfig</attr>
<!-- File: IO.Anyline.Plugin.Result.Cyrillic.cs -->
<!-- Cyrillic.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Cyrillic']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- Cyrillic.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Cyrillic']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline.Opencv.Core.Point.cs -->
<!-- Point.Point(double, double) -->
<!-- Point.Point(double[]) -->
<!-- Point.dot(io.anyline.opencv.core.Point) -->
<!-- Point.inside(io.anyline.opencv.core.Rect) -->
<!-- Point.set(double[]) -->
<!-- File: IO.Anyline.Plugin.Result.TinResult.cs -->
<!-- TinResult.setProductionDate(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TinResult']/method[@name='setProductionDate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">productionDate</attr>
<!-- TinResult.setResultPrettified(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TinResult']/method[@name='setResultPrettified' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">resultPrettified</attr>
<!-- TinResult.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TinResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- TinResult.setTireAgeInYearsRoundedDown(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TinResult']/method[@name='setTireAgeInYearsRoundedDown' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">tireAgeInYearsRoundedDown</attr>
<!-- File: IO.Anyline.Plugin.Config.BarcodeFormat.cs -->
<!-- BarcodeFormat.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='BarcodeFormat']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- BarcodeFormat.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='BarcodeFormat']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline2.Legacy.Products.ProductContext.cs -->
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline2.legacy.products.Product) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product']]/parameter[3]" name="managedName">product</attr>
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline2.legacy.products.Product, io.anyline2.legacy.Version) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version']]/parameter[3]" name="managedName">product</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version']]/parameter[4]" name="managedName">assetVersion</attr>
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline2.legacy.products.Product, io.anyline2.legacy.Version, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version'] and parameter[5][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version'] and parameter[5][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version'] and parameter[5][@type='java.lang.String']]/parameter[3]" name="managedName">product</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version'] and parameter[5][@type='java.lang.String']]/parameter[4]" name="managedName">assetVersion</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='io.anyline2.legacy.Version'] and parameter[5][@type='java.lang.String']]/parameter[5]" name="managedName">stage</attr>
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline2.legacy.products.Product, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">product</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline2.legacy.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">assetVersion</attr>
<!-- ProductContext.ProductContext(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- File: IO.Anyline.Version.cs -->
<!-- Version.Version(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/constructor[@name='Version' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">major</attr>
<!-- Version.Version(java.lang.Integer, java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/constructor[@name='Version' and count(parameter)=2 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer']]/parameter[1]" name="managedName">major</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/constructor[@name='Version' and count(parameter)=2 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer']]/parameter[2]" name="managedName">minor</attr>
<!-- Version.Version(java.lang.Integer, java.lang.Integer, java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/constructor[@name='Version' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Integer']]/parameter[1]" name="managedName">major</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/constructor[@name='Version' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Integer']]/parameter[2]" name="managedName">minor</attr>
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/constructor[@name='Version' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Integer']]/parameter[3]" name="managedName">patch</attr>
<!-- Version.setMajor(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/method[@name='setMajor' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">major</attr>
<!-- Version.setMinor(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/method[@name='setMinor' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">minor</attr>
<!-- Version.setPatch(java.lang.String) -->
<attr path="/api/package[@name='io.anyline']/class[@name='Version']/method[@name='setPatch' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">patch</attr>
<!-- File: IO.Anyline.Plugin.Result.MeterResult.cs -->
<!-- MeterResult.setPosition(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MeterResult']/method[@name='setPosition' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">position</attr>
<!-- MeterResult.setUnit(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MeterResult']/method[@name='setUnit' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">unit</attr>
<!-- MeterResult.setValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='MeterResult']/method[@name='setValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- File: IO.Anyline.Plugin.Config.LayoutVehicleRegistrationCertificate.cs -->
<!-- LayoutVehicleRegistrationCertificate.setAddress(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">address</attr>
<!-- LayoutVehicleRegistrationCertificate.setBrand(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setBrand' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">brand</attr>
<!-- LayoutVehicleRegistrationCertificate.setDisplacement(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setDisplacement' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">displacement</attr>
<!-- LayoutVehicleRegistrationCertificate.setDocumentNumber(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- LayoutVehicleRegistrationCertificate.setFirstIssued(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setFirstIssued' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">firstIssued</attr>
<!-- LayoutVehicleRegistrationCertificate.setFirstName(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">firstName</attr>
<!-- LayoutVehicleRegistrationCertificate.setLastName(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">lastName</attr>
<!-- LayoutVehicleRegistrationCertificate.setLicensePlate(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setLicensePlate' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">licensePlate</attr>
<!-- LayoutVehicleRegistrationCertificate.setManufacturerCode(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setManufacturerCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">manufacturerCode</attr>
<!-- LayoutVehicleRegistrationCertificate.setTire(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setTire' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">tire</attr>
<!-- LayoutVehicleRegistrationCertificate.setVehicleIdentificationNumber(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setVehicleIdentificationNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">vehicleIdentificationNumber</attr>
<!-- LayoutVehicleRegistrationCertificate.setVehicleType(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setVehicleType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">vehicleType</attr>
<!-- LayoutVehicleRegistrationCertificate.setVehicleTypeCode(io.anyline.plugin.config.VehicleRegistrationCertificateField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutVehicleRegistrationCertificate']/method[@name='setVehicleTypeCode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.VehicleRegistrationCertificateField']]/parameter[1]" name="managedName">vehicleTypeCode</attr>
<!-- File: IO.Anyline.Nfc.Parser.Iso19794Parser.cs -->
<!-- Iso19794Parser.Iso19794Parser(byte[]) -->
<!-- File: IO.Anyline.Opencv.Imgproc.IImgprocProvider.cs -->
<!-- ImgprocProvider.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- File: IO.Anyline.Opencv.Imgproc.Imgproc.cs -->
<!-- Imgproc.Canny(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double) -->
<!-- Imgproc.Canny(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, boolean) -->
<!-- Imgproc.GaussianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double) -->
<!-- Imgproc.GaussianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double, double) -->
<!-- Imgproc.GaussianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double, double, int) -->
<!-- Imgproc.HoughCircles(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double) -->
<!-- Imgproc.HoughCircles(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double, double, double, int, int) -->
<!-- Imgproc.HoughLines(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Imgproc.HoughLines(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, double, double, double, double) -->
<!-- Imgproc.HoughLinesP(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Imgproc.HoughLinesP(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, double, double) -->
<!-- Imgproc.HuMoments(io.anyline.opencv.imgproc.Moments, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.Laplacian(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.Laplacian(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double, double) -->
<!-- Imgproc.Laplacian(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double, double, int) -->
<!-- Imgproc.Scharr(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.Scharr(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, double, double) -->
<!-- Imgproc.Scharr(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, double, double, int) -->
<!-- Imgproc.Sobel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.Sobel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, double, double) -->
<!-- Imgproc.Sobel(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, int, double, double, int) -->
<!-- Imgproc.accumulate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateProduct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateProduct(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateSquare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateSquare(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.accumulateWeighted(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double) -->
<!-- Imgproc.accumulateWeighted(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.adaptiveThreshold(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, int, int, int, double) -->
<!-- Imgproc.applyColorMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.approxPolyDP(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, double, boolean) -->
<!-- Imgproc.arcLength(io.anyline.opencv.core.MatOfPoint2f, boolean) -->
<!-- Imgproc.arrowedLine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.arrowedLine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int, double) -->
<!-- Imgproc.bilateralFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double) -->
<!-- Imgproc.bilateralFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double, int) -->
<!-- Imgproc.blur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.blur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point) -->
<!-- Imgproc.blur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.boundingRect(io.anyline.opencv.core.MatOfPoint) -->
<!-- Imgproc.boxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size) -->
<!-- Imgproc.boxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean) -->
<!-- Imgproc.boxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean, int) -->
<!-- Imgproc.boxPoints(io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.calcBackProject(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfFloat, double) -->
<!-- Imgproc.calcHist(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfFloat) -->
<!-- Imgproc.calcHist(java.util.List&lt;io.anyline.opencv.core.Mat&gt;, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfFloat, boolean) -->
<!-- Imgproc.circle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.circle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.circle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.clipLine(io.anyline.opencv.core.Rect, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point) -->
<!-- Imgproc.compareHist(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.connectedComponents(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.connectedComponents(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.connectedComponentsWithStats(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.connectedComponentsWithStats(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.contourArea(io.anyline.opencv.core.Mat) -->
<!-- Imgproc.contourArea(io.anyline.opencv.core.Mat, boolean) -->
<!-- Imgproc.convertMaps(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.convertMaps(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, boolean) -->
<!-- Imgproc.convexHull(io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfInt) -->
<!-- Imgproc.convexHull(io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfInt, boolean) -->
<!-- Imgproc.convexityDefects(io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.MatOfInt, io.anyline.opencv.core.MatOfInt4) -->
<!-- Imgproc.cornerEigenValsAndVecs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.cornerEigenValsAndVecs(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.cornerHarris(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double) -->
<!-- Imgproc.cornerHarris(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, double, int) -->
<!-- Imgproc.cornerMinEigenVal(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.cornerMinEigenVal(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.cornerMinEigenVal(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.cornerSubPix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Size, io.anyline.opencv.core.Size, io.anyline.opencv.core.TermCriteria) -->
<!-- Imgproc.createCLAHE(double, io.anyline.opencv.core.Size) -->
<!-- Imgproc.createHanningWindow(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.createLineSegmentDetector(int, double, double, double, double, double, double, int) -->
<!-- Imgproc.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.cvtColor(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.demosaicing(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.demosaicing(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.dilate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.dilate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.dilate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.distanceTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.distanceTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.distanceTransformWithLabels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.distanceTransformWithLabels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.drawContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.drawContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, int, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.drawContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, int, io.anyline.opencv.core.Scalar, int, int, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Point) -->
<!-- Imgproc.drawMarker(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.drawMarker(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double, double, double, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double, double, double, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double, double, double, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.ellipse(io.anyline.opencv.core.Mat, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Scalar, int, int) -->
<!-- Imgproc.ellipse2Poly(io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, int, int, int, int, io.anyline.opencv.core.MatOfPoint) -->
<!-- Imgproc.equalizeHist(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.erode(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.erode(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.erode(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.fillConvexPoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.fillConvexPoly(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, io.anyline.opencv.core.Scalar, int, int) -->
<!-- Imgproc.fillPoly(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.fillPoly(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Scalar, int, int, io.anyline.opencv.core.Point) -->
<!-- Imgproc.filter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.filter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double) -->
<!-- Imgproc.filter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.findContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.findContours(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Point) -->
<!-- Imgproc.fitEllipse(io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Imgproc.fitLine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double, double, double) -->
<!-- Imgproc.floodFill(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.floodFill(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Rect, io.anyline.opencv.core.Scalar, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.getAffineTransform(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Imgproc.getDefaultNewCameraMatrix(io.anyline.opencv.core.Mat) -->
<!-- Imgproc.getDefaultNewCameraMatrix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, boolean) -->
<!-- Imgproc.getDerivKernels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int) -->
<!-- Imgproc.getDerivKernels(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, int, boolean, int) -->
<!-- Imgproc.getGaborKernel(io.anyline.opencv.core.Size, double, double, double, double) -->
<!-- Imgproc.getGaborKernel(io.anyline.opencv.core.Size, double, double, double, double, double, int) -->
<!-- Imgproc.getGaussianKernel(int, double) -->
<!-- Imgproc.getGaussianKernel(int, double, int) -->
<!-- Imgproc.getPerspectiveTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.getRectSubPix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.getRectSubPix(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.getRotationMatrix2D(io.anyline.opencv.core.Point, double, double) -->
<!-- Imgproc.getStructuringElement(int, io.anyline.opencv.core.Size) -->
<!-- Imgproc.getStructuringElement(int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point) -->
<!-- Imgproc.getTextSize(java.lang.String, int, double, int, int[]) -->
<!-- Imgproc.goodFeaturesToTrack(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, int, double, double) -->
<!-- Imgproc.goodFeaturesToTrack(io.anyline.opencv.core.Mat, io.anyline.opencv.core.MatOfPoint, int, double, double, io.anyline.opencv.core.Mat, int, boolean, double) -->
<!-- Imgproc.grabCut(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.grabCut(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Rect, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.initUndistortRectifyMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.initWideAngleProjMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.initWideAngleProjMap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double) -->
<!-- Imgproc.integral(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.integral(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.integral2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.integral2(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.integral3(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.integral3(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.intersectConvexConvex(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.intersectConvexConvex(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, boolean) -->
<!-- Imgproc.invertAffineTransform(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.isContourConvex(io.anyline.opencv.core.MatOfPoint) -->
<!-- Imgproc.line(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.line(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.line(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.linearPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.logPolar(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.matchShapes(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, double) -->
<!-- Imgproc.matchTemplate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.matchTemplate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.medianBlur(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.minAreaRect(io.anyline.opencv.core.MatOfPoint2f) -->
<!-- Imgproc.minEnclosingCircle(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Point, float[]) -->
<!-- Imgproc.minEnclosingTriangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.moments(io.anyline.opencv.core.Mat) -->
<!-- Imgproc.moments(io.anyline.opencv.core.Mat, boolean) -->
<!-- Imgproc.morphologyEx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.morphologyEx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int) -->
<!-- Imgproc.morphologyEx(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.phaseCorrelate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.phaseCorrelate(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double[]) -->
<!-- Imgproc.pointPolygonTest(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Point, boolean) -->
<!-- Imgproc.polylines(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, boolean, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.polylines(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, boolean, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.polylines(io.anyline.opencv.core.Mat, java.util.List&lt;io.anyline.opencv.core.MatOfPoint&gt;, boolean, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.preCornerDetect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.preCornerDetect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.putText(io.anyline.opencv.core.Mat, java.lang.String, io.anyline.opencv.core.Point, int, double, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.putText(io.anyline.opencv.core.Mat, java.lang.String, io.anyline.opencv.core.Point, int, double, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.putText(io.anyline.opencv.core.Mat, java.lang.String, io.anyline.opencv.core.Point, int, double, io.anyline.opencv.core.Scalar, int, int, boolean) -->
<!-- Imgproc.pyrDown(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.pyrDown(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.pyrDown(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.pyrMeanShiftFiltering(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double) -->
<!-- Imgproc.pyrMeanShiftFiltering(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int, io.anyline.opencv.core.TermCriteria) -->
<!-- Imgproc.pyrUp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.pyrUp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.pyrUp(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.rectangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.rectangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int) -->
<!-- Imgproc.rectangle(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, io.anyline.opencv.core.Point, io.anyline.opencv.core.Scalar, int, int, int) -->
<!-- Imgproc.remap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.remap(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.resize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.resize(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, double, double, int) -->
<!-- Imgproc.rotatedRectangleIntersection(io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.RotatedRect, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.sepFilter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.sepFilter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double) -->
<!-- Imgproc.sepFilter2D(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Point, double, int) -->
<!-- Imgproc.spatialGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.spatialGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int) -->
<!-- Imgproc.spatialGradient(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, int) -->
<!-- Imgproc.sqrBoxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size) -->
<!-- Imgproc.sqrBoxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean) -->
<!-- Imgproc.sqrBoxFilter(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, int, io.anyline.opencv.core.Size, io.anyline.opencv.core.Point, boolean, int) -->
<!-- Imgproc.threshold(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, double, double, int) -->
<!-- Imgproc.undistort(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.undistort(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.undistortPoints(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.undistortPoints(io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.MatOfPoint2f, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- Imgproc.warpAffine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.warpAffine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.warpAffine(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.warpPerspective(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size) -->
<!-- Imgproc.warpPerspective(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int) -->
<!-- Imgproc.warpPerspective(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Size, int, int, io.anyline.opencv.core.Scalar) -->
<!-- Imgproc.watershed(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Camera.CameraUtil.cs -->
<!-- CameraUtil.AspectRatio.fromRatio(double) -->
<!-- CameraUtil.AspectRatio.fromString(java.lang.String) -->
<!-- CameraUtil.AspectRatio.valueOf(java.lang.String) -->
<!-- CameraUtil.getBestFittingPictureSize(java.util.List&lt;io.anyline.camera.CameraSize&gt;, int, int, java.util.List&lt;io.anyline.camera.CameraUtil.AspectRatio&gt;) -->
<!-- CameraUtil.getBiggestFittingPreviewFps(io.anyline.camera.CameraFeatures.FpsRange[], int, int) -->
<!-- CameraUtil.getBiggestFittingPreviewSize(java.util.List&lt;io.anyline.camera.CameraSize&gt;, int, int) -->
<!-- CameraUtil.getCameraDisplayRotation(android.content.Context, android.hardware.camera2.CameraCharacteristics) -->
<!-- CameraUtil.getCameraDisplayRotation(android.content.Context, int) -->
<!-- CameraUtil.getCameraRotation(android.content.Context, int) -->
<!-- CameraUtil.getDisplayRotationDegrees(android.content.Context) -->
<!-- CameraUtil.hasCamera(android.content.Context) -->
<!-- CameraUtil.setCameraDisplayOrientation(android.content.Context, int, android.hardware.Camera) -->
<!-- File: IO.Anyline.Plugin.Config.TinConfig.cs -->
<!-- TinConfig.ScanMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig.ScanMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- TinConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- TinConfig.UpsideDownMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig.UpsideDownMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- TinConfig.UpsideDownMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig.UpsideDownMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- TinConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- TinConfig.setValidateProductionDate(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig']/method[@name='setValidateProductionDate' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">validateProductionDate</attr>
<!-- TinConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- TinConfig.setScanMode(io.anyline.plugin.config.TinConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TinConfig.ScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- TinConfig.setUpsideDownMode(io.anyline.plugin.config.TinConfig.UpsideDownMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='TinConfig']/method[@name='setUpsideDownMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.TinConfig.UpsideDownMode']]/parameter[1]" name="managedName">upsideDownMode</attr>
<!-- File: IO.Anyline.Plugin.Result.Aamva.cs -->
<!-- Aamva.setAAMVAVersion(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Aamva']/method[@name='setAAMVAVersion' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">aAMVAVersion</attr>
<!-- Aamva.setBodyPart(io.anyline.plugin.result.BodyPart) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Aamva']/method[@name='setBodyPart' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.BodyPart']]/parameter[1]" name="managedName">bodyPart</attr>
<!-- File: IO.Anyline2.DI.Config.PluginConfigProviderImpl.cs -->
<!-- PluginConfigProviderImpl.providePluginConfig(org.json.JSONObject) -->
<!-- PluginConfigProviderImpl.toJsonObject(io.anyline.plugin.config.PluginConfig) -->
<!-- File: IO.Anyline2.AnylineSdk.cs -->
<!-- AnylineSdk.setAssetPathPrefix(java.lang.String) -->
<!-- AnylineSdk.init(java.lang.String, android.content.Context) -->
<!-- AnylineSdk.init(java.lang.String, android.content.Context, io.anyline2.CacheConfig.Preset) -->
<!-- AnylineSdk.init(java.lang.String, android.content.Context, java.lang.String) -->
<!-- AnylineSdk.init(java.lang.String, android.content.Context, java.lang.String, io.anyline2.CacheConfig.Preset) -->
<!-- File: IO.Anyline.Models.AnylineImage.cs -->
<!-- AnylineImage.AnylineImage(android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline.models']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=1 and parameter[1][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">bitmap</attr>
<!-- AnylineImage.AnylineImage(io.anyline.models.AnylineYuvImage) -->
<!-- AnylineImage.AnylineImage(io.anyline.opencv.core.Mat) -->
<!-- AnylineImage.save(java.io.File, int) -->
<!-- File: IO.Anyline2.Legacy.AnylineWorkerThreadPool.cs -->
<!-- AnylineWorkerThreadPool.execute(java.lang.Runnable) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='AnylineWorkerThreadPool']/method[@name='execute' and count(parameter)=1 and parameter[1][@type='java.lang.Runnable']]/parameter[1]" name="managedName">runnable</attr>
<!-- AnylineWorkerThreadPool.execute(java.util.concurrent.Callable&lt;?&gt;) -->
<attr path="/api/package[@name='io.anyline2.legacy']/class[@name='AnylineWorkerThreadPool']/method[@name='execute' and count(parameter)=1 and parameter[1][@type='java.util.concurrent.Callable&lt;?&gt;']]/parameter[1]" name="managedName">callable</attr>
<!-- File: IO.Anyline.Util.VersionUtil.cs -->
<!-- File: IO.Anyline2.ROIToALRectMapper.cs -->
<!-- File: IO.Anyline.Camera.CameraConfig.cs -->
<!-- CameraConfig.setAutoExposureRegionEnabled(boolean) -->
<!-- CameraConfig.setAutoFocusInterval(int) -->
<!-- CameraConfig.setFallbackLensFacings(java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFallbackLensFacings' and count(parameter)=1 and parameter[1][@type='java.util.EnumSet&lt;io.anyline.camera.CameraFeatures.LensFacing&gt;']]/parameter[1]" name="managedName">fallbackLensFacings</attr>
<!-- CameraConfig.setFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">focalLength</attr>
<!-- CameraConfig.setFocusMode(io.anyline.camera.CameraFeatures.FocusMode) -->
<!-- CameraConfig.setFocusOnTouchEnabled(boolean) -->
<!-- CameraConfig.setFocusRegionEnabled(boolean) -->
<!-- CameraConfig.setLensFacing(io.anyline.camera.CameraFeatures.LensFacing) -->
<!-- CameraConfig.setMaxFocalLength(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setMaxFocalLength' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxFocalLength</attr>
<!-- CameraConfig.setMaxZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setMaxZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">maxZoomRatio</attr>
<!-- CameraConfig.setPictureSize(io.anyline.camera.CameraSize) -->
<!-- CameraConfig.setPreviewSize(io.anyline.camera.CameraSize) -->
<!-- CameraConfig.setSceneMode(io.anyline.camera.CameraFeatures.SceneMode) -->
<!-- CameraConfig.setUpdateRegionsOnAutoFocusEnabled(boolean) -->
<!-- CameraConfig.setVideoStabilizationEnabled(boolean) -->
<!-- CameraConfig.setZoomGestureEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setZoomGestureEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">zoomGestureEnabled</attr>
<!-- CameraConfig.setZoomRatio(double) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setZoomRatio' and count(parameter)=1 and parameter[1][@type='double']]/parameter[1]" name="managedName">zoomRatio</attr>
<!-- CameraConfig.setFallbackLensFacings(io.anyline.camera.CameraFeatures.LensFacing...) -->
<attr path="/api/package[@name='io.anyline.camera']/class[@name='CameraConfig']/method[@name='setFallbackLensFacings' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraFeatures.LensFacing...']]/parameter[1]" name="managedName">fallbackLensFacings</attr>
<!-- CameraConfig.setHighResolutionPictureSize(io.anyline.camera.CameraSize) -->
<!-- CameraConfig.updateScale(int, int) -->
<!-- File: IO.Anyline.Nfc.Reader.IProgressListenerInterface.cs -->
<!-- ProgressListenerInterface.updateProgress(int) -->
<!-- File: IO.Anyline.Opencv.Core.RotatedRect.cs -->
<!-- RotatedRect.RotatedRect(double[]) -->
<!-- RotatedRect.RotatedRect(io.anyline.opencv.core.Point, io.anyline.opencv.core.Size, double) -->
<!-- RotatedRect.points(io.anyline.opencv.core.Point[]) -->
<!-- RotatedRect.set(double[]) -->
<!-- File: IO.Anyline2.View.AnylineCutoutBase.cs -->
<!-- AnylineCutoutBase.AnylineCutoutBase(io.anyline2.view.AnylineFeedbackView, io.anyline2.viewplugin.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineCutoutBase']/constructor[@name='AnylineCutoutBase' and count(parameter)=2 and parameter[1][@type='io.anyline2.view.AnylineFeedbackView'] and parameter[2][@type='io.anyline2.viewplugin.CutoutConfig']]/parameter[1]" name="managedName">anylineFeedbackView</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='AnylineCutoutBase']/constructor[@name='AnylineCutoutBase' and count(parameter)=2 and parameter[1][@type='io.anyline2.view.AnylineFeedbackView'] and parameter[2][@type='io.anyline2.viewplugin.CutoutConfig']]/parameter[2]" name="managedName">cutoutConfig</attr>
<!-- AnylineCutoutBase.draw(android.graphics.Canvas) -->
<!-- File: Com.Gemalto.Jp2.BuildConfig.cs -->
<!-- File: IO.Anyline2.IManagesUUID.cs -->
<!-- ManagesUUID.Factory.setInstance(io.anyline2.ManagesUUID) -->
<!-- File: IO.Anyline.Nfc.Converter.ASN1Converter.cs -->
<!-- ASN1Converter.translateAsn1Oid(java.lang.String) -->
<!-- File: IO.Anyline.Products.ProductContext.cs -->
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product']]/parameter[3]" name="managedName">product</attr>
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product, io.anyline.Version) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version']]/parameter[3]" name="managedName">product</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version']]/parameter[4]" name="managedName">assetVersion</attr>
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product, io.anyline.Version, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version'] and parameter[5][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version'] and parameter[5][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version'] and parameter[5][@type='java.lang.String']]/parameter[3]" name="managedName">product</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version'] and parameter[5][@type='java.lang.String']]/parameter[4]" name="managedName">assetVersion</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='io.anyline.Version'] and parameter[5][@type='java.lang.String']]/parameter[5]" name="managedName">stage</attr>
<!-- ProductContext.ProductContext(android.content.Context, java.lang.String, io.anyline.products.Product, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">product</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='io.anyline.products.Product'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">assetVersion</attr>
<!-- ProductContext.ProductContext(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.products']/class[@name='ProductContext']/constructor[@name='ProductContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- File: IO.Anyline.Opencv.Android.IUtilsProvider.cs -->
<!-- UtilsProvider.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat, boolean) -->
<!-- UtilsProvider.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap) -->
<!-- File: IO.Anyline2.DI.Reporting.INetworkClientProvider.cs -->
<!-- NetworkClientProvider.Factory.Companion.NetworkClientProvider.Factory.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- File: IO.Anyline.Plugin.Result.LicensePlateResult.cs -->
<!-- LicensePlateResult.Area.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='LicensePlateResult.Area']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- LicensePlateResult.Area.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='LicensePlateResult.Area']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- LicensePlateResult.setCountry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='LicensePlateResult']/method[@name='setCountry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">country</attr>
<!-- LicensePlateResult.setPlateText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='LicensePlateResult']/method[@name='setPlateText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">plateText</attr>
<!-- LicensePlateResult.setArea(io.anyline.plugin.result.LicensePlateResult.Area) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='LicensePlateResult']/method[@name='setArea' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.LicensePlateResult.Area']]/parameter[1]" name="managedName">area</attr>
<!-- File: IO.Anyline.Camera.FocusConfig.cs -->
<!-- FocusConfig.Builder.setAutoFocusInterval(int) -->
<!-- FocusConfig.Builder.setDefaultMode(java.lang.String) -->
<!-- FocusConfig.Builder.setEnableAutoExposureAreas(boolean) -->
<!-- FocusConfig.Builder.setEnableFocusAreas(boolean) -->
<!-- FocusConfig.Builder.setEnableFocusOnTouch(boolean) -->
<!-- FocusConfig.Builder.setEnablePhaseAutoFocus(boolean) -->
<!-- FocusConfig.Builder.setUpdateAreasOnAutoFocus(boolean) -->
<!-- File: IO.Anyline.Camera.CameraFeatures1.cs -->
<!-- CameraFeatures1.CameraFeatures1(int, android.hardware.Camera) -->
<!-- File: IO.Anyline.Camera.CameraController.cs -->
<!-- CameraController.CameraOrientation.fromDegrees(int) -->
<!-- CameraController.CameraOrientation.valueOf(java.lang.String) -->
<!-- CameraController.setPreferredCameraConfig(io.anyline.camera.CameraConfig) -->
<!-- CameraController.setZoomRatio(double) -->
<!-- CameraController.removeCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<!-- CameraController.reportCameraError(java.lang.Exception) -->
<!-- CameraController.setCameraConfig(io.anyline.camera.CameraConfig) -->
<!-- CameraController.setCameraOpenListener(io.anyline.camera.CameraOpenListener) -->
<!-- CameraController.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<!-- CameraController.setFlashOn(boolean) -->
<!-- CameraController.setFocalLength(double) -->
<!-- CameraController.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<!-- CameraController.setHighResolutionImageListener(io.anyline.camera.HighResolutionImageListener) -->
<!-- CameraController.setImageListener(io.anyline.camera.ImageListener) -->
<!-- CameraController.setMaxFocalLength(double) -->
<!-- CameraController.setMaxZoomRatio(double) -->
<!-- CameraController.setZoomGestureEnabled(boolean) -->
<!-- CameraController.setupZoomHandler(android.view.View) -->
<!-- CameraController.takeHighResolutionImage(int, int, int, int, int, int) -->
<!-- CameraController.setZoomRatio(double) -->
<!-- CameraController.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<!-- CameraController.setFlashOn(boolean) -->
<!-- CameraController.setFocalLength(double) -->
<!-- CameraController.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<!-- CameraController.setMaxFocalLength(double) -->
<!-- CameraController.setMaxZoomRatio(double) -->
<!-- CameraController.setupZoomHandler(android.view.View) -->
<!-- CameraController.takeHighResolutionImage(int, int, int, int, int, int) -->
<!-- File: IO.Anyline.Nfc.NFCConfig.cs -->
<!-- NFCConfig.NFCConfig(java.lang.String, java.lang.String, java.lang.String) -->
<!-- File: IO.Anyline2.Camera.FaceDetector.cs -->
<!-- FaceDetector.FaceDetectionResultHandler.onFailure(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.camera']/interface[@name='FaceDetector.FaceDetectionResultHandler']/method[@name='onFailure' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">e</attr>
<!-- FaceDetector.FaceDetectionResultHandler.onSuccess(io.anyline2.image.AnylineImage) -->
<attr path="/api/package[@name='io.anyline2.camera']/interface[@name='FaceDetector.FaceDetectionResultHandler']/method[@name='onSuccess' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.AnylineImage']]/parameter[1]" name="managedName">faceImage</attr>
<!-- FaceDetector.FaceDetector(io.anyline2.camera.FaceDetector.FaceDetectionResultHandler) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='FaceDetector']/constructor[@name='FaceDetector' and count(parameter)=1 and parameter[1][@type='io.anyline2.camera.FaceDetector.FaceDetectionResultHandler']]/parameter[1]" name="managedName">faceDetectionResultHandler</attr>
<!-- FaceDetector.startFaceDetection(io.anyline2.image.AnylineImage) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='FaceDetector']/method[@name='startFaceDetection' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.AnylineImage']]/parameter[1]" name="managedName">imageForProcessing</attr>
<!-- File: IO.Anyline2.DI.Assetcontroller.AssetControllerProviderImpl.cs -->
<!-- File: IO.Anyline2.IEvent.cs -->
<!-- Event.eventReceived(T) -->
<attr path="/api/package[@name='io.anyline2']/interface[@name='Event']/method[@name='eventReceived' and count(parameter)=1 and parameter[1][@type='T']]/parameter[1]" name="managedName">data</attr>
<!-- File: IO.Anyline2.Reporting.OkHttpNetworkClient.cs -->
<!-- OkHttpNetworkClient.OkHttpNetworkClient(long, long, boolean) -->
<!-- File: IO.Anyline.Camera.CameraSize.cs -->
<!-- CameraSize.CameraSize(android.hardware.Camera.Size) -->
<!-- CameraSize.CameraSize(android.util.Size) -->
<!-- CameraSize.CameraSize(int, int) -->
<!-- File: IO.Anyline.Plugin.Result.BodyPart.cs -->
<!-- BodyPart.setAuditInformation(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setAuditInformation' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">auditInformation</attr>
<!-- BodyPart.setCardRevisionDate(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setCardRevisionDate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">cardRevisionDate</attr>
<!-- BodyPart.setCity(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setCity' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">city</attr>
<!-- BodyPart.setComplianceType(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setComplianceType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">complianceType</attr>
<!-- BodyPart.setCountryID(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setCountryID' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">countryID</attr>
<!-- BodyPart.setCustomerIDNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setCustomerIDNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">customerIDNumber</attr>
<!-- BodyPart.setDateOfBirth(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- BodyPart.setDateOfExpiry(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- BodyPart.setDateOfIssue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- BodyPart.setDocumentDiscriminator(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setDocumentDiscriminator' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">documentDiscriminator</attr>
<!-- BodyPart.setDrivingPrivilege(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setDrivingPrivilege' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">drivingPrivilege</attr>
<!-- BodyPart.setEndorsementCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setEndorsementCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">endorsementCode</attr>
<!-- BodyPart.setEyes(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setEyes' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">eyes</attr>
<!-- BodyPart.setFirstName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">firstName</attr>
<!-- BodyPart.setFirstNameTruncated(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setFirstNameTruncated' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">firstNameTruncated</attr>
<!-- BodyPart.setHair(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setHair' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">hair</attr>
<!-- BodyPart.setHeight(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setHeight' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">height</attr>
<!-- BodyPart.setInventoryControlNumber(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setInventoryControlNumber' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">inventoryControlNumber</attr>
<!-- BodyPart.setJurisdictionCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setJurisdictionCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">jurisdictionCode</attr>
<!-- BodyPart.setLastName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">lastName</attr>
<!-- BodyPart.setLastNameTruncated(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setLastNameTruncated' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">lastNameTruncated</attr>
<!-- BodyPart.setLicenseClass(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setLicenseClass' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">licenseClass</attr>
<!-- BodyPart.setMiddleName(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setMiddleName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">middleName</attr>
<!-- BodyPart.setMiddleNameTruncated(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setMiddleNameTruncated' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">middleNameTruncated</attr>
<!-- BodyPart.setPostalCode(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setPostalCode' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">postalCode</attr>
<!-- BodyPart.setSex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">sex</attr>
<!-- BodyPart.setStreet(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='BodyPart']/method[@name='setStreet' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">street</attr>
<!-- File: IO.Anyline.Opencv.Core.MatProviderFactory.cs -->
<!-- File: IO.Anyline.Opencv.Core.MatOfInt.cs -->
<!-- MatOfInt.MatOfInt(int...) -->
<!-- MatOfInt.MatOfInt(io.anyline.opencv.core.Mat) -->
<!-- MatOfInt.MatOfInt(long) -->
<!-- MatOfInt.alloc(int) -->
<!-- MatOfInt.fromArray(int...) -->
<!-- MatOfInt.fromList(java.util.List&lt;java.lang.Integer&gt;) -->
<!-- MatOfInt.fromNativeAddr(long) -->
<!-- File: IO.Anyline.Opencv.Core.Algorithm.cs -->
<!-- Algorithm.Algorithm(long) -->
<!-- Algorithm.save(java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Result.UniversalIdResultField.cs -->
<!-- UniversalIdResultField.setDateValue(io.anyline.plugin.result.DateValue) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='UniversalIdResultField']/method[@name='setDateValue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.DateValue']]/parameter[1]" name="managedName">dateValue</attr>
<!-- UniversalIdResultField.setTextValues(io.anyline.plugin.result.TextValues) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='UniversalIdResultField']/method[@name='setTextValues' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.TextValues']]/parameter[1]" name="managedName">textValues</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfFloat.cs -->
<!-- MatOfFloat.MatOfFloat(float...) -->
<!-- MatOfFloat.MatOfFloat(io.anyline.opencv.core.Mat) -->
<!-- MatOfFloat.MatOfFloat(long) -->
<!-- MatOfFloat.alloc(int) -->
<!-- MatOfFloat.fromArray(float...) -->
<!-- MatOfFloat.fromList(java.util.List&lt;java.lang.Float&gt;) -->
<!-- MatOfFloat.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.View.CutoutRect.cs -->
<!-- CutoutRect.CutoutRect(android.content.Context, io.anyline2.viewplugin.CutoutConfig) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/constructor[@name='CutoutRect' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline2.viewplugin.CutoutConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/constructor[@name='CutoutRect' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline2.viewplugin.CutoutConfig']]/parameter[2]" name="managedName">config</attr>
<!-- CutoutRect.calcCutOutAndImageCropBounds(int, int, int, int, float) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[1]" name="managedName">frameWidth</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[2]" name="managedName">frameHeight</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[3]" name="managedName">viewWidth</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[4]" name="managedName">viewHeight</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='CutoutRect']/method[@name='calcCutOutAndImageCropBounds' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]/parameter[5]" name="managedName">scale</attr>
<!-- File: IO.Anyline2.Legacy.Util.VersionUtil.cs -->
<!-- File: IO.Anyline.Plugin.Config.ContainerConfig.cs -->
<!-- ContainerConfig.ScanMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='ContainerConfig.ScanMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- ContainerConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='ContainerConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- ContainerConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='ContainerConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- ContainerConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='ContainerConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- ContainerConfig.setScanMode(io.anyline.plugin.config.ContainerConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='ContainerConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.ContainerConfig.ScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- File: IO.Anyline.Nfc.Tools.Crypto.cs -->
<!-- Crypto.calculate3DESEncryptionKey(byte[]) -->
<!-- Crypto.calculate3DESMac(byte[], byte[], boolean) -->
<!-- Crypto.calculateAESEncryptionKey(byte[]) -->
<!-- Crypto.calculateAESMac(byte[], byte[], boolean) -->
<!-- Crypto.calculateMacKey(byte[]) -->
<!-- Crypto.calculateSeed(java.lang.String, java.lang.String, java.lang.String) -->
<!-- Crypto.decrypt3DES(byte[], byte[]) -->
<!-- Crypto.decryptAES(byte[], byte[]) -->
<!-- Crypto.decryptUsingDES(byte[], byte[]) -->
<!-- Crypto.encrypt3DES(byte[], byte[]) -->
<!-- Crypto.encryptAES(byte[], byte[]) -->
<!-- Crypto.encryptUsingDES(byte[], byte[]) -->
<!-- Crypto.generateRandomBytes(int) -->
<!-- Crypto.padData(byte[], int) -->
<!-- Crypto.sha1(byte[]) -->
<!-- File: IO.Anyline2.Model.ALRect.cs -->
<!-- ALRect.ALRect(android.graphics.RectF) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=1 and parameter[1][@type='android.graphics.RectF']]/parameter[1]" name="managedName">rect</attr>
<!-- ALRect.ALRect(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">y</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">w</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">h</attr>
<!-- ALRect.ALRect(io.anyline2.model.ALRect) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALRect']]/parameter[1]" name="managedName">rect</attr>
<!-- ALRect.ALRect(io.anyline2.model.ALSquare) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALSquare']]/parameter[1]" name="managedName">alSquare</attr>
<!-- ALRect.ALRect(org.json.JSONArray) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=1 and parameter[1][@type='org.json.JSONArray']]/parameter[1]" name="managedName">json</attr>
<!-- ALRect.ALRect(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALRect']/constructor[@name='ALRect' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline.Nfc.NfcDetector.cs -->
<!-- NfcDetector.NfcDetector(android.content.Context, io.anyline.nfc.NfcDetectionHandler) -->
<!-- NfcDetector.startNfcDetection(java.lang.String, java.lang.String, java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Result.JapaneseLandingPermissionResultField.cs -->
<!-- JapaneseLandingPermissionResultField.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JapaneseLandingPermissionResultField']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- JapaneseLandingPermissionResultField.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='JapaneseLandingPermissionResultField']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline.Plugin.Result.Latin.cs -->
<!-- Latin.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Latin']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- Latin.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='Latin']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline.Plugin.Config.LayoutDrivingLicense.cs -->
<!-- LayoutDrivingLicense.setAdditionalInformation(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setAdditionalInformation' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">additionalInformation</attr>
<!-- LayoutDrivingLicense.setAdditionalInformation1(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setAdditionalInformation1' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">additionalInformation1</attr>
<!-- LayoutDrivingLicense.setAddress(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setAddress' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">address</attr>
<!-- LayoutDrivingLicense.setAudit(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setAudit' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">audit</attr>
<!-- LayoutDrivingLicense.setAuthority(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setAuthority' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">authority</attr>
<!-- LayoutDrivingLicense.setCardNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setCardNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">cardNumber</attr>
<!-- LayoutDrivingLicense.setCategories(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setCategories' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">categories</attr>
<!-- LayoutDrivingLicense.setConditions(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setConditions' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">conditions</attr>
<!-- LayoutDrivingLicense.setDateOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDateOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfBirth</attr>
<!-- LayoutDrivingLicense.setDateOfExpiry(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- LayoutDrivingLicense.setDateOfIssue(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- LayoutDrivingLicense.setDocumentDiscriminator(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDocumentDiscriminator' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">documentDiscriminator</attr>
<!-- LayoutDrivingLicense.setDocumentNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDocumentNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">documentNumber</attr>
<!-- LayoutDrivingLicense.setDuplicate(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDuplicate' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">duplicate</attr>
<!-- LayoutDrivingLicense.setDuration(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setDuration' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">duration</attr>
<!-- LayoutDrivingLicense.setEndorsements(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setEndorsements' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">endorsements</attr>
<!-- LayoutDrivingLicense.setEyes(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setEyes' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">eyes</attr>
<!-- LayoutDrivingLicense.setFirstIssued(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setFirstIssued' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">firstIssued</attr>
<!-- LayoutDrivingLicense.setFirstName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setFirstName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">firstName</attr>
<!-- LayoutDrivingLicense.setFullName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setFullName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">fullName</attr>
<!-- LayoutDrivingLicense.setGivenNames(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setGivenNames' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">givenNames</attr>
<!-- LayoutDrivingLicense.setHair(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setHair' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">hair</attr>
<!-- LayoutDrivingLicense.setHeight(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setHeight' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">height</attr>
<!-- LayoutDrivingLicense.setLastName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setLastName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">lastName</attr>
<!-- LayoutDrivingLicense.setLicenceNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setLicenceNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">licenceNumber</attr>
<!-- LayoutDrivingLicense.setLicenseClass(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setLicenseClass' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">licenseClass</attr>
<!-- LayoutDrivingLicense.setLicenseNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setLicenseNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">licenseNumber</attr>
<!-- LayoutDrivingLicense.setName(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setName' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">name</attr>
<!-- LayoutDrivingLicense.setOffice(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setOffice' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">office</attr>
<!-- LayoutDrivingLicense.setParish(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setParish' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">parish</attr>
<!-- LayoutDrivingLicense.setPersonalNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setPersonalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">personalNumber</attr>
<!-- LayoutDrivingLicense.setPlaceOfBirth(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setPlaceOfBirth' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">placeOfBirth</attr>
<!-- LayoutDrivingLicense.setPreviousType(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setPreviousType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">previousType</attr>
<!-- LayoutDrivingLicense.setRestrictions(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setRestrictions' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">restrictions</attr>
<!-- LayoutDrivingLicense.setRevoked(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setRevoked' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">revoked</attr>
<!-- LayoutDrivingLicense.setSex(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setSex' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">sex</attr>
<!-- LayoutDrivingLicense.setSurname(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setSurname' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">surname</attr>
<!-- LayoutDrivingLicense.setType(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setType' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">type</attr>
<!-- LayoutDrivingLicense.setVersion(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setVersion' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">version</attr>
<!-- LayoutDrivingLicense.setVerticalNumber(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setVerticalNumber' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">verticalNumber</attr>
<!-- LayoutDrivingLicense.setWeight(io.anyline.plugin.config.UniversalIdField) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LayoutDrivingLicense']/method[@name='setWeight' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdField']]/parameter[1]" name="managedName">weight</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfByte.cs -->
<!-- MatOfByte.MatOfByte(byte...) -->
<!-- MatOfByte.MatOfByte(io.anyline.opencv.core.Mat) -->
<!-- MatOfByte.MatOfByte(long) -->
<!-- MatOfByte.alloc(int) -->
<!-- MatOfByte.fromArray(byte...) -->
<!-- MatOfByte.fromList(java.util.List&lt;java.lang.Byte&gt;) -->
<!-- MatOfByte.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.Reporting.NetworkClientInterface.cs -->
<!-- NetworkClientInterface.NetworkClientInterface(long, long, boolean) -->
<!-- File: IO.Anyline.Plugin.Config.JapaneseLandingPermissionConfigFieldOption.cs -->
<!-- JapaneseLandingPermissionConfigFieldOption.ScanOption.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfigFieldOption.ScanOption']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- JapaneseLandingPermissionConfigFieldOption.ScanOption.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfigFieldOption.ScanOption']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- JapaneseLandingPermissionConfigFieldOption.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfigFieldOption']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- JapaneseLandingPermissionConfigFieldOption.setScanOption(io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption.ScanOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfigFieldOption']/method[@name='setScanOption' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption.ScanOption']]/parameter[1]" name="managedName">scanOption</attr>
<!-- File: Com.Gemalto.Jp2.JP2Decoder.cs -->
<!-- JP2Decoder.JP2Decoder(byte[]) -->
<!-- JP2Decoder.JP2Decoder(java.io.InputStream) -->
<!-- JP2Decoder.JP2Decoder(java.lang.String) -->
<!-- JP2Decoder.isJPEG2000(byte[]) -->
<!-- JP2Decoder.setLayersToDecode(int) -->
<!-- JP2Decoder.setSkipResolutions(int) -->
<!-- File: IO.Anyline.Plugin.Result.VinResult.cs -->
<!-- VinResult.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VinResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline2.Legacy.Trainer.IAssetDelegate.cs -->
<!-- IAssetDelegate.onAssetDownloadProgress(java.lang.String, float) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetDownloadProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[1]" name="managedName">assetName</attr>
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetDownloadProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[2]" name="managedName">progress</attr>
<!-- IAssetDelegate.onAssetUpdateAvailable(boolean) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetUpdateAvailable' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">updateAvailable</attr>
<!-- IAssetDelegate.onAssetUpdateError(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.trainer']/interface[@name='IAssetDelegate']/method[@name='onAssetUpdateError' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">error</attr>
<!-- File: IO.Anyline.Opencv.Core.Scalar.cs -->
<!-- Scalar.Scalar(double) -->
<!-- Scalar.Scalar(double, double) -->
<!-- Scalar.Scalar(double, double, double) -->
<!-- Scalar.Scalar(double, double, double, double) -->
<!-- Scalar.Scalar(double[]) -->
<!-- Scalar.all(double) -->
<!-- Scalar.mul(io.anyline.opencv.core.Scalar) -->
<!-- Scalar.mul(io.anyline.opencv.core.Scalar, double) -->
<!-- Scalar.set(double[]) -->
<!-- File: IO.Anyline2.Image.IFileStorage.cs -->
<!-- FileStorage.saveBitmap(android.content.Context, android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='FileStorage']/method[@name='saveBitmap' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.image']/interface[@name='FileStorage']/method[@name='saveBitmap' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.graphics.Bitmap']]/parameter[2]" name="managedName">bitmap</attr>
<!-- File: IO.Anyline.Opencv.Core.MatOfKeyPoint.cs -->
<!-- MatOfKeyPoint.MatOfKeyPoint(io.anyline.opencv.core.KeyPoint...) -->
<!-- MatOfKeyPoint.MatOfKeyPoint(io.anyline.opencv.core.Mat) -->
<!-- MatOfKeyPoint.MatOfKeyPoint(long) -->
<!-- MatOfKeyPoint.alloc(int) -->
<!-- MatOfKeyPoint.fromArray(io.anyline.opencv.core.KeyPoint...) -->
<!-- MatOfKeyPoint.fromList(java.util.List&lt;io.anyline.opencv.core.KeyPoint&gt;) -->
<!-- MatOfKeyPoint.fromNativeAddr(long) -->
<!-- File: IO.Anyline2.Camera.NativeBarcodeFormatToAnylineBarcodeFormatMapper.cs -->
<!-- NativeBarcodeFormatToAnylineBarcodeFormatMapper.setInstance(io.anyline2.Mapper&lt;java.lang.Integer, io.anyline.plugin.barcode.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline2.camera']/class[@name='NativeBarcodeFormatToAnylineBarcodeFormatMapper']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.Mapper&lt;java.lang.Integer, io.anyline.plugin.barcode.BarcodeFormat&gt;']]/parameter[1]" name="managedName">instance</attr>
<!-- File: IO.Anyline.Plugin.Config.CommercialTireIdConfig.cs -->
<!-- CommercialTireIdConfig.UpsideDownMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='CommercialTireIdConfig.UpsideDownMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- CommercialTireIdConfig.UpsideDownMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='CommercialTireIdConfig.UpsideDownMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CommercialTireIdConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='CommercialTireIdConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- CommercialTireIdConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='CommercialTireIdConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- CommercialTireIdConfig.setUpsideDownMode(io.anyline.plugin.config.CommercialTireIdConfig.UpsideDownMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='CommercialTireIdConfig']/method[@name='setUpsideDownMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.CommercialTireIdConfig.UpsideDownMode']]/parameter[1]" name="managedName">upsideDownMode</attr>
<!-- File: IO.Anyline.Nfc.Parser.DG2Parser.cs -->
<!-- DG2Parser.DG2Parser(byte[]) -->
<!-- File: IO.Anyline.Plugin.Result.TextValues.cs -->
<!-- TextValues.setArabic(io.anyline.plugin.result.Arabic) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TextValues']/method[@name='setArabic' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.Arabic']]/parameter[1]" name="managedName">arabic</attr>
<!-- TextValues.setCyrillic(io.anyline.plugin.result.Cyrillic) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TextValues']/method[@name='setCyrillic' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.Cyrillic']]/parameter[1]" name="managedName">cyrillic</attr>
<!-- TextValues.setLatin(io.anyline.plugin.result.Latin) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='TextValues']/method[@name='setLatin' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.Latin']]/parameter[1]" name="managedName">latin</attr>
<!-- File: IO.Anyline.Camera.IFlashControl.cs -->
<!-- FlashControl.Mode.valueOf(java.lang.String) -->
<!-- FlashControl.setAutoModeEnabled(boolean) -->
<!-- FlashControl.setCameraController(io.anyline.camera.CameraController) -->
<!-- FlashControl.setFlashOnIfAuto(boolean) -->
<!-- FlashControl.setMode(io.anyline.camera.FlashControl.Mode) -->
<!-- File: IO.Anyline.Plugin.Config.BarcodeConfig.cs -->
<!-- BarcodeConfig.setBarcodeFormats(java.util.List&lt;io.anyline.plugin.config.BarcodeFormat&gt;) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='BarcodeConfig']/method[@name='setBarcodeFormats' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;io.anyline.plugin.config.BarcodeFormat&gt;']]/parameter[1]" name="managedName">barcodeFormats</attr>
<!-- BarcodeConfig.setConsecutiveEqualResults(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='BarcodeConfig']/method[@name='setConsecutiveEqualResults' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">consecutiveEqualResults</attr>
<!-- BarcodeConfig.setMultiBarcode(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='BarcodeConfig']/method[@name='setMultiBarcode' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">multiBarcode</attr>
<!-- BarcodeConfig.setParseAAMVA(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='BarcodeConfig']/method[@name='setParseAAMVA' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">parseAAMVA</attr>
<!-- File: IO.Anyline.Camera.IHighResolutionImageProvider.cs -->
<!-- HighResolutionImageProvider.setHighResolutionImageListener(io.anyline.camera.HighResolutionImageListener) -->
<!-- HighResolutionImageProvider.takeHighResolutionImage(int, int, int, int, int, int) -->
<!-- File: IO.Anyline.Nfc.NFC.DataGroup2.cs -->
<!-- DataGroup2.DataGroup2(android.graphics.Bitmap) -->
<!-- DataGroup2.setFaceImage(android.graphics.Bitmap) -->
<!-- File: IO.Anyline.Opencv.Core.KeyPoint.cs -->
<!-- KeyPoint.KeyPoint(float, float, float) -->
<!-- KeyPoint.KeyPoint(float, float, float, float) -->
<!-- KeyPoint.KeyPoint(float, float, float, float, float) -->
<!-- KeyPoint.KeyPoint(float, float, float, float, float, int) -->
<!-- KeyPoint.KeyPoint(float, float, float, float, float, int, int) -->
<!-- File: IO.Anyline.Nfc.INfcDetectionHandler.cs -->
<!-- NfcDetectionHandler.onDg1Success(io.anyline.nfc.NFC.DataGroup1) -->
<!-- NfcDetectionHandler.onDg2Success(android.graphics.Bitmap) -->
<!-- NfcDetectionHandler.onNfcFailure(java.lang.String) -->
<!-- NfcDetectionHandler.onNfcSuccess(io.anyline.nfc.NFC.NFCResult) -->
<!-- NfcDetectionHandler.onSODSuccess(io.anyline.nfc.NFC.SOD) -->
<!-- File: IO.Anyline2.Legacy.Products.Product.cs -->
<!-- Product.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='Product']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">product</attr>
<!-- Product.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/class[@name='Product']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.Models.BitmapCreatorImpl.cs -->
<!-- BitmapCreatorImpl.createBitmap(int, int, android.graphics.Bitmap.Config) -->
<!-- File: IO.Anyline.Nfc.Reader.AesReader.cs -->
<!-- AesReader.calculateEncryptionKey(byte[]) -->
<!-- AesReader.calculateMac(byte[], byte[]) -->
<!-- AesReader.calculateMac(byte[], byte[], boolean) -->
<!-- AesReader.calculateSequenceCounter(byte[]) -->
<!-- AesReader.decrypt(byte[], byte[]) -->
<!-- AesReader.encrypt(byte[], byte[]) -->
<!-- AesReader.padData(byte[]) -->
<!-- File: IO.Anyline.Util.ImageUtil.cs -->
<!-- ImageUtil.getRotationCompensation(android.content.Context, int, boolean) -->
<!-- File: IO.Anyline.Opencv.Core.MatOfFloat6.cs -->
<!-- MatOfFloat6.MatOfFloat6(float...) -->
<!-- MatOfFloat6.MatOfFloat6(io.anyline.opencv.core.Mat) -->
<!-- MatOfFloat6.MatOfFloat6(long) -->
<!-- MatOfFloat6.alloc(int) -->
<!-- MatOfFloat6.fromArray(float...) -->
<!-- MatOfFloat6.fromList(java.util.List&lt;java.lang.Float&gt;) -->
<!-- MatOfFloat6.fromNativeAddr(long) -->
<!-- File: Com.Gemalto.Jp2.JP2Encoder.cs -->
<!-- JP2Encoder.JP2Encoder(android.graphics.Bitmap) -->
<!-- JP2Encoder.encode(java.io.OutputStream) -->
<!-- JP2Encoder.encode(java.lang.String) -->
<!-- JP2Encoder.setCompressionRatio(float...) -->
<!-- JP2Encoder.setNumResolutions(int) -->
<!-- JP2Encoder.setOutputFormat(int) -->
<!-- JP2Encoder.setVisualQuality(float...) -->
<!-- File: IO.Anyline.Opencv.Core.TermCriteria.cs -->
<!-- TermCriteria.TermCriteria(double[]) -->
<!-- TermCriteria.TermCriteria(int, int, double) -->
<!-- TermCriteria.set(double[]) -->
<!-- File: IO.Anyline2.View.BrightnessHelper.cs -->
<!-- BrightnessHelper.BrightnessFeedback.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='BrightnessHelper.BrightnessFeedback']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- BrightnessHelper.setLevelsForAutoFlash(int, int, int, int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">lowBrightness</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[2]" name="managedName">highBrightness</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[3]" name="managedName">lowAmbientLight</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='BrightnessHelper']/method[@name='setLevelsForAutoFlash' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[4]" name="managedName">highAmbientLight</attr>
<!-- File: IO.Anyline.Camera.CameraController1.cs -->
<!-- CameraController1.setZoomRatio(double) -->
<!-- CameraController1.setCameraOrientation(io.anyline.camera.CameraController.CameraOrientation) -->
<!-- CameraController1.setCustomZoomLevel(int) -->
<!-- CameraController1.setFlashOn(boolean) -->
<!-- CameraController1.setFocalLength(double) -->
<!-- CameraController1.setFocusRegionToCutout(android.content.Context, android.graphics.RectF, float, float) -->
<!-- CameraController1.setMaxFocalLength(double) -->
<!-- CameraController1.setMaxZoomRatio(double) -->
<!-- CameraController1.setupZoomHandler(android.view.View) -->
<!-- CameraController1.takeHighResolutionImage(int, int, int, int, int, int) -->
<!-- File: IO.Anyline.Nfc.Reader.AbstractReader.cs -->
<!-- AbstractReader.calculateEncryptionKey(byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[], boolean) -->
<!-- AbstractReader.calculateSequenceCounter(byte[]) -->
<!-- AbstractReader.decrypt(byte[], byte[]) -->
<!-- AbstractReader.encrypt(byte[], byte[]) -->
<!-- AbstractReader.initSession(int) -->
<!-- AbstractReader.padData(byte[]) -->
<!-- AbstractReader.readFile(byte[]) -->
<!-- AbstractReader.setApduWithLe(boolean) -->
<!-- AbstractReader.setBacInfo(io.anyline.nfc.Reader.BacInfo) -->
<!-- AbstractReader.setMaxBlockSize(int) -->
<!-- AbstractReader.setMutualAuthLe(byte) -->
<!-- AbstractReader.setProgressListener(java.lang.ref.WeakReference&lt;java.lang.Object&gt;) -->
<!-- AbstractReader.calculateEncryptionKey(byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[]) -->
<!-- AbstractReader.calculateMac(byte[], byte[], boolean) -->
<!-- AbstractReader.calculateSequenceCounter(byte[]) -->
<!-- AbstractReader.decrypt(byte[], byte[]) -->
<!-- AbstractReader.encrypt(byte[], byte[]) -->
<!-- AbstractReader.padData(byte[]) -->
<!-- File: IO.Anyline.Plugin.Result.VehicleRegistrationCertificateResultField.cs -->
<!-- VehicleRegistrationCertificateResultField.setConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VehicleRegistrationCertificateResultField']/method[@name='setConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">confidence</attr>
<!-- VehicleRegistrationCertificateResultField.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='VehicleRegistrationCertificateResultField']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: AT.Nineyards.Anyline.BuildConfig.cs -->
<!-- File: IO.Anyline.Opencv.Core.Point3.cs -->
<!-- Point3.Point3(double, double, double) -->
<!-- Point3.Point3(double[]) -->
<!-- Point3.Point3(io.anyline.opencv.core.Point) -->
<!-- Point3.cross(io.anyline.opencv.core.Point3) -->
<!-- Point3.dot(io.anyline.opencv.core.Point3) -->
<!-- Point3.set(double[]) -->
<!-- File: IO.Anyline2.TrainerUtilAdapter.cs -->
<!-- TrainerUtilAdapter.setInstance(io.anyline2.TrainerUtilAdapter) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='TrainerUtilAdapter']/method[@name='setInstance' and count(parameter)=1 and parameter[1][@type='io.anyline2.TrainerUtilAdapter']]/parameter[1]" name="managedName">instance</attr>
<!-- TrainerUtilAdapter.reportCorrectedResult(java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline2']/class[@name='TrainerUtilAdapter']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[1]" name="managedName">trainerContext</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='TrainerUtilAdapter']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[2]" name="managedName">blobKey</attr>
<attr path="/api/package[@name='io.anyline2']/class[@name='TrainerUtilAdapter']/method[@name='reportCorrectedResult' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]/parameter[3]" name="managedName">correctedResult</attr>
<!-- File: IO.Anyline.Plugin.Config.VehicleRegistrationCertificateConfig.cs -->
<!-- VehicleRegistrationCertificateConfig.setVehicleRegistrationCertificate(io.anyline.plugin.config.LayoutVehicleRegistrationCertificate) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VehicleRegistrationCertificateConfig']/method[@name='setVehicleRegistrationCertificate' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LayoutVehicleRegistrationCertificate']]/parameter[1]" name="managedName">vehicleRegistrationCertificate</attr>
<!-- File: IO.Anyline2.Reporting.NetworkRequest.cs -->
<!-- NetworkRequest.BearerAuthentication.Companion.NetworkRequest.BearerAuthentication.Companion(kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- NetworkRequest.BearerAuthentication.NetworkRequest.BearerAuthentication(java.lang.String, java.lang.String) -->
<!-- NetworkRequest.BearerAuthentication.copy(java.lang.String, java.lang.String) -->
<!-- NetworkRequest.Get.NetworkRequest.Get(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;, java.lang.String) -->
<!-- NetworkRequest.Get.NetworkRequest.Get(java.lang.String, java.util.Map, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- NetworkRequest.Post.NetworkRequest.Post(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;, java.lang.String) -->
<!-- NetworkRequest.Post.NetworkRequest.Post(java.lang.String, java.util.Map, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- NetworkRequest.NetworkRequest(java.lang.String, java.lang.String, java.util.Map, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- NetworkRequest.NetworkRequest(java.lang.String, java.lang.String, java.util.Map, java.lang.String, kotlin.jvm.internal.DefaultConstructorMarker) -->
<!-- NetworkRequest.setHeaders(java.util.Map&lt;java.lang.String, java.lang.String&gt;) -->
<!-- NetworkRequest.setMethod(java.lang.String) -->
<!-- NetworkRequest.setPayload(java.lang.String) -->
<!-- NetworkRequest.setUrl(java.lang.String) -->
<!-- NetworkRequest.setBearerAuthentication(io.anyline2.reporting.NetworkRequest.BearerAuthentication) -->
<!-- File: IO.Anyline.IImageProvider.cs -->
<!-- File: IO.Anyline.Opencv.Imgproc.LineSegmentDetector.cs -->
<!-- LineSegmentDetector.LineSegmentDetector(long) -->
<!-- LineSegmentDetector.compareSegments(io.anyline.opencv.core.Size, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.compareSegments(io.anyline.opencv.core.Size, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.detect(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- LineSegmentDetector.drawSegments(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
<!-- File: IO.Anyline.Plugin.Config.VinConfig.cs -->
<!-- VinConfig.setCharWhitelist(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VinConfig']/method[@name='setCharWhitelist' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">charWhitelist</attr>
<!-- VinConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='VinConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- File: IO.Anyline.DI.FileOutputStreamProviderFactory.cs -->
<!-- File: IO.Anyline2.View.FlashView.cs -->
<!-- FlashView.FlashView(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- FlashView.FlashView(android.content.Context, android.util.AttributeSet) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet']]/parameter[2]" name="managedName">attrs</attr>
<!-- FlashView.FlashView(android.content.Context, android.util.AttributeSet, int) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[2]" name="managedName">attrs</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.util.AttributeSet'] and parameter[3][@type='int']]/parameter[3]" name="managedName">defStyleAttr</attr>
<!-- FlashView.FlashView(android.content.Context, io.anyline2.view.FlashConfig) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline2.view.FlashConfig']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/constructor[@name='FlashView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='io.anyline2.view.FlashConfig']]/parameter[2]" name="managedName">config</attr>
<!-- FlashView.setConfig(io.anyline2.view.FlashConfig) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/method[@name='setConfig' and count(parameter)=1 and parameter[1][@type='io.anyline2.view.FlashConfig']]/parameter[1]" name="managedName">config</attr>
<!-- FlashView.setAutoModeEnabled(boolean) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/method[@name='setAutoModeEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">isEnabled</attr>
<!-- FlashView.setCameraController(io.anyline.camera.CameraController) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/method[@name='setCameraController' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.CameraController']]/parameter[1]" name="managedName">cameraController</attr>
<!-- FlashView.setFlashOnIfAuto(boolean) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/method[@name='setFlashOnIfAuto' and count(parameter)=1 and parameter[1][@type='boolean']]/parameter[1]" name="managedName">setFlashOn</attr>
<!-- FlashView.setMode(io.anyline.camera.FlashControl.Mode) -->
<attr path="/api/package[@name='io.anyline2.view']/class[@name='FlashView']/method[@name='setMode' and count(parameter)=1 and parameter[1][@type='io.anyline.camera.FlashControl.Mode']]/parameter[1]" name="managedName">mode</attr>
<!-- File: IO.Anyline2.Image.AnylineImage.cs -->
<!-- AnylineImage.AnylineImage(android.graphics.Bitmap) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=1 and parameter[1][@type='android.graphics.Bitmap']]/parameter[1]" name="managedName">bitmap</attr>
<!-- AnylineImage.AnylineImage(byte[], int, int) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[1]" name="managedName">data</attr>
<attr path="/api/package[@name='io.anyline2.image']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[2]" name="managedName">width</attr>
<attr path="/api/package[@name='io.anyline2.image']/class[@name='AnylineImage']/constructor[@name='AnylineImage' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]/parameter[3]" name="managedName">height</attr>
<!-- AnylineImage.crop(io.anyline.plugin.result.CropRect) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='AnylineImage']/method[@name='crop' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.result.CropRect']]/parameter[1]" name="managedName">cropRect</attr>
<!-- AnylineImage.rotate(int) -->
<attr path="/api/package[@name='io.anyline2.image']/class[@name='AnylineImage']/method[@name='rotate' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]" name="managedName">degrees</attr>
<!-- File: IO.Anyline.Products.Product.cs -->
<!-- Product.fromString(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='Product']/method[@name='fromString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">product</attr>
<!-- Product.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.products']/class[@name='Product']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- File: IO.Anyline.Nfc.NFC.Doc9303Apdu.cs -->
<!-- Doc9303Apdu.buildDO87(byte[]) -->
<!-- Doc9303Apdu.buildDO8E(byte[]) -->
<!-- Doc9303Apdu.buildDO97(int) -->
<!-- File: IO.Anyline2.Model.ALPoint.cs -->
<!-- ALPoint.ALPoint(int, int) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALPoint']/constructor[@name='ALPoint' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[1]" name="managedName">x</attr>
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALPoint']/constructor[@name='ALPoint' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]/parameter[2]" name="managedName">y</attr>
<!-- ALPoint.ALPoint(io.anyline2.model.ALPoint) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALPoint']/constructor[@name='ALPoint' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALPoint']]/parameter[1]" name="managedName">alPoint</attr>
<!-- ALPoint.ALPoint(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.model']/class[@name='ALPoint']/constructor[@name='ALPoint' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">json</attr>
<!-- File: IO.Anyline2.Plugin.ScanPlugin.cs -->
<!-- ScanPlugin.ScanPlugin(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/constructor[@name='ScanPlugin' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonConfig</attr>
<!-- ScanPlugin.ScanPlugin(org.json.JSONObject, io.anyline2.legacy.trainer.AssetContext) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/constructor[@name='ScanPlugin' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='io.anyline2.legacy.trainer.AssetContext']]/parameter[1]" name="managedName">jsonConfig</attr>
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/constructor[@name='ScanPlugin' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='io.anyline2.legacy.trainer.AssetContext']]/parameter[2]" name="managedName">assetContext</attr>
<!-- ScanPlugin.setImageProvider(io.anyline2.image.ImageProvider) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='setImageProvider' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.ImageProvider']]/parameter[1]" name="managedName">imageProvider</attr>
<!-- ScanPlugin.setRegionOfInterest(io.anyline2.model.ALRect) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='setRegionOfInterest' and count(parameter)=1 and parameter[1][@type='io.anyline2.model.ALRect']]/parameter[1]" name="managedName">alRect</attr>
<!-- ScanPlugin.onError(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='onError' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">var</attr>
<!-- ScanPlugin.onInfo(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='onInfo' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">var</attr>
<!-- ScanPlugin.onRunSkipped(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='onRunSkipped' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">var</attr>
<!-- ScanPlugin.onVisualFeedback(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='onVisualFeedback' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">var</attr>
<!-- ScanPlugin.processImage(io.anyline2.image.AnylineImage) -->
<attr path="/api/package[@name='io.anyline2.plugin']/class[@name='ScanPlugin']/method[@name='processImage' and count(parameter)=1 and parameter[1][@type='io.anyline2.image.AnylineImage']]/parameter[1]" name="managedName">anylineImage</attr>
<!-- File: IO.Anyline2.Viewplugin.CutoutConfig.cs -->
<!-- CutoutConfig.AnimationStyle.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig.AnimationStyle']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CutoutConfig.CutoutAlignment.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig.CutoutAlignment']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- CutoutConfig.CutoutConfig(org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig']/constructor[@name='CutoutConfig' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]/parameter[1]" name="managedName">jsonObject</attr>
<!-- CutoutConfig.getAnimationStyle(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig']/method[@name='getAnimationStyle' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">style</attr>
<!-- CutoutConfig.getCornerRadiusInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig']/method[@name='getCornerRadiusInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- CutoutConfig.getCutoutAlignment(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig']/method[@name='getCutoutAlignment' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">alignment</attr>
<!-- CutoutConfig.getCutoutStrokeWidthInPix(android.content.Context) -->
<attr path="/api/package[@name='io.anyline2.viewplugin']/class[@name='CutoutConfig']/method[@name='getCutoutStrokeWidthInPix' and count(parameter)=1 and parameter[1][@type='android.content.Context']]/parameter[1]" name="managedName">context</attr>
<!-- File: IO.Anyline2.Camera.NativeBarcodeDetector.cs -->
<!-- File: IO.Anyline.Camera.NativeBarcodeDetector.cs -->
<!-- NativeBarcodeDetector.setCameraView(io.anyline.camera.CameraView) -->
<!-- File: IO.Anyline.Trainer.ProjectContext.cs -->
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]/parameter[4]" name="managedName">apiKey</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline.Version) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version']]/parameter[5]" name="managedName">assetVersion</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, io.anyline.Version, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version'] and parameter[6][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version'] and parameter[6][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version'] and parameter[6][@type='java.lang.String']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version'] and parameter[6][@type='java.lang.String']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version'] and parameter[6][@type='java.lang.String']]/parameter[5]" name="managedName">assetVersion</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='io.anyline.Version'] and parameter[6][@type='java.lang.String']]/parameter[6]" name="managedName">stage</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[2]" name="managedName">pluginId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[3]" name="managedName">projectId</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[4]" name="managedName">apiKey</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=5 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String']]/parameter[5]" name="managedName">assetVersion</attr>
<!-- ProjectContext.ProjectContext(android.content.Context, org.json.JSONObject) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[1]" name="managedName">context</attr>
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/constructor[@name='ProjectContext' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='org.json.JSONObject']]/parameter[2]" name="managedName">jsonObject</attr>
<!-- ProjectContext.setApiKey(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/method[@name='setApiKey' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">apiKey</attr>
<!-- ProjectContext.setProjectId(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.trainer']/class[@name='ProjectContext']/method[@name='setProjectId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">projectId</attr>
<!-- File: IO.Anyline.Plugin.Result.CommercialTireIdResult.cs -->
<!-- CommercialTireIdResult.setText(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.result']/class[@name='CommercialTireIdResult']/method[@name='setText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
<!-- File: IO.Anyline.Models.BitmapCreatorFactory.cs -->
<!-- File: IO.Anyline2.Legacy.Util.ConstantUtil.cs -->
<!-- File: IO.Anyline.Camera.CameraPermissionHelper.cs -->
<!-- CameraPermissionHelper.CameraPermissionHelper(android.app.Activity) -->
<!-- CameraPermissionHelper.onRequestPermissionsResult(int, java.lang.String[], int[]) -->
<!-- CameraPermissionHelper.showPermissionMessage(java.lang.String) -->
<!-- File: IO.Anyline.Camera.AbstractZoomHandler.cs -->
<!-- AbstractZoomHandler.AbstractZoomHandler(android.view.View, int, io.anyline.camera.CameraController) -->
<!-- AbstractZoomHandler.notifyZoomChanged(int) -->
<!-- AbstractZoomHandler.onTouch(android.view.View, android.view.MotionEvent) -->
<!-- AbstractZoomHandler.setMaxZoom(float) -->
<!-- AbstractZoomHandler.setZoomHardness(float) -->
<!-- AbstractZoomHandler.notifyZoomChanged(int) -->
<!-- File: IO.Anyline.Products.IAnylineUpdateDelegate.cs -->
<!-- IAnylineUpdateDelegate.onUpdateError(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.products']/interface[@name='IAnylineUpdateDelegate']/method[@name='onUpdateError' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">error</attr>
<!-- IAnylineUpdateDelegate.onUpdateProgress(java.lang.String, float) -->
<attr path="/api/package[@name='io.anyline.products']/interface[@name='IAnylineUpdateDelegate']/method[@name='onUpdateProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[1]" name="managedName">fileName</attr>
<attr path="/api/package[@name='io.anyline.products']/interface[@name='IAnylineUpdateDelegate']/method[@name='onUpdateProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[2]" name="managedName">progress</attr>
<!-- File: IO.Anyline.Modules.LicenseExpirationHelper.cs -->
<!-- LicenseExpirationHelper.showExpirationDialog(android.content.Context, android.content.DialogInterface.OnClickListener) -->
<!-- File: IO.Anyline.Plugin.Config.UniversalIdConfig.cs -->
<!-- UniversalIdConfig.Alphabet.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig.Alphabet']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- UniversalIdConfig.Alphabet.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig.Alphabet']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- UniversalIdConfig.setAllowedLayouts(io.anyline.plugin.config.AllowedLayouts) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setAllowedLayouts' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.AllowedLayouts']]/parameter[1]" name="managedName">allowedLayouts</attr>
<!-- UniversalIdConfig.setDrivingLicense(io.anyline.plugin.config.LayoutDrivingLicense) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setDrivingLicense' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LayoutDrivingLicense']]/parameter[1]" name="managedName">drivingLicense</attr>
<!-- UniversalIdConfig.setFaceDetectionEnabled(java.lang.Boolean) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setFaceDetectionEnabled' and count(parameter)=1 and parameter[1][@type='java.lang.Boolean']]/parameter[1]" name="managedName">faceDetectionEnabled</attr>
<!-- UniversalIdConfig.setIdFront(io.anyline.plugin.config.LayoutIdFront) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setIdFront' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LayoutIdFront']]/parameter[1]" name="managedName">idFront</attr>
<!-- UniversalIdConfig.setInsuranceCard(io.anyline.plugin.config.LayoutInsuranceCard) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setInsuranceCard' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LayoutInsuranceCard']]/parameter[1]" name="managedName">insuranceCard</attr>
<!-- UniversalIdConfig.setMrz(io.anyline.plugin.config.LayoutMrz) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setMrz' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LayoutMrz']]/parameter[1]" name="managedName">mrz</attr>
<!-- UniversalIdConfig.setAlphabet(io.anyline.plugin.config.UniversalIdConfig.Alphabet) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='UniversalIdConfig']/method[@name='setAlphabet' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.UniversalIdConfig.Alphabet']]/parameter[1]" name="managedName">alphabet</attr>
<!-- File: IO.Anyline2.Legacy.Products.IAnylineUpdateDelegate.cs -->
<!-- IAnylineUpdateDelegate.onUpdateError(java.lang.String) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/interface[@name='IAnylineUpdateDelegate']/method[@name='onUpdateError' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">error</attr>
<!-- IAnylineUpdateDelegate.onUpdateProgress(java.lang.String, float) -->
<attr path="/api/package[@name='io.anyline2.legacy.products']/interface[@name='IAnylineUpdateDelegate']/method[@name='onUpdateProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[1]" name="managedName">fileName</attr>
<attr path="/api/package[@name='io.anyline2.legacy.products']/interface[@name='IAnylineUpdateDelegate']/method[@name='onUpdateProgress' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='float']]/parameter[2]" name="managedName">progress</attr>
<!-- File: IO.Anyline.Nfc.Tools.AESCMAC.cs -->
<!-- AESCMAC.get(byte[], byte[]) -->
<!-- AESCMAC.get(byte[], byte[], byte[]) -->
<!-- File: IO.Anyline.Models.AnylineRawResult.cs -->
<!-- AnylineRawResult.getConfidence(java.lang.String) -->
<!-- AnylineRawResult.getResult(java.lang.String) -->
<!-- AnylineRawResult.getResultSpecialCharacters(java.lang.String) -->
<!-- AnylineRawResult.hasConfidenceValue(java.lang.String) -->
<!-- File: IO.Anyline.Plugin.Config.JapaneseLandingPermissionConfig.cs -->
<!-- JapaneseLandingPermissionConfig.setAirport(io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfig']/method[@name='setAirport' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption']]/parameter[1]" name="managedName">airport</attr>
<!-- JapaneseLandingPermissionConfig.setDateOfExpiry(io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfig']/method[@name='setDateOfExpiry' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption']]/parameter[1]" name="managedName">dateOfExpiry</attr>
<!-- JapaneseLandingPermissionConfig.setDateOfIssue(io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfig']/method[@name='setDateOfIssue' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption']]/parameter[1]" name="managedName">dateOfIssue</attr>
<!-- JapaneseLandingPermissionConfig.setDuration(io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfig']/method[@name='setDuration' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption']]/parameter[1]" name="managedName">duration</attr>
<!-- JapaneseLandingPermissionConfig.setStatus(io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='JapaneseLandingPermissionConfig']/method[@name='setStatus' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.JapaneseLandingPermissionConfigFieldOption']]/parameter[1]" name="managedName">status</attr>
<!-- File: IO.Anyline.Plugin.Config.LicensePlateConfig.cs -->
<!-- LicensePlateConfig.ScanMode.fromValue(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LicensePlateConfig.ScanMode']/method[@name='fromValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">value</attr>
<!-- LicensePlateConfig.ScanMode.valueOf(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LicensePlateConfig.ScanMode']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>
<!-- LicensePlateConfig.setMinConfidence(java.lang.Integer) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LicensePlateConfig']/method[@name='setMinConfidence' and count(parameter)=1 and parameter[1][@type='java.lang.Integer']]/parameter[1]" name="managedName">minConfidence</attr>
<!-- LicensePlateConfig.setValidationRegex(java.lang.String) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LicensePlateConfig']/method[@name='setValidationRegex' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">validationRegex</attr>
<!-- LicensePlateConfig.setScanMode(io.anyline.plugin.config.LicensePlateConfig.ScanMode) -->
<attr path="/api/package[@name='io.anyline.plugin.config']/class[@name='LicensePlateConfig']/method[@name='setScanMode' and count(parameter)=1 and parameter[1][@type='io.anyline.plugin.config.LicensePlateConfig.ScanMode']]/parameter[1]" name="managedName">scanMode</attr>
<!-- File: IO.Anyline2.IMapper.cs -->
<!-- Mapper.map(From) -->
<attr path="/api/package[@name='io.anyline2']/interface[@name='Mapper']/method[@name='map' and count(parameter)=1 and parameter[1][@type='From']]/parameter[1]" name="managedName">from</attr>
<!-- File: IO.Anyline.Opencv.Android.Utils.cs -->
<!-- Utils.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat) -->
<!-- Utils.bitmapToMat(android.graphics.Bitmap, io.anyline.opencv.core.Mat, boolean) -->
<!-- Utils.exportResource(android.content.Context, int) -->
<!-- Utils.exportResource(android.content.Context, int, java.lang.String) -->
<!-- Utils.loadResource(android.content.Context, int) -->
<!-- Utils.loadResource(android.content.Context, int, int) -->
<!-- Utils.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap) -->
<!-- Utils.matToBitmap(io.anyline.opencv.core.Mat, android.graphics.Bitmap, boolean) -->
<!-- File: IO.Anyline.Opencv.Core.CvException.cs -->
<!-- CvException.CvException(java.lang.String) -->
<!-- File: IO.Anyline.Opencv.Imgproc.CLAHE.cs -->
<!-- CLAHE.CLAHE(long) -->
<!-- CLAHE.setClipLimit(double) -->
<!-- CLAHE.setTilesGridSize(io.anyline.opencv.core.Size) -->
<!-- CLAHE.apply(io.anyline.opencv.core.Mat, io.anyline.opencv.core.Mat) -->
</metadata>
